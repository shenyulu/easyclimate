
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_gallery/plot_interp_mesh2point.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_gallery_plot_interp_mesh2point.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_gallery_plot_interp_mesh2point.py:


Interpolate grid data to station data
==============================================

This example demonstrates how to interpolate 2m temperature data from a regular grid
(ERA5 reanalysis data) to specific point locations (cities in Eastern China) using
the :py:func:`easyclimate.interp.interp_mesh2point <easyclimate.interp.interp_mesh2point>` function from the easyclimate package.

The workflow includes:

1. Loading and visualizing the grid data
2. Creating a DataFrame with point locations
3. Performing the interpolation
4. Visualizing the results with interpolated values

Before proceeding with all the steps, first import some necessary libraries and packages

.. GENERATED FROM PYTHON SOURCE LINES 19-25

.. code-block:: Python

    import easyclimate as ecl
    import xarray as xr
    import cartopy.crs as ccrs
    import numpy as np
    import pandas as pd








.. GENERATED FROM PYTHON SOURCE LINES 26-33

Load 2m temperature data from a NetCDF file (ERA5 reanalysis data)
The data contains temperature values on a regular latitude-longitude grid

.. tip::

  You can download following datasets here: :download:`Download js_t2m_ERA5_2025052000.nc <https://huggingface.co/datasets/shenyulu/easyclimate/resolve/main/tutorial_data/js_t2m_ERA5_2025052000.nc>`


.. GENERATED FROM PYTHON SOURCE LINES 33-36

.. code-block:: Python

    t2m_data = xr.open_dataset("js_t2m_ERA5_2025052000.nc").t2m
    t2m_data






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
    <defs>
    <symbol id="icon-database" viewBox="0 0 32 32">
    <path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
    <path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    <path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    </symbol>
    <symbol id="icon-file-text2" viewBox="0 0 32 32">
    <path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
    <path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    </symbol>
    </defs>
    </svg>
    <style>/* CSS stylesheet for displaying xarray objects in notebooks */

    :root {
      --xr-font-color0: var(
        --jp-content-font-color0,
        var(--pst-color-text-base rgba(0, 0, 0, 1))
      );
      --xr-font-color2: var(
        --jp-content-font-color2,
        var(--pst-color-text-base, rgba(0, 0, 0, 0.54))
      );
      --xr-font-color3: var(
        --jp-content-font-color3,
        var(--pst-color-text-base, rgba(0, 0, 0, 0.38))
      );
      --xr-border-color: var(
        --jp-border-color2,
        hsl(from var(--pst-color-on-background, white) h s calc(l - 10))
      );
      --xr-disabled-color: var(
        --jp-layout-color3,
        hsl(from var(--pst-color-on-background, white) h s calc(l - 40))
      );
      --xr-background-color: var(
        --jp-layout-color0,
        var(--pst-color-on-background, white)
      );
      --xr-background-color-row-even: var(
        --jp-layout-color1,
        hsl(from var(--pst-color-on-background, white) h s calc(l - 5))
      );
      --xr-background-color-row-odd: var(
        --jp-layout-color2,
        hsl(from var(--pst-color-on-background, white) h s calc(l - 15))
      );
    }

    html[theme="dark"],
    html[data-theme="dark"],
    body[data-theme="dark"],
    body.vscode-dark {
      --xr-font-color0: var(
        --jp-content-font-color0,
        var(--pst-color-text-base, rgba(255, 255, 255, 1))
      );
      --xr-font-color2: var(
        --jp-content-font-color2,
        var(--pst-color-text-base, rgba(255, 255, 255, 0.54))
      );
      --xr-font-color3: var(
        --jp-content-font-color3,
        var(--pst-color-text-base, rgba(255, 255, 255, 0.38))
      );
      --xr-border-color: var(
        --jp-border-color2,
        hsl(from var(--pst-color-on-background, #111111) h s calc(l + 10))
      );
      --xr-disabled-color: var(
        --jp-layout-color3,
        hsl(from var(--pst-color-on-background, #111111) h s calc(l + 40))
      );
      --xr-background-color: var(
        --jp-layout-color0,
        var(--pst-color-on-background, #111111)
      );
      --xr-background-color-row-even: var(
        --jp-layout-color1,
        hsl(from var(--pst-color-on-background, #111111) h s calc(l + 5))
      );
      --xr-background-color-row-odd: var(
        --jp-layout-color2,
        hsl(from var(--pst-color-on-background, #111111) h s calc(l + 15))
      );
    }

    .xr-wrap {
      display: block !important;
      min-width: 300px;
      max-width: 700px;
      line-height: 1.6;
    }

    .xr-text-repr-fallback {
      /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
      display: none;
    }

    .xr-header {
      padding-top: 6px;
      padding-bottom: 6px;
      margin-bottom: 4px;
      border-bottom: solid 1px var(--xr-border-color);
    }

    .xr-header > div,
    .xr-header > ul {
      display: inline;
      margin-top: 0;
      margin-bottom: 0;
    }

    .xr-obj-type,
    .xr-obj-name,
    .xr-group-name {
      margin-left: 2px;
      margin-right: 10px;
    }

    .xr-group-name::before {
      content: "📁";
      padding-right: 0.3em;
    }

    .xr-group-name,
    .xr-obj-type {
      color: var(--xr-font-color2);
    }

    .xr-sections {
      padding-left: 0 !important;
      display: grid;
      grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;
      margin-block-start: 0;
      margin-block-end: 0;
    }

    .xr-section-item {
      display: contents;
    }

    .xr-section-item input {
      display: inline-block;
      opacity: 0;
      height: 0;
      margin: 0;
    }

    .xr-section-item input + label {
      color: var(--xr-disabled-color);
      border: 2px solid transparent !important;
    }

    .xr-section-item input:enabled + label {
      cursor: pointer;
      color: var(--xr-font-color2);
    }

    .xr-section-item input:focus + label {
      border: 2px solid var(--xr-font-color0) !important;
    }

    .xr-section-item input:enabled + label:hover {
      color: var(--xr-font-color0);
    }

    .xr-section-summary {
      grid-column: 1;
      color: var(--xr-font-color2);
      font-weight: 500;
    }

    .xr-section-summary > span {
      display: inline-block;
      padding-left: 0.5em;
    }

    .xr-section-summary-in:disabled + label {
      color: var(--xr-font-color2);
    }

    .xr-section-summary-in + label:before {
      display: inline-block;
      content: "►";
      font-size: 11px;
      width: 15px;
      text-align: center;
    }

    .xr-section-summary-in:disabled + label:before {
      color: var(--xr-disabled-color);
    }

    .xr-section-summary-in:checked + label:before {
      content: "▼";
    }

    .xr-section-summary-in:checked + label > span {
      display: none;
    }

    .xr-section-summary,
    .xr-section-inline-details {
      padding-top: 4px;
    }

    .xr-section-inline-details {
      grid-column: 2 / -1;
    }

    .xr-section-details {
      display: none;
      grid-column: 1 / -1;
      margin-top: 4px;
      margin-bottom: 5px;
    }

    .xr-section-summary-in:checked ~ .xr-section-details {
      display: contents;
    }

    .xr-group-box {
      display: inline-grid;
      grid-template-columns: 0px 20px auto;
      width: 100%;
    }

    .xr-group-box-vline {
      grid-column-start: 1;
      border-right: 0.2em solid;
      border-color: var(--xr-border-color);
      width: 0px;
    }

    .xr-group-box-hline {
      grid-column-start: 2;
      grid-row-start: 1;
      height: 1em;
      width: 20px;
      border-bottom: 0.2em solid;
      border-color: var(--xr-border-color);
    }

    .xr-group-box-contents {
      grid-column-start: 3;
    }

    .xr-array-wrap {
      grid-column: 1 / -1;
      display: grid;
      grid-template-columns: 20px auto;
    }

    .xr-array-wrap > label {
      grid-column: 1;
      vertical-align: top;
    }

    .xr-preview {
      color: var(--xr-font-color3);
    }

    .xr-array-preview,
    .xr-array-data {
      padding: 0 5px !important;
      grid-column: 2;
    }

    .xr-array-data,
    .xr-array-in:checked ~ .xr-array-preview {
      display: none;
    }

    .xr-array-in:checked ~ .xr-array-data,
    .xr-array-preview {
      display: inline-block;
    }

    .xr-dim-list {
      display: inline-block !important;
      list-style: none;
      padding: 0 !important;
      margin: 0;
    }

    .xr-dim-list li {
      display: inline-block;
      padding: 0;
      margin: 0;
    }

    .xr-dim-list:before {
      content: "(";
    }

    .xr-dim-list:after {
      content: ")";
    }

    .xr-dim-list li:not(:last-child):after {
      content: ",";
      padding-right: 5px;
    }

    .xr-has-index {
      font-weight: bold;
    }

    .xr-var-list,
    .xr-var-item {
      display: contents;
    }

    .xr-var-item > div,
    .xr-var-item label,
    .xr-var-item > .xr-var-name span {
      background-color: var(--xr-background-color-row-even);
      border-color: var(--xr-background-color-row-odd);
      margin-bottom: 0;
      padding-top: 2px;
    }

    .xr-var-item > .xr-var-name:hover span {
      padding-right: 5px;
    }

    .xr-var-list > li:nth-child(odd) > div,
    .xr-var-list > li:nth-child(odd) > label,
    .xr-var-list > li:nth-child(odd) > .xr-var-name span {
      background-color: var(--xr-background-color-row-odd);
      border-color: var(--xr-background-color-row-even);
    }

    .xr-var-name {
      grid-column: 1;
    }

    .xr-var-dims {
      grid-column: 2;
    }

    .xr-var-dtype {
      grid-column: 3;
      text-align: right;
      color: var(--xr-font-color2);
    }

    .xr-var-preview {
      grid-column: 4;
    }

    .xr-index-preview {
      grid-column: 2 / 5;
      color: var(--xr-font-color2);
    }

    .xr-var-name,
    .xr-var-dims,
    .xr-var-dtype,
    .xr-preview,
    .xr-attrs dt {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      padding-right: 10px;
    }

    .xr-var-name:hover,
    .xr-var-dims:hover,
    .xr-var-dtype:hover,
    .xr-attrs dt:hover {
      overflow: visible;
      width: auto;
      z-index: 1;
    }

    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      display: none;
      border-top: 2px dotted var(--xr-background-color);
      padding-bottom: 20px !important;
      padding-top: 10px !important;
    }

    .xr-var-attrs-in + label,
    .xr-var-data-in + label,
    .xr-index-data-in + label {
      padding: 0 1px;
    }

    .xr-var-attrs-in:checked ~ .xr-var-attrs,
    .xr-var-data-in:checked ~ .xr-var-data,
    .xr-index-data-in:checked ~ .xr-index-data {
      display: block;
    }

    .xr-var-data > table {
      float: right;
    }

    .xr-var-data > pre,
    .xr-index-data > pre,
    .xr-var-data > table > tbody > tr {
      background-color: transparent !important;
    }

    .xr-var-name span,
    .xr-var-data,
    .xr-index-name div,
    .xr-index-data,
    .xr-attrs {
      padding-left: 25px !important;
    }

    .xr-attrs,
    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      grid-column: 1 / -1;
    }

    dl.xr-attrs {
      padding: 0;
      margin: 0;
      display: grid;
      grid-template-columns: 125px auto;
    }

    .xr-attrs dt,
    .xr-attrs dd {
      padding: 0;
      margin: 0;
      float: left;
      padding-right: 10px;
      width: auto;
    }

    .xr-attrs dt {
      font-weight: normal;
      grid-column: 1;
    }

    .xr-attrs dt:hover span {
      display: inline-block;
      background: var(--xr-background-color);
      padding-right: 10px;
    }

    .xr-attrs dd {
      grid-column: 2;
      white-space: pre-wrap;
      word-break: break-all;
    }

    .xr-icon-database,
    .xr-icon-file-text2,
    .xr-no-icon {
      display: inline-block;
      vertical-align: middle;
      width: 1em;
      height: 1.5em !important;
      stroke-width: 0;
      stroke: currentColor;
      fill: currentColor;
    }

    .xr-var-attrs-in:checked + label > .xr-icon-file-text2,
    .xr-var-data-in:checked + label > .xr-icon-database,
    .xr-index-data-in:checked + label > .xr-icon-database {
      color: var(--xr-font-color0);
      filter: drop-shadow(1px 1px 5px var(--xr-font-color2));
      stroke-width: 0.8px;
    }
    </style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray &#x27;t2m&#x27; (lat: 81, lon: 121)&gt; Size: 39kB
    [9801 values with dtype=float32]
    Coordinates:
      * lat         (lat) float64 648B 45.0 44.75 44.5 44.25 ... 25.5 25.25 25.0
      * lon         (lon) float64 968B 100.0 100.2 100.5 100.8 ... 129.5 129.8 130.0
        number      int64 8B ...
        valid_time  datetime64[ns] 8B ...
        expver      &lt;U4 16B ...
    Attributes: (12/32)
        GRIB_paramId:                             167
        GRIB_dataType:                            an
        GRIB_numberOfPoints:                      1038240
        GRIB_typeOfLevel:                         surface
        GRIB_stepUnits:                           1
        GRIB_stepType:                            instant
        ...                                       ...
        GRIB_totalNumber:                         0
        GRIB_units:                               K
        long_name:                                2 metre temperature
        units:                                    degC
        standard_name:                            unknown
        GRIB_surface:                             0.0</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-obj-name'>&#x27;t2m&#x27;</div><ul class='xr-dim-list'><li><span class='xr-has-index'>lat</span>: 81</li><li><span class='xr-has-index'>lon</span>: 121</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-87bcb1f6-0330-4854-9b55-9945b38d369a' class='xr-array-in' type='checkbox' checked><label for='section-87bcb1f6-0330-4854-9b55-9945b38d369a' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>...</span></div><div class='xr-array-data'><pre>[9801 values with dtype=float32]</pre></div></div></li><li class='xr-section-item'><input id='section-d14ea9bb-ad15-4e6e-9e2d-665d70ad3546' class='xr-section-summary-in' type='checkbox'  checked><label for='section-d14ea9bb-ad15-4e6e-9e2d-665d70ad3546' class='xr-section-summary' >Coordinates: <span>(5)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lat</span></div><div class='xr-var-dims'>(lat)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>45.0 44.75 44.5 ... 25.5 25.25 25.0</div><input id='attrs-9a1762aa-5ab9-4297-9f70-2c39e691db60' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-9a1762aa-5ab9-4297-9f70-2c39e691db60' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-f1090382-e6fa-4da8-904d-f79cc13891cb' class='xr-var-data-in' type='checkbox'><label for='data-f1090382-e6fa-4da8-904d-f79cc13891cb' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>degrees_north</dd><dt><span>standard_name :</span></dt><dd>latitude</dd><dt><span>long_name :</span></dt><dd>latitude</dd><dt><span>stored_direction :</span></dt><dd>decreasing</dd></dl></div><div class='xr-var-data'><pre>array([45.  , 44.75, 44.5 , 44.25, 44.  , 43.75, 43.5 , 43.25, 43.  , 42.75,
           42.5 , 42.25, 42.  , 41.75, 41.5 , 41.25, 41.  , 40.75, 40.5 , 40.25,
           40.  , 39.75, 39.5 , 39.25, 39.  , 38.75, 38.5 , 38.25, 38.  , 37.75,
           37.5 , 37.25, 37.  , 36.75, 36.5 , 36.25, 36.  , 35.75, 35.5 , 35.25,
           35.  , 34.75, 34.5 , 34.25, 34.  , 33.75, 33.5 , 33.25, 33.  , 32.75,
           32.5 , 32.25, 32.  , 31.75, 31.5 , 31.25, 31.  , 30.75, 30.5 , 30.25,
           30.  , 29.75, 29.5 , 29.25, 29.  , 28.75, 28.5 , 28.25, 28.  , 27.75,
           27.5 , 27.25, 27.  , 26.75, 26.5 , 26.25, 26.  , 25.75, 25.5 , 25.25,
           25.  ])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lon</span></div><div class='xr-var-dims'>(lon)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>100.0 100.2 100.5 ... 129.8 130.0</div><input id='attrs-f0ec7b8f-712e-4116-a5be-86c28ab5feb5' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-f0ec7b8f-712e-4116-a5be-86c28ab5feb5' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-f4cc06f8-a247-40e0-ae02-adc5c3085f97' class='xr-var-data-in' type='checkbox'><label for='data-f4cc06f8-a247-40e0-ae02-adc5c3085f97' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>units :</span></dt><dd>degrees_east</dd><dt><span>standard_name :</span></dt><dd>longitude</dd><dt><span>long_name :</span></dt><dd>longitude</dd></dl></div><div class='xr-var-data'><pre>array([100.  , 100.25, 100.5 , 100.75, 101.  , 101.25, 101.5 , 101.75, 102.  ,
           102.25, 102.5 , 102.75, 103.  , 103.25, 103.5 , 103.75, 104.  , 104.25,
           104.5 , 104.75, 105.  , 105.25, 105.5 , 105.75, 106.  , 106.25, 106.5 ,
           106.75, 107.  , 107.25, 107.5 , 107.75, 108.  , 108.25, 108.5 , 108.75,
           109.  , 109.25, 109.5 , 109.75, 110.  , 110.25, 110.5 , 110.75, 111.  ,
           111.25, 111.5 , 111.75, 112.  , 112.25, 112.5 , 112.75, 113.  , 113.25,
           113.5 , 113.75, 114.  , 114.25, 114.5 , 114.75, 115.  , 115.25, 115.5 ,
           115.75, 116.  , 116.25, 116.5 , 116.75, 117.  , 117.25, 117.5 , 117.75,
           118.  , 118.25, 118.5 , 118.75, 119.  , 119.25, 119.5 , 119.75, 120.  ,
           120.25, 120.5 , 120.75, 121.  , 121.25, 121.5 , 121.75, 122.  , 122.25,
           122.5 , 122.75, 123.  , 123.25, 123.5 , 123.75, 124.  , 124.25, 124.5 ,
           124.75, 125.  , 125.25, 125.5 , 125.75, 126.  , 126.25, 126.5 , 126.75,
           127.  , 127.25, 127.5 , 127.75, 128.  , 128.25, 128.5 , 128.75, 129.  ,
           129.25, 129.5 , 129.75, 130.  ])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>number</span></div><div class='xr-var-dims'>()</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>...</div><input id='attrs-9249647b-2f8d-4bbf-ae35-86c6f320f6c9' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-9249647b-2f8d-4bbf-ae35-86c6f320f6c9' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-8c813d93-a023-4181-af83-f303fa4f052a' class='xr-var-data-in' type='checkbox'><label for='data-8c813d93-a023-4181-af83-f303fa4f052a' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>long_name :</span></dt><dd>ensemble member numerical id</dd><dt><span>units :</span></dt><dd>1</dd><dt><span>standard_name :</span></dt><dd>realization</dd></dl></div><div class='xr-var-data'><pre>[1 values with dtype=int64]</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>valid_time</span></div><div class='xr-var-dims'>()</div><div class='xr-var-dtype'>datetime64[ns]</div><div class='xr-var-preview xr-preview'>...</div><input id='attrs-7aec5391-46ec-4209-af87-ec4c6699e986' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-7aec5391-46ec-4209-af87-ec4c6699e986' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-ff2e2046-3277-4607-a291-b907c9f9a1d0' class='xr-var-data-in' type='checkbox'><label for='data-ff2e2046-3277-4607-a291-b907c9f9a1d0' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>long_name :</span></dt><dd>time</dd><dt><span>standard_name :</span></dt><dd>time</dd></dl></div><div class='xr-var-data'><pre>[1 values with dtype=datetime64[ns]]</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>expver</span></div><div class='xr-var-dims'>()</div><div class='xr-var-dtype'>&lt;U4</div><div class='xr-var-preview xr-preview'>...</div><input id='attrs-82e0f01e-2a21-4f14-9470-b8b2200c1e82' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-82e0f01e-2a21-4f14-9470-b8b2200c1e82' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-9e5b9060-28de-4413-92e5-659d196b21cd' class='xr-var-data-in' type='checkbox'><label for='data-9e5b9060-28de-4413-92e5-659d196b21cd' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>[1 values with dtype=&lt;U4]</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-46951ef0-5a29-4ab4-9576-1107727a1dde' class='xr-section-summary-in' type='checkbox'  ><label for='section-46951ef0-5a29-4ab4-9576-1107727a1dde' class='xr-section-summary' >Attributes: <span>(32)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>GRIB_paramId :</span></dt><dd>167</dd><dt><span>GRIB_dataType :</span></dt><dd>an</dd><dt><span>GRIB_numberOfPoints :</span></dt><dd>1038240</dd><dt><span>GRIB_typeOfLevel :</span></dt><dd>surface</dd><dt><span>GRIB_stepUnits :</span></dt><dd>1</dd><dt><span>GRIB_stepType :</span></dt><dd>instant</dd><dt><span>GRIB_gridType :</span></dt><dd>regular_ll</dd><dt><span>GRIB_uvRelativeToGrid :</span></dt><dd>0</dd><dt><span>GRIB_NV :</span></dt><dd>0</dd><dt><span>GRIB_Nx :</span></dt><dd>1440</dd><dt><span>GRIB_Ny :</span></dt><dd>721</dd><dt><span>GRIB_cfName :</span></dt><dd>unknown</dd><dt><span>GRIB_cfVarName :</span></dt><dd>t2m</dd><dt><span>GRIB_gridDefinitionDescription :</span></dt><dd>Latitude/Longitude Grid</dd><dt><span>GRIB_iDirectionIncrementInDegrees :</span></dt><dd>0.25</dd><dt><span>GRIB_iScansNegatively :</span></dt><dd>0</dd><dt><span>GRIB_jDirectionIncrementInDegrees :</span></dt><dd>0.25</dd><dt><span>GRIB_jPointsAreConsecutive :</span></dt><dd>0</dd><dt><span>GRIB_jScansPositively :</span></dt><dd>0</dd><dt><span>GRIB_latitudeOfFirstGridPointInDegrees :</span></dt><dd>90.0</dd><dt><span>GRIB_latitudeOfLastGridPointInDegrees :</span></dt><dd>-90.0</dd><dt><span>GRIB_longitudeOfFirstGridPointInDegrees :</span></dt><dd>0.0</dd><dt><span>GRIB_longitudeOfLastGridPointInDegrees :</span></dt><dd>359.75</dd><dt><span>GRIB_missingValue :</span></dt><dd>3.4028234663852886e+38</dd><dt><span>GRIB_name :</span></dt><dd>2 metre temperature</dd><dt><span>GRIB_shortName :</span></dt><dd>2t</dd><dt><span>GRIB_totalNumber :</span></dt><dd>0</dd><dt><span>GRIB_units :</span></dt><dd>K</dd><dt><span>long_name :</span></dt><dd>2 metre temperature</dd><dt><span>units :</span></dt><dd>degC</dd><dt><span>standard_name :</span></dt><dd>unknown</dd><dt><span>GRIB_surface :</span></dt><dd>0.0</dd></dl></div></li></ul></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 37-38

Create a basemap plot focused on Eastern China region

.. GENERATED FROM PYTHON SOURCE LINES 38-53

.. code-block:: Python

    fig, ax = ecl.plot.quick_draw_spatial_basemap(figsize=(5, 5))
    ax.set_extent([116, 123, 30, 36], crs = ccrs.PlateCarree())

    # Select and plot temperature data for the region of interest
    draw_data = t2m_data.sel(lon = slice(100, 140), lat = slice(45, 25))
    draw_data.plot.contourf(
        ax = ax,
        transform=ccrs.PlateCarree(),
        cbar_kwargs = {'location': 'bottom'},
        levels = np.linspace(17, 29, 21),
        cmap = "plasma"
    )

    ax.set_title("2m temperature")




.. image-sg:: /auto_gallery/images/sphx_glr_plot_interp_mesh2point_001.png
   :alt: 2m temperature
   :srcset: /auto_gallery/images/sphx_glr_plot_interp_mesh2point_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Text(0.5, 1.0, '2m temperature')



.. GENERATED FROM PYTHON SOURCE LINES 54-56

Create a DataFrame containing city locations (longitude and latitude)
These are the points where we want to interpolate temperature values

.. GENERATED FROM PYTHON SOURCE LINES 56-64

.. code-block:: Python

    data = {
        "Site": ["Nanjing (南京)", "Suzhou (苏州)", "Shanghai (上海)", "Chuzhou (滁州)", "Changzhou (常州)", "Xuzhou (徐州)", "Yancheng (盐城)"],
        "lon": [118.7788631, 120.6212881, 121.4700152, 118.3139455, 119.9691539, 117.1810431, 120.1577019],
        "lat": [32.0438284, 31.311123, 31.2312707, 32.3027377, 31.8122623, 34.2665258, 33.349559]
    }
    df = pd.DataFrame(data)
    df






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>Site</th>
          <th>lon</th>
          <th>lat</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>Nanjing (南京)</td>
          <td>118.778863</td>
          <td>32.043828</td>
        </tr>
        <tr>
          <th>1</th>
          <td>Suzhou (苏州)</td>
          <td>120.621288</td>
          <td>31.311123</td>
        </tr>
        <tr>
          <th>2</th>
          <td>Shanghai (上海)</td>
          <td>121.470015</td>
          <td>31.231271</td>
        </tr>
        <tr>
          <th>3</th>
          <td>Chuzhou (滁州)</td>
          <td>118.313946</td>
          <td>32.302738</td>
        </tr>
        <tr>
          <th>4</th>
          <td>Changzhou (常州)</td>
          <td>119.969154</td>
          <td>31.812262</td>
        </tr>
        <tr>
          <th>5</th>
          <td>Xuzhou (徐州)</td>
          <td>117.181043</td>
          <td>34.266526</td>
        </tr>
        <tr>
          <th>6</th>
          <td>Yancheng (盐城)</td>
          <td>120.157702</td>
          <td>33.349559</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 65-72

Use interp_mesh2point to interpolate grid values to point locations
Parameters:

- ``t2m_data``: Input grid data (xarray DataArray)
- ``df``: DataFrame with point locations
- ``lon/lat_dim_mesh``: Name of lon/lat dimensions in grid data
- ``lon/lat_dim_df``: Name of lon/lat columns in DataFrame

.. GENERATED FROM PYTHON SOURCE LINES 72-81

.. code-block:: Python

    df_interp = ecl.interp.interp_mesh2point(
        t2m_data, df,
        lon_dim_mesh = "lon",
        lat_dim_mesh = "lat",
        lon_dim_df = "lon",
        lat_dim_df = "lat"
    )
    df_interp






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>Site</th>
          <th>lon</th>
          <th>lat</th>
          <th>interpolated_value</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>Nanjing (南京)</td>
          <td>118.778863</td>
          <td>32.043828</td>
          <td>27.434105</td>
        </tr>
        <tr>
          <th>1</th>
          <td>Suzhou (苏州)</td>
          <td>120.621288</td>
          <td>31.311123</td>
          <td>27.056907</td>
        </tr>
        <tr>
          <th>2</th>
          <td>Shanghai (上海)</td>
          <td>121.470015</td>
          <td>31.231271</td>
          <td>25.860559</td>
        </tr>
        <tr>
          <th>3</th>
          <td>Chuzhou (滁州)</td>
          <td>118.313946</td>
          <td>32.302738</td>
          <td>27.139358</td>
        </tr>
        <tr>
          <th>4</th>
          <td>Changzhou (常州)</td>
          <td>119.969154</td>
          <td>31.812262</td>
          <td>27.489566</td>
        </tr>
        <tr>
          <th>5</th>
          <td>Xuzhou (徐州)</td>
          <td>117.181043</td>
          <td>34.266526</td>
          <td>28.625858</td>
        </tr>
        <tr>
          <th>6</th>
          <td>Yancheng (盐城)</td>
          <td>120.157702</td>
          <td>33.349559</td>
          <td>26.331501</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 82-83

Create a combined plot showing both the grid data and interpolated points

.. GENERATED FROM PYTHON SOURCE LINES 83-122

.. code-block:: Python

    proj_trans = ccrs.PlateCarree() # Coordinate reference system for transformations

    fig, ax = ecl.plot.quick_draw_spatial_basemap(figsize=(5, 5))
    ax.set_extent([116, 123, 30, 36], crs = proj_trans)

    draw_data = t2m_data.sel(lon = slice(100, 140), lat = slice(45, 25))

    # Plot the grid data again for reference
    draw_data.plot.contourf(
        ax = ax,
        transform=ccrs.PlateCarree(),
        cbar_kwargs = {'location': 'bottom'},
        levels = np.linspace(17, 29, 21),
        cmap = "plasma"
    )

    # Plot the point locations as red dots
    ax.scatter(
        df_interp["lon"],
        df_interp["lat"],
        transform = proj_trans,
        color = 'r',
        s = 5
    )

    # Add temperature values as text labels near each point
    for i, row in df_interp.iterrows():
        ax.text(
            row["lon"],
            row["lat"],
            str(np.round(row["interpolated_value"], decimals=2)), # Rounded to 2 decimal places
            transform=proj_trans,
            fontsize=10,
            ha='center',  # Horizontal alignment
            va='bottom',  # Vertical alignment
            color='blue'
    )

    ax.set_title("2m temperature (Points)")



.. image-sg:: /auto_gallery/images/sphx_glr_plot_interp_mesh2point_002.png
   :alt: 2m temperature (Points)
   :srcset: /auto_gallery/images/sphx_glr_plot_interp_mesh2point_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Text(0.5, 1.0, '2m temperature (Points)')




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 2.014 seconds)


.. _sphx_glr_download_auto_gallery_plot_interp_mesh2point.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_interp_mesh2point.ipynb <plot_interp_mesh2point.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_interp_mesh2point.py <plot_interp_mesh2point.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_interp_mesh2point.zip <plot_interp_mesh2point.zip>`

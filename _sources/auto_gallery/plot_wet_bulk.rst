
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_gallery/plot_wet_bulk.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_gallery_plot_wet_bulk.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_gallery_plot_wet_bulk.py:


.. _wet_bulk_example:

Wet-bulb Temperature
======================
Wet-bulb temperature is a critical meteorological parameter that represents the lowest temperature to
which air can be cooled by evaporation at constant pressure. It is widely used in weather forecasting,
heat stress assessment, and climate studies. The easyclimate library provides multiple methods to
compute wet-bulb temperature, including iterative approaches, empirical formulas,
and approximations based on established research.

The example is structured into several sections, each performing a specific task, such as data initialization,
mesh grid creation, wet-bulb temperature calculations using different methods,
and plotting results for analysis. The following sections describe the intent of each part.

This part imports necessary Python libraries for data manipulation and visualization:

.. GENERATED FROM PYTHON SOURCE LINES 19-24

.. code-block:: Python

    import easyclimate as ecl
    import xarray as xr
    import numpy as np
    import matplotlib.pyplot as plt








.. GENERATED FROM PYTHON SOURCE LINES 25-33

This section creates synthetic datasets to represent atmospheric conditions:

- ``temp_data``: A 1D array of temperatures ranging from -20°C to 50°C.
- ``relative_humidity_data``: A 1D array of relative humidity values from 0% to 100%.
- ``deltaT_data``: A 1D array representing the temperature difference (:math:`T - T_d`) from 0°C to 30°C.

These arrays serve as input for subsequent calculations,
covering a wide range of conditions to test the wet-bulb temperature methods.

.. GENERATED FROM PYTHON SOURCE LINES 33-51

.. code-block:: Python


    temp_data = xr.DataArray(
        np.linspace(-20, 50, 71),
        dims="temp",
        coords={'temp': np.linspace(-20, 50, 71)}
    )
    relative_humidity_data = xr.DataArray(
        np.linspace(0, 100, 101),
        dims="rh",
        coords={'rh': np.linspace(0, 100, 101)}
    )

    deltaT_data = xr.DataArray(
        np.linspace(0, 30, 31),
        dims="deltaT",
        coords={'deltaT': np.linspace(0, 30, 31)}
    )








.. GENERATED FROM PYTHON SOURCE LINES 52-60

This section defines the generate_mesh function, which creates 2D mesh grids from two 1D :py:class:`xarray.DataArray<xarray.DataArray>` inputs. The function:

- Uses numpy.meshgrid to generate grid arrays.
- Constructs :py:class:`xarray.DataArray<xarray.DataArray>` objects for each grid, preserving coordinates and dimensions.
- Returns two DataArray objects representing the meshed variables.

This function is used to create 2D grids for temperature, relative humidity,
and dewpoint differences, enabling calculations over a range of conditions.

.. GENERATED FROM PYTHON SOURCE LINES 60-88

.. code-block:: Python


    def generate_mesh(
        da1: xr.DataArray,
        da2: xr.DataArray,
    ):
        da1_grid, da2_grid = np.meshgrid(da1, da2)

        dim_1 = da2.dims[0]
        dim_2 = da1.dims[0]
        dim_1_array = da2[dim_1].data
        dim_2_array = da1[dim_2].data

        da1_dataarray = xr.DataArray(
            da1_grid,
            dims=(dim_1, dim_2),
            coords={dim_1: dim_1_array, dim_2: dim_2_array}
        )
        da1_dataarray.name = dim_2

        da2_dataarray = xr.DataArray(
            da2_grid,
            dims=(dim_1, dim_2),
            coords={dim_1: dim_1_array, dim_2: dim_2_array}
        )
        da2_dataarray.name = dim_1

        return da1_dataarray, da2_dataarray








.. GENERATED FROM PYTHON SOURCE LINES 89-96

This section applies the generate_mesh function to create 2D grids:

- temp_mesh1, rh_mesh: Meshes of temperature and relative humidity.
- temp_mesh2, deltaT_mesh: Meshes of temperature and temperature difference.
- td_mesh: Dewpoint temperature calculated as temp_mesh2 - deltaT_mesh.

These grids are used as inputs for wet-bulb temperature calculations.

.. GENERATED FROM PYTHON SOURCE LINES 96-101

.. code-block:: Python


    temp_mesh1, rh_mesh = generate_mesh(temp_data, relative_humidity_data)
    temp_mesh2, deltaT_mesh = generate_mesh(temp_data, deltaT_data)
    td_mesh = temp_mesh2 - deltaT_mesh








.. GENERATED FROM PYTHON SOURCE LINES 102-118

Iterative Calculation
-----------------------------------------------------
This section computes wet-bulb potential temperature using the :py:func:`easyclimate.physics.calc_wet_bulb_potential_temperature_iteration <easyclimate.physics.calc_wet_bulb_potential_temperature_iteration>`
function from easyclimate. The function:

- Takes temperature, relative humidity, and pressure (1013.25 hPa) as inputs.
- Uses an iterative approach based on the psychrometric formula with a psychrometer constant (:math:`A = 0.662 \cdot 10^{-3}`).
- Outputs wet-bulb temperature in °C for a 2D grid of conditions.

.. seealso::

    - Fan, J. (1987). Determination of the Psychrometer Coefficient A of the WMO Reference Psychrometer by Comparison with a Standard Gravimetric Hygrometer. Journal of Atmospheric and Oceanic Technology, 4(1), 239-244. https://journals.ametsoc.org/view/journals/atot/4/1/1520-0426_1987_004_0239_dotpco_2_0_co_2.xml
    - Wang Haijun. (2011). Two Wet-Bulb Temperature Estimation Methods and Error Analysis. Meteorological Monthly (Chinese), 37(4): 497-502. website: http://qxqk.nmc.cn/html/2011/4/20110415.html
    - Cheng Zhi, Wu Biwen, Zhu Baolin, et al, (2011). Wet-Bulb Temperature Looping Iterative Scheme and Its Application. Meteorological Monthly (Chinese), 37(1): 112-115. website: http://qxqk.nmc.cn/html/2011/1/20110115.html

The result, wet_bulb_iteration, is extracted for a single pressure level.

.. GENERATED FROM PYTHON SOURCE LINES 118-128

.. code-block:: Python


    wet_bulb_iteration = ecl.physics.calc_wet_bulb_potential_temperature_iteration(
        temp_mesh1,
        rh_mesh,
        xr.DataArray([1013.25], dims="p"),
        "degC", "%", "hPa",
        A = 0.662* 10 ** (-3),
    ).isel(p = 0)
    wet_bulb_iteration





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/numpy/lib/_function_base_impl.py:2625: RuntimeWarning: invalid value encountered in _wet_bulb_iteration (vectorized)
      outputs = ufunc(*args, out=...)


.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
    <defs>
    <symbol id="icon-database" viewBox="0 0 32 32">
    <path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
    <path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    <path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    </symbol>
    <symbol id="icon-file-text2" viewBox="0 0 32 32">
    <path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
    <path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    </symbol>
    </defs>
    </svg>
    <style>/* CSS stylesheet for displaying xarray objects in notebooks */

    :root {
      --xr-font-color0: var(
        --jp-content-font-color0,
        var(--pst-color-text-base rgba(0, 0, 0, 1))
      );
      --xr-font-color2: var(
        --jp-content-font-color2,
        var(--pst-color-text-base, rgba(0, 0, 0, 0.54))
      );
      --xr-font-color3: var(
        --jp-content-font-color3,
        var(--pst-color-text-base, rgba(0, 0, 0, 0.38))
      );
      --xr-border-color: var(
        --jp-border-color2,
        hsl(from var(--pst-color-on-background, white) h s calc(l - 10))
      );
      --xr-disabled-color: var(
        --jp-layout-color3,
        hsl(from var(--pst-color-on-background, white) h s calc(l - 40))
      );
      --xr-background-color: var(
        --jp-layout-color0,
        var(--pst-color-on-background, white)
      );
      --xr-background-color-row-even: var(
        --jp-layout-color1,
        hsl(from var(--pst-color-on-background, white) h s calc(l - 5))
      );
      --xr-background-color-row-odd: var(
        --jp-layout-color2,
        hsl(from var(--pst-color-on-background, white) h s calc(l - 15))
      );
    }

    html[theme="dark"],
    html[data-theme="dark"],
    body[data-theme="dark"],
    body.vscode-dark {
      --xr-font-color0: var(
        --jp-content-font-color0,
        var(--pst-color-text-base, rgba(255, 255, 255, 1))
      );
      --xr-font-color2: var(
        --jp-content-font-color2,
        var(--pst-color-text-base, rgba(255, 255, 255, 0.54))
      );
      --xr-font-color3: var(
        --jp-content-font-color3,
        var(--pst-color-text-base, rgba(255, 255, 255, 0.38))
      );
      --xr-border-color: var(
        --jp-border-color2,
        hsl(from var(--pst-color-on-background, #111111) h s calc(l + 10))
      );
      --xr-disabled-color: var(
        --jp-layout-color3,
        hsl(from var(--pst-color-on-background, #111111) h s calc(l + 40))
      );
      --xr-background-color: var(
        --jp-layout-color0,
        var(--pst-color-on-background, #111111)
      );
      --xr-background-color-row-even: var(
        --jp-layout-color1,
        hsl(from var(--pst-color-on-background, #111111) h s calc(l + 5))
      );
      --xr-background-color-row-odd: var(
        --jp-layout-color2,
        hsl(from var(--pst-color-on-background, #111111) h s calc(l + 15))
      );
    }

    .xr-wrap {
      display: block !important;
      min-width: 300px;
      max-width: 700px;
      line-height: 1.6;
    }

    .xr-text-repr-fallback {
      /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
      display: none;
    }

    .xr-header {
      padding-top: 6px;
      padding-bottom: 6px;
      margin-bottom: 4px;
      border-bottom: solid 1px var(--xr-border-color);
    }

    .xr-header > div,
    .xr-header > ul {
      display: inline;
      margin-top: 0;
      margin-bottom: 0;
    }

    .xr-obj-type,
    .xr-obj-name,
    .xr-group-name {
      margin-left: 2px;
      margin-right: 10px;
    }

    .xr-group-name::before {
      content: "📁";
      padding-right: 0.3em;
    }

    .xr-group-name,
    .xr-obj-type {
      color: var(--xr-font-color2);
    }

    .xr-sections {
      padding-left: 0 !important;
      display: grid;
      grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;
      margin-block-start: 0;
      margin-block-end: 0;
    }

    .xr-section-item {
      display: contents;
    }

    .xr-section-item input {
      display: inline-block;
      opacity: 0;
      height: 0;
      margin: 0;
    }

    .xr-section-item input + label {
      color: var(--xr-disabled-color);
      border: 2px solid transparent !important;
    }

    .xr-section-item input:enabled + label {
      cursor: pointer;
      color: var(--xr-font-color2);
    }

    .xr-section-item input:focus + label {
      border: 2px solid var(--xr-font-color0) !important;
    }

    .xr-section-item input:enabled + label:hover {
      color: var(--xr-font-color0);
    }

    .xr-section-summary {
      grid-column: 1;
      color: var(--xr-font-color2);
      font-weight: 500;
    }

    .xr-section-summary > span {
      display: inline-block;
      padding-left: 0.5em;
    }

    .xr-section-summary-in:disabled + label {
      color: var(--xr-font-color2);
    }

    .xr-section-summary-in + label:before {
      display: inline-block;
      content: "►";
      font-size: 11px;
      width: 15px;
      text-align: center;
    }

    .xr-section-summary-in:disabled + label:before {
      color: var(--xr-disabled-color);
    }

    .xr-section-summary-in:checked + label:before {
      content: "▼";
    }

    .xr-section-summary-in:checked + label > span {
      display: none;
    }

    .xr-section-summary,
    .xr-section-inline-details {
      padding-top: 4px;
    }

    .xr-section-inline-details {
      grid-column: 2 / -1;
    }

    .xr-section-details {
      display: none;
      grid-column: 1 / -1;
      margin-top: 4px;
      margin-bottom: 5px;
    }

    .xr-section-summary-in:checked ~ .xr-section-details {
      display: contents;
    }

    .xr-group-box {
      display: inline-grid;
      grid-template-columns: 0px 20px auto;
      width: 100%;
    }

    .xr-group-box-vline {
      grid-column-start: 1;
      border-right: 0.2em solid;
      border-color: var(--xr-border-color);
      width: 0px;
    }

    .xr-group-box-hline {
      grid-column-start: 2;
      grid-row-start: 1;
      height: 1em;
      width: 20px;
      border-bottom: 0.2em solid;
      border-color: var(--xr-border-color);
    }

    .xr-group-box-contents {
      grid-column-start: 3;
    }

    .xr-array-wrap {
      grid-column: 1 / -1;
      display: grid;
      grid-template-columns: 20px auto;
    }

    .xr-array-wrap > label {
      grid-column: 1;
      vertical-align: top;
    }

    .xr-preview {
      color: var(--xr-font-color3);
    }

    .xr-array-preview,
    .xr-array-data {
      padding: 0 5px !important;
      grid-column: 2;
    }

    .xr-array-data,
    .xr-array-in:checked ~ .xr-array-preview {
      display: none;
    }

    .xr-array-in:checked ~ .xr-array-data,
    .xr-array-preview {
      display: inline-block;
    }

    .xr-dim-list {
      display: inline-block !important;
      list-style: none;
      padding: 0 !important;
      margin: 0;
    }

    .xr-dim-list li {
      display: inline-block;
      padding: 0;
      margin: 0;
    }

    .xr-dim-list:before {
      content: "(";
    }

    .xr-dim-list:after {
      content: ")";
    }

    .xr-dim-list li:not(:last-child):after {
      content: ",";
      padding-right: 5px;
    }

    .xr-has-index {
      font-weight: bold;
    }

    .xr-var-list,
    .xr-var-item {
      display: contents;
    }

    .xr-var-item > div,
    .xr-var-item label,
    .xr-var-item > .xr-var-name span {
      background-color: var(--xr-background-color-row-even);
      border-color: var(--xr-background-color-row-odd);
      margin-bottom: 0;
      padding-top: 2px;
    }

    .xr-var-item > .xr-var-name:hover span {
      padding-right: 5px;
    }

    .xr-var-list > li:nth-child(odd) > div,
    .xr-var-list > li:nth-child(odd) > label,
    .xr-var-list > li:nth-child(odd) > .xr-var-name span {
      background-color: var(--xr-background-color-row-odd);
      border-color: var(--xr-background-color-row-even);
    }

    .xr-var-name {
      grid-column: 1;
    }

    .xr-var-dims {
      grid-column: 2;
    }

    .xr-var-dtype {
      grid-column: 3;
      text-align: right;
      color: var(--xr-font-color2);
    }

    .xr-var-preview {
      grid-column: 4;
    }

    .xr-index-preview {
      grid-column: 2 / 5;
      color: var(--xr-font-color2);
    }

    .xr-var-name,
    .xr-var-dims,
    .xr-var-dtype,
    .xr-preview,
    .xr-attrs dt {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      padding-right: 10px;
    }

    .xr-var-name:hover,
    .xr-var-dims:hover,
    .xr-var-dtype:hover,
    .xr-attrs dt:hover {
      overflow: visible;
      width: auto;
      z-index: 1;
    }

    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      display: none;
      border-top: 2px dotted var(--xr-background-color);
      padding-bottom: 20px !important;
      padding-top: 10px !important;
    }

    .xr-var-attrs-in + label,
    .xr-var-data-in + label,
    .xr-index-data-in + label {
      padding: 0 1px;
    }

    .xr-var-attrs-in:checked ~ .xr-var-attrs,
    .xr-var-data-in:checked ~ .xr-var-data,
    .xr-index-data-in:checked ~ .xr-index-data {
      display: block;
    }

    .xr-var-data > table {
      float: right;
    }

    .xr-var-data > pre,
    .xr-index-data > pre,
    .xr-var-data > table > tbody > tr {
      background-color: transparent !important;
    }

    .xr-var-name span,
    .xr-var-data,
    .xr-index-name div,
    .xr-index-data,
    .xr-attrs {
      padding-left: 25px !important;
    }

    .xr-attrs,
    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      grid-column: 1 / -1;
    }

    dl.xr-attrs {
      padding: 0;
      margin: 0;
      display: grid;
      grid-template-columns: 125px auto;
    }

    .xr-attrs dt,
    .xr-attrs dd {
      padding: 0;
      margin: 0;
      float: left;
      padding-right: 10px;
      width: auto;
    }

    .xr-attrs dt {
      font-weight: normal;
      grid-column: 1;
    }

    .xr-attrs dt:hover span {
      display: inline-block;
      background: var(--xr-background-color);
      padding-right: 10px;
    }

    .xr-attrs dd {
      grid-column: 2;
      white-space: pre-wrap;
      word-break: break-all;
    }

    .xr-icon-database,
    .xr-icon-file-text2,
    .xr-no-icon {
      display: inline-block;
      vertical-align: middle;
      width: 1em;
      height: 1.5em !important;
      stroke-width: 0;
      stroke: currentColor;
      fill: currentColor;
    }

    .xr-var-attrs-in:checked + label > .xr-icon-file-text2,
    .xr-var-data-in:checked + label > .xr-icon-database,
    .xr-index-data-in:checked + label > .xr-icon-database {
      color: var(--xr-font-color0);
      filter: drop-shadow(1px 1px 5px var(--xr-font-color2));
      stroke-width: 0.8px;
    }
    </style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray &#x27;tw&#x27; (rh: 101, temp: 71)&gt; Size: 57kB
    array([[-21.62766266, -20.75599289, -19.89205933, ...,  17.74344254,
             18.08524513,  18.42284393],
           [-21.61125374, -20.73826981, -19.87293816, ...,  18.31258774,
             18.67618561,  19.0362606 ],
           [-21.59484673, -20.72054863, -19.85382271, ...,  18.87013054,
             19.25458336,  19.63612747],
           ...,
           [-20.03228569, -19.03479004, -18.03743744, ...,  47.64428329,
             48.64019775,  49.63613892],
           [-20.01614189, -19.01739311, -18.01871681, ...,  47.82276154,
             48.82072449,  49.81871796],
           [-20.        , -19.        , -18.        , ...,  48.        ,
             49.        ,  50.        ]], shape=(101, 71))
    Coordinates:
      * rh       (rh) float64 808B 0.0 1.0 2.0 3.0 4.0 ... 96.0 97.0 98.0 99.0 100.0
      * temp     (temp) float64 568B -20.0 -19.0 -18.0 -17.0 ... 47.0 48.0 49.0 50.0
    Attributes:
        standard_name:  wet_bulb_temperature
        units:          degC</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-obj-name'>&#x27;tw&#x27;</div><ul class='xr-dim-list'><li><span class='xr-has-index'>rh</span>: 101</li><li><span class='xr-has-index'>temp</span>: 71</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-c1ef71fe-4f0b-487b-b17e-4d69084de1bc' class='xr-array-in' type='checkbox' checked><label for='section-c1ef71fe-4f0b-487b-b17e-4d69084de1bc' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>-21.63 -20.76 -19.89 -19.04 -18.19 -17.35 ... 46.0 47.0 48.0 49.0 50.0</span></div><div class='xr-array-data'><pre>array([[-21.62766266, -20.75599289, -19.89205933, ...,  17.74344254,
             18.08524513,  18.42284393],
           [-21.61125374, -20.73826981, -19.87293816, ...,  18.31258774,
             18.67618561,  19.0362606 ],
           [-21.59484673, -20.72054863, -19.85382271, ...,  18.87013054,
             19.25458336,  19.63612747],
           ...,
           [-20.03228569, -19.03479004, -18.03743744, ...,  47.64428329,
             48.64019775,  49.63613892],
           [-20.01614189, -19.01739311, -18.01871681, ...,  47.82276154,
             48.82072449,  49.81871796],
           [-20.        , -19.        , -18.        , ...,  48.        ,
             49.        ,  50.        ]], shape=(101, 71))</pre></div></div></li><li class='xr-section-item'><input id='section-b3b8f092-a482-4e35-9660-b3785d8db56c' class='xr-section-summary-in' type='checkbox'  checked><label for='section-b3b8f092-a482-4e35-9660-b3785d8db56c' class='xr-section-summary' >Coordinates: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>rh</span></div><div class='xr-var-dims'>(rh)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.0 1.0 2.0 3.0 ... 98.0 99.0 100.0</div><input id='attrs-215cc5af-1651-4e56-8f75-c64a6f09aff9' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-215cc5af-1651-4e56-8f75-c64a6f09aff9' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-5bbe82f8-b18c-4d10-a3fc-2ac7f23893c2' class='xr-var-data-in' type='checkbox'><label for='data-5bbe82f8-b18c-4d10-a3fc-2ac7f23893c2' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([  0.,   1.,   2.,   3.,   4.,   5.,   6.,   7.,   8.,   9.,  10.,  11.,
            12.,  13.,  14.,  15.,  16.,  17.,  18.,  19.,  20.,  21.,  22.,  23.,
            24.,  25.,  26.,  27.,  28.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,
            36.,  37.,  38.,  39.,  40.,  41.,  42.,  43.,  44.,  45.,  46.,  47.,
            48.,  49.,  50.,  51.,  52.,  53.,  54.,  55.,  56.,  57.,  58.,  59.,
            60.,  61.,  62.,  63.,  64.,  65.,  66.,  67.,  68.,  69.,  70.,  71.,
            72.,  73.,  74.,  75.,  76.,  77.,  78.,  79.,  80.,  81.,  82.,  83.,
            84.,  85.,  86.,  87.,  88.,  89.,  90.,  91.,  92.,  93.,  94.,  95.,
            96.,  97.,  98.,  99., 100.])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>temp</span></div><div class='xr-var-dims'>(temp)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>-20.0 -19.0 -18.0 ... 49.0 50.0</div><input id='attrs-515ecdab-297a-42d7-9f57-0f6d19475a78' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-515ecdab-297a-42d7-9f57-0f6d19475a78' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-757298e7-8723-4929-9f6c-465ad4b4905f' class='xr-var-data-in' type='checkbox'><label for='data-757298e7-8723-4929-9f6c-465ad4b4905f' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([-20., -19., -18., -17., -16., -15., -14., -13., -12., -11., -10.,  -9.,
            -8.,  -7.,  -6.,  -5.,  -4.,  -3.,  -2.,  -1.,   0.,   1.,   2.,   3.,
             4.,   5.,   6.,   7.,   8.,   9.,  10.,  11.,  12.,  13.,  14.,  15.,
            16.,  17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,  25.,  26.,  27.,
            28.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,  37.,  38.,  39.,
            40.,  41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,  49.,  50.])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-c73ede0e-f641-4667-a946-82745257443a' class='xr-section-summary-in' type='checkbox'  checked><label for='section-c73ede0e-f641-4667-a946-82745257443a' class='xr-section-summary' >Attributes: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>wet_bulb_temperature</dd><dt><span>units :</span></dt><dd>degC</dd></dl></div></li></ul></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 129-147

Stull (2011) Calculation
-----------------------------------------------------

Single Point
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

This section tests the :py:func:`easyclimate.physics.calc_wet_bulb_temperature_stull2011 <easyclimate.physics.calc_wet_bulb_temperature_stull2011>` function for a single data point (T = 20°C, RH = 50%):

- Computes wet-bulb temperature using Stull's empirical formula.
- Converts the result from Kelvin to Celsius for consistency.

.. seealso::

    - Stull, R. (2011). Wet-Bulb Temperature from Relative Humidity and Air Temperature. Journal of Applied Meteorology and Climatology, 50(11), 2267-2269. https://doi.org/10.1175/JAMC-D-11-0143.1
    - Stull, R. (2011): Meteorology for Scientists and Engineers. 3rd ed. Discount Textbooks, 924 pp. [Available online at https://www.eoas.ubc.ca/books/Practical_Meteorology/, https://www.eoas.ubc.ca/courses/atsc201/MSE3.html]
    - Knox, J. A., Nevius, D. S., & Knox, P. N. (2017). Two Simple and Accurate Approximations for Wet-Bulb Temperature in Moist Conditions, with Forecasting Applications. Bulletin of the American Meteorological Society, 98(9), 1897-1906. https://doi.org/10.1175/BAMS-D-16-0246.1

This serves as a simple validation of the Stull method before applying it to the full grid.

.. GENERATED FROM PYTHON SOURCE LINES 147-156

.. code-block:: Python


    wet_bulb_temp_K = ecl.physics.calc_wet_bulb_temperature_stull2011(
        temperature_data = xr.DataArray([20]),
        relative_humidity_data = xr.DataArray([50]),
        temperature_data_units = "degC",
        relative_humidity_data_units = "%"
    )
    ecl.utility.transfer_data_temperature_units(wet_bulb_temp_K, "K", "degC")






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
    <defs>
    <symbol id="icon-database" viewBox="0 0 32 32">
    <path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
    <path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    <path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    </symbol>
    <symbol id="icon-file-text2" viewBox="0 0 32 32">
    <path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
    <path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    </symbol>
    </defs>
    </svg>
    <style>/* CSS stylesheet for displaying xarray objects in notebooks */

    :root {
      --xr-font-color0: var(
        --jp-content-font-color0,
        var(--pst-color-text-base rgba(0, 0, 0, 1))
      );
      --xr-font-color2: var(
        --jp-content-font-color2,
        var(--pst-color-text-base, rgba(0, 0, 0, 0.54))
      );
      --xr-font-color3: var(
        --jp-content-font-color3,
        var(--pst-color-text-base, rgba(0, 0, 0, 0.38))
      );
      --xr-border-color: var(
        --jp-border-color2,
        hsl(from var(--pst-color-on-background, white) h s calc(l - 10))
      );
      --xr-disabled-color: var(
        --jp-layout-color3,
        hsl(from var(--pst-color-on-background, white) h s calc(l - 40))
      );
      --xr-background-color: var(
        --jp-layout-color0,
        var(--pst-color-on-background, white)
      );
      --xr-background-color-row-even: var(
        --jp-layout-color1,
        hsl(from var(--pst-color-on-background, white) h s calc(l - 5))
      );
      --xr-background-color-row-odd: var(
        --jp-layout-color2,
        hsl(from var(--pst-color-on-background, white) h s calc(l - 15))
      );
    }

    html[theme="dark"],
    html[data-theme="dark"],
    body[data-theme="dark"],
    body.vscode-dark {
      --xr-font-color0: var(
        --jp-content-font-color0,
        var(--pst-color-text-base, rgba(255, 255, 255, 1))
      );
      --xr-font-color2: var(
        --jp-content-font-color2,
        var(--pst-color-text-base, rgba(255, 255, 255, 0.54))
      );
      --xr-font-color3: var(
        --jp-content-font-color3,
        var(--pst-color-text-base, rgba(255, 255, 255, 0.38))
      );
      --xr-border-color: var(
        --jp-border-color2,
        hsl(from var(--pst-color-on-background, #111111) h s calc(l + 10))
      );
      --xr-disabled-color: var(
        --jp-layout-color3,
        hsl(from var(--pst-color-on-background, #111111) h s calc(l + 40))
      );
      --xr-background-color: var(
        --jp-layout-color0,
        var(--pst-color-on-background, #111111)
      );
      --xr-background-color-row-even: var(
        --jp-layout-color1,
        hsl(from var(--pst-color-on-background, #111111) h s calc(l + 5))
      );
      --xr-background-color-row-odd: var(
        --jp-layout-color2,
        hsl(from var(--pst-color-on-background, #111111) h s calc(l + 15))
      );
    }

    .xr-wrap {
      display: block !important;
      min-width: 300px;
      max-width: 700px;
      line-height: 1.6;
    }

    .xr-text-repr-fallback {
      /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
      display: none;
    }

    .xr-header {
      padding-top: 6px;
      padding-bottom: 6px;
      margin-bottom: 4px;
      border-bottom: solid 1px var(--xr-border-color);
    }

    .xr-header > div,
    .xr-header > ul {
      display: inline;
      margin-top: 0;
      margin-bottom: 0;
    }

    .xr-obj-type,
    .xr-obj-name,
    .xr-group-name {
      margin-left: 2px;
      margin-right: 10px;
    }

    .xr-group-name::before {
      content: "📁";
      padding-right: 0.3em;
    }

    .xr-group-name,
    .xr-obj-type {
      color: var(--xr-font-color2);
    }

    .xr-sections {
      padding-left: 0 !important;
      display: grid;
      grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;
      margin-block-start: 0;
      margin-block-end: 0;
    }

    .xr-section-item {
      display: contents;
    }

    .xr-section-item input {
      display: inline-block;
      opacity: 0;
      height: 0;
      margin: 0;
    }

    .xr-section-item input + label {
      color: var(--xr-disabled-color);
      border: 2px solid transparent !important;
    }

    .xr-section-item input:enabled + label {
      cursor: pointer;
      color: var(--xr-font-color2);
    }

    .xr-section-item input:focus + label {
      border: 2px solid var(--xr-font-color0) !important;
    }

    .xr-section-item input:enabled + label:hover {
      color: var(--xr-font-color0);
    }

    .xr-section-summary {
      grid-column: 1;
      color: var(--xr-font-color2);
      font-weight: 500;
    }

    .xr-section-summary > span {
      display: inline-block;
      padding-left: 0.5em;
    }

    .xr-section-summary-in:disabled + label {
      color: var(--xr-font-color2);
    }

    .xr-section-summary-in + label:before {
      display: inline-block;
      content: "►";
      font-size: 11px;
      width: 15px;
      text-align: center;
    }

    .xr-section-summary-in:disabled + label:before {
      color: var(--xr-disabled-color);
    }

    .xr-section-summary-in:checked + label:before {
      content: "▼";
    }

    .xr-section-summary-in:checked + label > span {
      display: none;
    }

    .xr-section-summary,
    .xr-section-inline-details {
      padding-top: 4px;
    }

    .xr-section-inline-details {
      grid-column: 2 / -1;
    }

    .xr-section-details {
      display: none;
      grid-column: 1 / -1;
      margin-top: 4px;
      margin-bottom: 5px;
    }

    .xr-section-summary-in:checked ~ .xr-section-details {
      display: contents;
    }

    .xr-group-box {
      display: inline-grid;
      grid-template-columns: 0px 20px auto;
      width: 100%;
    }

    .xr-group-box-vline {
      grid-column-start: 1;
      border-right: 0.2em solid;
      border-color: var(--xr-border-color);
      width: 0px;
    }

    .xr-group-box-hline {
      grid-column-start: 2;
      grid-row-start: 1;
      height: 1em;
      width: 20px;
      border-bottom: 0.2em solid;
      border-color: var(--xr-border-color);
    }

    .xr-group-box-contents {
      grid-column-start: 3;
    }

    .xr-array-wrap {
      grid-column: 1 / -1;
      display: grid;
      grid-template-columns: 20px auto;
    }

    .xr-array-wrap > label {
      grid-column: 1;
      vertical-align: top;
    }

    .xr-preview {
      color: var(--xr-font-color3);
    }

    .xr-array-preview,
    .xr-array-data {
      padding: 0 5px !important;
      grid-column: 2;
    }

    .xr-array-data,
    .xr-array-in:checked ~ .xr-array-preview {
      display: none;
    }

    .xr-array-in:checked ~ .xr-array-data,
    .xr-array-preview {
      display: inline-block;
    }

    .xr-dim-list {
      display: inline-block !important;
      list-style: none;
      padding: 0 !important;
      margin: 0;
    }

    .xr-dim-list li {
      display: inline-block;
      padding: 0;
      margin: 0;
    }

    .xr-dim-list:before {
      content: "(";
    }

    .xr-dim-list:after {
      content: ")";
    }

    .xr-dim-list li:not(:last-child):after {
      content: ",";
      padding-right: 5px;
    }

    .xr-has-index {
      font-weight: bold;
    }

    .xr-var-list,
    .xr-var-item {
      display: contents;
    }

    .xr-var-item > div,
    .xr-var-item label,
    .xr-var-item > .xr-var-name span {
      background-color: var(--xr-background-color-row-even);
      border-color: var(--xr-background-color-row-odd);
      margin-bottom: 0;
      padding-top: 2px;
    }

    .xr-var-item > .xr-var-name:hover span {
      padding-right: 5px;
    }

    .xr-var-list > li:nth-child(odd) > div,
    .xr-var-list > li:nth-child(odd) > label,
    .xr-var-list > li:nth-child(odd) > .xr-var-name span {
      background-color: var(--xr-background-color-row-odd);
      border-color: var(--xr-background-color-row-even);
    }

    .xr-var-name {
      grid-column: 1;
    }

    .xr-var-dims {
      grid-column: 2;
    }

    .xr-var-dtype {
      grid-column: 3;
      text-align: right;
      color: var(--xr-font-color2);
    }

    .xr-var-preview {
      grid-column: 4;
    }

    .xr-index-preview {
      grid-column: 2 / 5;
      color: var(--xr-font-color2);
    }

    .xr-var-name,
    .xr-var-dims,
    .xr-var-dtype,
    .xr-preview,
    .xr-attrs dt {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      padding-right: 10px;
    }

    .xr-var-name:hover,
    .xr-var-dims:hover,
    .xr-var-dtype:hover,
    .xr-attrs dt:hover {
      overflow: visible;
      width: auto;
      z-index: 1;
    }

    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      display: none;
      border-top: 2px dotted var(--xr-background-color);
      padding-bottom: 20px !important;
      padding-top: 10px !important;
    }

    .xr-var-attrs-in + label,
    .xr-var-data-in + label,
    .xr-index-data-in + label {
      padding: 0 1px;
    }

    .xr-var-attrs-in:checked ~ .xr-var-attrs,
    .xr-var-data-in:checked ~ .xr-var-data,
    .xr-index-data-in:checked ~ .xr-index-data {
      display: block;
    }

    .xr-var-data > table {
      float: right;
    }

    .xr-var-data > pre,
    .xr-index-data > pre,
    .xr-var-data > table > tbody > tr {
      background-color: transparent !important;
    }

    .xr-var-name span,
    .xr-var-data,
    .xr-index-name div,
    .xr-index-data,
    .xr-attrs {
      padding-left: 25px !important;
    }

    .xr-attrs,
    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      grid-column: 1 / -1;
    }

    dl.xr-attrs {
      padding: 0;
      margin: 0;
      display: grid;
      grid-template-columns: 125px auto;
    }

    .xr-attrs dt,
    .xr-attrs dd {
      padding: 0;
      margin: 0;
      float: left;
      padding-right: 10px;
      width: auto;
    }

    .xr-attrs dt {
      font-weight: normal;
      grid-column: 1;
    }

    .xr-attrs dt:hover span {
      display: inline-block;
      background: var(--xr-background-color);
      padding-right: 10px;
    }

    .xr-attrs dd {
      grid-column: 2;
      white-space: pre-wrap;
      word-break: break-all;
    }

    .xr-icon-database,
    .xr-icon-file-text2,
    .xr-no-icon {
      display: inline-block;
      vertical-align: middle;
      width: 1em;
      height: 1.5em !important;
      stroke-width: 0;
      stroke: currentColor;
      fill: currentColor;
    }

    .xr-var-attrs-in:checked + label > .xr-icon-file-text2,
    .xr-var-data-in:checked + label > .xr-icon-database,
    .xr-index-data-in:checked + label > .xr-icon-database {
      color: var(--xr-font-color0);
      filter: drop-shadow(1px 1px 5px var(--xr-font-color2));
      stroke-width: 0.8px;
    }
    </style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray &#x27;tw&#x27; (dim_0: 1)&gt; Size: 8B
    array([13.69934197])
    Dimensions without coordinates: dim_0
    Attributes:
        standard_name:  wet_bulb_temperature
        units:          degC</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-obj-name'>&#x27;tw&#x27;</div><ul class='xr-dim-list'><li><span>dim_0</span>: 1</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-d2d961a2-e580-4cdd-8a29-95c5528c6a34' class='xr-array-in' type='checkbox' checked><label for='section-d2d961a2-e580-4cdd-8a29-95c5528c6a34' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>13.7</span></div><div class='xr-array-data'><pre>array([13.69934197])</pre></div></div></li><li class='xr-section-item'><input id='section-8b5b116a-c3f4-4db8-aa07-bc535ec5ff46' class='xr-section-summary-in' type='checkbox'  checked><label for='section-8b5b116a-c3f4-4db8-aa07-bc535ec5ff46' class='xr-section-summary' >Attributes: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>wet_bulb_temperature</dd><dt><span>units :</span></dt><dd>degC</dd></dl></div></li></ul></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 157-167

Grid
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

This section applies :py:func:`easyclimate.physics.calc_wet_bulb_temperature_stull2011 <easyclimate.physics.calc_wet_bulb_temperature_stull2011>` to the 2D grid ``(temp_mesh1, rh_mesh)``:

- Calculates wet-bulb temperature across the grid using Stull's formula.
- Converts the output from Kelvin to Celsius.
- Stores the result in ``wet_bulb_stull2011``.

This enables comparison with the iterative method.

.. GENERATED FROM PYTHON SOURCE LINES 167-173

.. code-block:: Python


    wet_bulb_stull2011 = ecl.physics.calc_wet_bulb_temperature_stull2011(
        temp_mesh1, rh_mesh, "degC", "%"
    )
    wet_bulb_stull2011 = ecl.utility.transfer_data_temperature_units(wet_bulb_stull2011, "K", "degC")








.. GENERATED FROM PYTHON SOURCE LINES 174-183

Comparison (Iteration vs. Stull)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
This section visualizes the results of the iterative and Stull methods:

Creates a contour plot of ``wet_bulb_iteration`` with levels from -20°C to 50°C.
Overlays contours of ``wet_bulb_stull2011`` in black for comparison.
Computes and plots the difference (``wet_bulb_stull2011 - wet_bulb_iteration``) to highlight discrepancies.

The plots help assess the agreement between the two methods across different conditions.

.. GENERATED FROM PYTHON SOURCE LINES 183-194

.. code-block:: Python


    fig, ax = plt.subplots(figsize = (6, 6))

    wet_bulb_iteration.plot.contourf(
        levels = np.arange(-20, 50, 5),
        cbar_kwargs = {'location': 'bottom', 'aspect': 60}
    )

    cf = wet_bulb_stull2011.plot.contour(levels = np.arange(-20, 50, 5), colors='k')
    plt.clabel(cf, inline = True, fontsize = 10)




.. image-sg:: /auto_gallery/images/sphx_glr_plot_wet_bulk_001.png
   :alt: plot wet bulk
   :srcset: /auto_gallery/images/sphx_glr_plot_wet_bulk_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <a list of 14 text.Text objects>



.. GENERATED FROM PYTHON SOURCE LINES 195-201

.. code-block:: Python

    diff = (wet_bulb_stull2011 - wet_bulb_iteration)
    diff.plot.contourf(
        levels = np.linspace(-1, 1, 21),
        cbar_kwargs = {'location': 'bottom', 'aspect': 60, 'label': 'diff'}
    )




.. image-sg:: /auto_gallery/images/sphx_glr_plot_wet_bulk_002.png
   :alt: plot wet bulk
   :srcset: /auto_gallery/images/sphx_glr_plot_wet_bulk_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.contour.QuadContourSet object at 0x7f91a0a87f90>



.. GENERATED FROM PYTHON SOURCE LINES 202-219

Sadeghi (2013) Calculation
-----------------------------------------------------

Grid
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

This section computes wet-bulb temperature using :py:func:`easyclimate.physics.calc_wet_bulb_temperature_sadeghi2013 <easyclimate.physics.calc_wet_bulb_temperature_sadeghi2013>` at three elevations (0 m, 2000 m, 5000 m):

- Uses temp_mesh1 and rh_mesh as inputs, with height specified as an :py:class:`xarray.DataArray<xarray.DataArray>`.
- Outputs results in °C for each elevation.

.. seealso::

    - Sadeghi, S., Peters, T. R., Cobos, D. R., Loescher, H. W., & Campbell, C. S. (2013). Direct Calculation of Thermodynamic Wet-Bulb Temperature as a Function of Pressure and Elevation. Journal of Atmospheric and Oceanic Technology, 30(8), 1757-1765. https://doi.org/10.1175/JTECH-D-12-00191.1


This evaluates the impact of elevation on wet-bulb temperature using Sadeghi's empirical formula.

.. GENERATED FROM PYTHON SOURCE LINES 219-232

.. code-block:: Python


    wet_bulb_sadeghi2013_0m = ecl.physics.calc_wet_bulb_temperature_sadeghi2013(
        temp_mesh1, xr.DataArray([0], dims="height"), rh_mesh, "degC", "m", "%"
    ).isel(height = 0)

    wet_bulb_sadeghi2013_2000m = ecl.physics.calc_wet_bulb_temperature_sadeghi2013(
        temp_mesh1, xr.DataArray([2000], dims="height"), rh_mesh, "degC", "m", "%"
    ).isel(height = 0)

    wet_bulb_sadeghi2013_5000m = ecl.physics.calc_wet_bulb_temperature_sadeghi2013(
        temp_mesh1, xr.DataArray([5000], dims="height"), rh_mesh, "degC", "m", "%"
    ).isel(height = 0)








.. GENERATED FROM PYTHON SOURCE LINES 233-243

Comparison (0 m vs. 5000 m)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

This section visualizes the Sadeghi results:

- Creates a contour plot of ``wet_bulb_sadeghi2013_0m``.
- Overlays contours of ``wet_bulb_sadeghi2013_5000m`` in black.
- Plots the difference (``wet_bulb_sadeghi2013_0m - wet_bulb_sadeghi2013_5000m``) to show elevation effects.

These plots illustrate how elevation influences wet-bulb temperature.

.. GENERATED FROM PYTHON SOURCE LINES 243-247

.. code-block:: Python


    wet_bulb_sadeghi2013_0m.plot.contourf(levels = 21)
    wet_bulb_sadeghi2013_5000m.plot.contour(levels = 21, colors='k')




.. image-sg:: /auto_gallery/images/sphx_glr_plot_wet_bulk_003.png
   :alt: plot wet bulk
   :srcset: /auto_gallery/images/sphx_glr_plot_wet_bulk_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.contour.QuadContourSet object at 0x7f91a0f3eed0>



.. GENERATED FROM PYTHON SOURCE LINES 248-253

.. code-block:: Python

    diff = wet_bulb_sadeghi2013_0m - wet_bulb_sadeghi2013_5000m
    diff.plot.contourf(
        levels = np.linspace(-6, 6, 21)
    )




.. image-sg:: /auto_gallery/images/sphx_glr_plot_wet_bulk_004.png
   :alt: plot wet bulk
   :srcset: /auto_gallery/images/sphx_glr_plot_wet_bulk_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.contour.QuadContourSet object at 0x7f91b0279ad0>



.. GENERATED FROM PYTHON SOURCE LINES 254-272

Davies-Jones (2008) Calculation
-----------------------------------------------------

Grid
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

This section computes wet-bulb potential temperature using :py:func:`easyclimate.physics.calc_wet_bulb_potential_temperature_davies_jones2008 <easyclimate.physics.calc_wet_bulb_potential_temperature_davies_jones2008>`:

- Uses ``temp_mesh2``, ``td_mesh``, and a pressure of 1000 hPa as inputs.
- Converts the output from Kelvin to Celsius.
- Stores the result in ``wet_bulb_davies_jones2008``.

.. seealso::

    - Davies-Jones, R. (2008). An Efficient and Accurate Method for Computing the Wet-Bulb Temperature along Pseudoadiabats. Monthly Weather Review, 136(7), 2764-2785. https://doi.org/10.1175/2007MWR2224.1
    - Knox, J. A., Nevius, D. S., & Knox, P. N. (2017). Two Simple and Accurate Approximations for Wet-Bulb Temperature in Moist Conditions, with Forecasting Applications. Bulletin of the American Meteorological Society, 98(9), 1897-1906. https://doi.org/10.1175/BAMS-D-16-0246.1

This applies Davies-Jones' approximation, which uses dewpoint temperature directly.

.. GENERATED FROM PYTHON SOURCE LINES 272-280

.. code-block:: Python


    wet_bulb_davies_jones2008 = ecl.physics.calc_wet_bulb_potential_temperature_davies_jones2008(
        pressure_data = xr.DataArray([1000], dims = "p"), temperature_data = temp_mesh2, dewpoint_data = td_mesh,
        pressure_data_units = "hPa", temperature_data_units = "degC", dewpoint_data_units = "degC",
    ).isel(p = 0)
    wet_bulb_davies_jones2008 = ecl.utility.transfer_data_temperature_units(wet_bulb_davies_jones2008, "K", "degC")
    wet_bulb_davies_jones2008






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
    <defs>
    <symbol id="icon-database" viewBox="0 0 32 32">
    <path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
    <path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    <path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    </symbol>
    <symbol id="icon-file-text2" viewBox="0 0 32 32">
    <path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
    <path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    </symbol>
    </defs>
    </svg>
    <style>/* CSS stylesheet for displaying xarray objects in notebooks */

    :root {
      --xr-font-color0: var(
        --jp-content-font-color0,
        var(--pst-color-text-base rgba(0, 0, 0, 1))
      );
      --xr-font-color2: var(
        --jp-content-font-color2,
        var(--pst-color-text-base, rgba(0, 0, 0, 0.54))
      );
      --xr-font-color3: var(
        --jp-content-font-color3,
        var(--pst-color-text-base, rgba(0, 0, 0, 0.38))
      );
      --xr-border-color: var(
        --jp-border-color2,
        hsl(from var(--pst-color-on-background, white) h s calc(l - 10))
      );
      --xr-disabled-color: var(
        --jp-layout-color3,
        hsl(from var(--pst-color-on-background, white) h s calc(l - 40))
      );
      --xr-background-color: var(
        --jp-layout-color0,
        var(--pst-color-on-background, white)
      );
      --xr-background-color-row-even: var(
        --jp-layout-color1,
        hsl(from var(--pst-color-on-background, white) h s calc(l - 5))
      );
      --xr-background-color-row-odd: var(
        --jp-layout-color2,
        hsl(from var(--pst-color-on-background, white) h s calc(l - 15))
      );
    }

    html[theme="dark"],
    html[data-theme="dark"],
    body[data-theme="dark"],
    body.vscode-dark {
      --xr-font-color0: var(
        --jp-content-font-color0,
        var(--pst-color-text-base, rgba(255, 255, 255, 1))
      );
      --xr-font-color2: var(
        --jp-content-font-color2,
        var(--pst-color-text-base, rgba(255, 255, 255, 0.54))
      );
      --xr-font-color3: var(
        --jp-content-font-color3,
        var(--pst-color-text-base, rgba(255, 255, 255, 0.38))
      );
      --xr-border-color: var(
        --jp-border-color2,
        hsl(from var(--pst-color-on-background, #111111) h s calc(l + 10))
      );
      --xr-disabled-color: var(
        --jp-layout-color3,
        hsl(from var(--pst-color-on-background, #111111) h s calc(l + 40))
      );
      --xr-background-color: var(
        --jp-layout-color0,
        var(--pst-color-on-background, #111111)
      );
      --xr-background-color-row-even: var(
        --jp-layout-color1,
        hsl(from var(--pst-color-on-background, #111111) h s calc(l + 5))
      );
      --xr-background-color-row-odd: var(
        --jp-layout-color2,
        hsl(from var(--pst-color-on-background, #111111) h s calc(l + 15))
      );
    }

    .xr-wrap {
      display: block !important;
      min-width: 300px;
      max-width: 700px;
      line-height: 1.6;
    }

    .xr-text-repr-fallback {
      /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
      display: none;
    }

    .xr-header {
      padding-top: 6px;
      padding-bottom: 6px;
      margin-bottom: 4px;
      border-bottom: solid 1px var(--xr-border-color);
    }

    .xr-header > div,
    .xr-header > ul {
      display: inline;
      margin-top: 0;
      margin-bottom: 0;
    }

    .xr-obj-type,
    .xr-obj-name,
    .xr-group-name {
      margin-left: 2px;
      margin-right: 10px;
    }

    .xr-group-name::before {
      content: "📁";
      padding-right: 0.3em;
    }

    .xr-group-name,
    .xr-obj-type {
      color: var(--xr-font-color2);
    }

    .xr-sections {
      padding-left: 0 !important;
      display: grid;
      grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;
      margin-block-start: 0;
      margin-block-end: 0;
    }

    .xr-section-item {
      display: contents;
    }

    .xr-section-item input {
      display: inline-block;
      opacity: 0;
      height: 0;
      margin: 0;
    }

    .xr-section-item input + label {
      color: var(--xr-disabled-color);
      border: 2px solid transparent !important;
    }

    .xr-section-item input:enabled + label {
      cursor: pointer;
      color: var(--xr-font-color2);
    }

    .xr-section-item input:focus + label {
      border: 2px solid var(--xr-font-color0) !important;
    }

    .xr-section-item input:enabled + label:hover {
      color: var(--xr-font-color0);
    }

    .xr-section-summary {
      grid-column: 1;
      color: var(--xr-font-color2);
      font-weight: 500;
    }

    .xr-section-summary > span {
      display: inline-block;
      padding-left: 0.5em;
    }

    .xr-section-summary-in:disabled + label {
      color: var(--xr-font-color2);
    }

    .xr-section-summary-in + label:before {
      display: inline-block;
      content: "►";
      font-size: 11px;
      width: 15px;
      text-align: center;
    }

    .xr-section-summary-in:disabled + label:before {
      color: var(--xr-disabled-color);
    }

    .xr-section-summary-in:checked + label:before {
      content: "▼";
    }

    .xr-section-summary-in:checked + label > span {
      display: none;
    }

    .xr-section-summary,
    .xr-section-inline-details {
      padding-top: 4px;
    }

    .xr-section-inline-details {
      grid-column: 2 / -1;
    }

    .xr-section-details {
      display: none;
      grid-column: 1 / -1;
      margin-top: 4px;
      margin-bottom: 5px;
    }

    .xr-section-summary-in:checked ~ .xr-section-details {
      display: contents;
    }

    .xr-group-box {
      display: inline-grid;
      grid-template-columns: 0px 20px auto;
      width: 100%;
    }

    .xr-group-box-vline {
      grid-column-start: 1;
      border-right: 0.2em solid;
      border-color: var(--xr-border-color);
      width: 0px;
    }

    .xr-group-box-hline {
      grid-column-start: 2;
      grid-row-start: 1;
      height: 1em;
      width: 20px;
      border-bottom: 0.2em solid;
      border-color: var(--xr-border-color);
    }

    .xr-group-box-contents {
      grid-column-start: 3;
    }

    .xr-array-wrap {
      grid-column: 1 / -1;
      display: grid;
      grid-template-columns: 20px auto;
    }

    .xr-array-wrap > label {
      grid-column: 1;
      vertical-align: top;
    }

    .xr-preview {
      color: var(--xr-font-color3);
    }

    .xr-array-preview,
    .xr-array-data {
      padding: 0 5px !important;
      grid-column: 2;
    }

    .xr-array-data,
    .xr-array-in:checked ~ .xr-array-preview {
      display: none;
    }

    .xr-array-in:checked ~ .xr-array-data,
    .xr-array-preview {
      display: inline-block;
    }

    .xr-dim-list {
      display: inline-block !important;
      list-style: none;
      padding: 0 !important;
      margin: 0;
    }

    .xr-dim-list li {
      display: inline-block;
      padding: 0;
      margin: 0;
    }

    .xr-dim-list:before {
      content: "(";
    }

    .xr-dim-list:after {
      content: ")";
    }

    .xr-dim-list li:not(:last-child):after {
      content: ",";
      padding-right: 5px;
    }

    .xr-has-index {
      font-weight: bold;
    }

    .xr-var-list,
    .xr-var-item {
      display: contents;
    }

    .xr-var-item > div,
    .xr-var-item label,
    .xr-var-item > .xr-var-name span {
      background-color: var(--xr-background-color-row-even);
      border-color: var(--xr-background-color-row-odd);
      margin-bottom: 0;
      padding-top: 2px;
    }

    .xr-var-item > .xr-var-name:hover span {
      padding-right: 5px;
    }

    .xr-var-list > li:nth-child(odd) > div,
    .xr-var-list > li:nth-child(odd) > label,
    .xr-var-list > li:nth-child(odd) > .xr-var-name span {
      background-color: var(--xr-background-color-row-odd);
      border-color: var(--xr-background-color-row-even);
    }

    .xr-var-name {
      grid-column: 1;
    }

    .xr-var-dims {
      grid-column: 2;
    }

    .xr-var-dtype {
      grid-column: 3;
      text-align: right;
      color: var(--xr-font-color2);
    }

    .xr-var-preview {
      grid-column: 4;
    }

    .xr-index-preview {
      grid-column: 2 / 5;
      color: var(--xr-font-color2);
    }

    .xr-var-name,
    .xr-var-dims,
    .xr-var-dtype,
    .xr-preview,
    .xr-attrs dt {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      padding-right: 10px;
    }

    .xr-var-name:hover,
    .xr-var-dims:hover,
    .xr-var-dtype:hover,
    .xr-attrs dt:hover {
      overflow: visible;
      width: auto;
      z-index: 1;
    }

    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      display: none;
      border-top: 2px dotted var(--xr-background-color);
      padding-bottom: 20px !important;
      padding-top: 10px !important;
    }

    .xr-var-attrs-in + label,
    .xr-var-data-in + label,
    .xr-index-data-in + label {
      padding: 0 1px;
    }

    .xr-var-attrs-in:checked ~ .xr-var-attrs,
    .xr-var-data-in:checked ~ .xr-var-data,
    .xr-index-data-in:checked ~ .xr-index-data {
      display: block;
    }

    .xr-var-data > table {
      float: right;
    }

    .xr-var-data > pre,
    .xr-index-data > pre,
    .xr-var-data > table > tbody > tr {
      background-color: transparent !important;
    }

    .xr-var-name span,
    .xr-var-data,
    .xr-index-name div,
    .xr-index-data,
    .xr-attrs {
      padding-left: 25px !important;
    }

    .xr-attrs,
    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      grid-column: 1 / -1;
    }

    dl.xr-attrs {
      padding: 0;
      margin: 0;
      display: grid;
      grid-template-columns: 125px auto;
    }

    .xr-attrs dt,
    .xr-attrs dd {
      padding: 0;
      margin: 0;
      float: left;
      padding-right: 10px;
      width: auto;
    }

    .xr-attrs dt {
      font-weight: normal;
      grid-column: 1;
    }

    .xr-attrs dt:hover span {
      display: inline-block;
      background: var(--xr-background-color);
      padding-right: 10px;
    }

    .xr-attrs dd {
      grid-column: 2;
      white-space: pre-wrap;
      word-break: break-all;
    }

    .xr-icon-database,
    .xr-icon-file-text2,
    .xr-no-icon {
      display: inline-block;
      vertical-align: middle;
      width: 1em;
      height: 1.5em !important;
      stroke-width: 0;
      stroke: currentColor;
      fill: currentColor;
    }

    .xr-var-attrs-in:checked + label > .xr-icon-file-text2,
    .xr-var-data-in:checked + label > .xr-icon-database,
    .xr-index-data-in:checked + label > .xr-icon-database {
      color: var(--xr-font-color0);
      filter: drop-shadow(1px 1px 5px var(--xr-font-color2));
      stroke-width: 0.8px;
    }
    </style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray &#x27;tw&#x27; (deltaT: 31, temp: 71)&gt; Size: 18kB
    array([[-20.00031076, -19.00027862, -18.00025665, ...,  48.01627406,
             49.00946616,  49.99887666],
           [-20.14112001, -19.15053901, -18.16038562, ...,  47.12097628,
             48.11338117,  49.10208735],
           [-20.27224775, -19.29058932, -18.30976434, ...,  46.23110273,
             47.22184832,  48.20965768],
           ...,
           [-21.68058762, -20.80722563, -19.94087682, ...,  27.17672355,
             27.93267514,  28.69456175],
           [-21.69434401, -20.82229856, -19.95736748, ...,  26.64537694,
             27.3887731 ,  28.13821235],
           [-21.70682482, -20.83598899, -19.97236197, ...,  26.13073289,
             26.86147691,  27.59835289]], shape=(31, 71))
    Coordinates:
      * deltaT   (deltaT) float64 248B 0.0 1.0 2.0 3.0 4.0 ... 27.0 28.0 29.0 30.0
      * temp     (temp) float64 568B -20.0 -19.0 -18.0 -17.0 ... 47.0 48.0 49.0 50.0
    Attributes:
        standard_name:  wet_bulb_temperature
        units:          degC</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-obj-name'>&#x27;tw&#x27;</div><ul class='xr-dim-list'><li><span class='xr-has-index'>deltaT</span>: 31</li><li><span class='xr-has-index'>temp</span>: 71</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-bd8f2028-5714-4728-8235-63b7c0d7279d' class='xr-array-in' type='checkbox' checked><label for='section-bd8f2028-5714-4728-8235-63b7c0d7279d' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>-20.0 -19.0 -18.0 -17.0 -16.0 -15.0 ... 24.69 25.41 26.13 26.86 27.6</span></div><div class='xr-array-data'><pre>array([[-20.00031076, -19.00027862, -18.00025665, ...,  48.01627406,
             49.00946616,  49.99887666],
           [-20.14112001, -19.15053901, -18.16038562, ...,  47.12097628,
             48.11338117,  49.10208735],
           [-20.27224775, -19.29058932, -18.30976434, ...,  46.23110273,
             47.22184832,  48.20965768],
           ...,
           [-21.68058762, -20.80722563, -19.94087682, ...,  27.17672355,
             27.93267514,  28.69456175],
           [-21.69434401, -20.82229856, -19.95736748, ...,  26.64537694,
             27.3887731 ,  28.13821235],
           [-21.70682482, -20.83598899, -19.97236197, ...,  26.13073289,
             26.86147691,  27.59835289]], shape=(31, 71))</pre></div></div></li><li class='xr-section-item'><input id='section-4e57fdf1-affa-44ca-9876-c1d5f5b9843a' class='xr-section-summary-in' type='checkbox'  checked><label for='section-4e57fdf1-affa-44ca-9876-c1d5f5b9843a' class='xr-section-summary' >Coordinates: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>deltaT</span></div><div class='xr-var-dims'>(deltaT)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.0 1.0 2.0 3.0 ... 28.0 29.0 30.0</div><input id='attrs-63fe3008-da6c-458b-93cd-fffcd9bf5172' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-63fe3008-da6c-458b-93cd-fffcd9bf5172' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-7ba94895-c444-42fa-9769-6ad0d166491c' class='xr-var-data-in' type='checkbox'><label for='data-7ba94895-c444-42fa-9769-6ad0d166491c' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([ 0.,  1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10., 11., 12., 13.,
           14., 15., 16., 17., 18., 19., 20., 21., 22., 23., 24., 25., 26., 27.,
           28., 29., 30.])</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>temp</span></div><div class='xr-var-dims'>(temp)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>-20.0 -19.0 -18.0 ... 49.0 50.0</div><input id='attrs-01da0a77-7a09-446a-978b-8e22da533677' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-01da0a77-7a09-446a-978b-8e22da533677' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-67e64af7-6bae-4ef6-8f07-e0029beabc07' class='xr-var-data-in' type='checkbox'><label for='data-67e64af7-6bae-4ef6-8f07-e0029beabc07' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><div class='xr-var-data'><pre>array([-20., -19., -18., -17., -16., -15., -14., -13., -12., -11., -10.,  -9.,
            -8.,  -7.,  -6.,  -5.,  -4.,  -3.,  -2.,  -1.,   0.,   1.,   2.,   3.,
             4.,   5.,   6.,   7.,   8.,   9.,  10.,  11.,  12.,  13.,  14.,  15.,
            16.,  17.,  18.,  19.,  20.,  21.,  22.,  23.,  24.,  25.,  26.,  27.,
            28.,  29.,  30.,  31.,  32.,  33.,  34.,  35.,  36.,  37.,  38.,  39.,
            40.,  41.,  42.,  43.,  44.,  45.,  46.,  47.,  48.,  49.,  50.])</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-fa7d32d9-57ec-465c-a3b5-6d4effdbf554' class='xr-section-summary-in' type='checkbox'  checked><label for='section-fa7d32d9-57ec-465c-a3b5-6d4effdbf554' class='xr-section-summary' >Attributes: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>wet_bulb_temperature</dd><dt><span>units :</span></dt><dd>degC</dd></dl></div></li></ul></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 281-290

Plot Davies-Jones Results
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

This section visualizes the Davies-Jones results:

- Creates a contour plot of wet_bulb_davies_jones2008 with levels from -20°C to 50°C.
- Labels axes with temperature (:math:`T`) and temperature-dewpoint difference (:math:`T - T_d`).

This plot provides insight into the behavior of the Davies-Jones method across the grid.

.. GENERATED FROM PYTHON SOURCE LINES 290-300

.. code-block:: Python


    fig, ax = plt.subplots(figsize = (6, 6))

    wet_bulb_davies_jones2008.plot.contourf(
        levels = np.arange(-20, 50, 2.5),
        cbar_kwargs = {'location': 'bottom', 'aspect': 60}
    )
    ax.set_xlabel("$\\mathrm{T}$")
    ax.set_ylabel("$\\mathrm{T - T_d}$")




.. image-sg:: /auto_gallery/images/sphx_glr_plot_wet_bulk_005.png
   :alt: plot wet bulk
   :srcset: /auto_gallery/images/sphx_glr_plot_wet_bulk_005.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Text(42.097222222222214, 0.5, '$\\mathrm{T - T_d}$')



.. GENERATED FROM PYTHON SOURCE LINES 301-309

Conclusion
-----------------------------------------------------
The example demonstrates the application of multiple wet-bulb temperature calculation
methods provided by the easyclimate library. By generating synthetic data, creating 2D grids,
and applying iterative, empirical, and approximation-based methods, the script enables a
comprehensive comparison of results. Visualizations highlight differences between methods
and the influence of parameters like elevation, aiding in the evaluation of their accuracy
and applicability in meteorological analysis.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 8.644 seconds)


.. _sphx_glr_download_auto_gallery_plot_wet_bulk.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_wet_bulk.ipynb <plot_wet_bulk.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_wet_bulk.py <plot_wet_bulk.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_wet_bulk.zip <plot_wet_bulk.zip>`

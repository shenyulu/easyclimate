
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_gallery_output/plot_geographic_finite_difference.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_gallery_output_plot_geographic_finite_difference.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_gallery_output_plot_geographic_finite_difference.py:


Geographic Finite Difference
===================================

Before proceeding with all the steps, first import some necessary libraries and packages

.. GENERATED FROM PYTHON SOURCE LINES 8-13

.. code-block:: Python

    import easyclimate as ecl
    import xarray as xr
    import matplotlib.pyplot as plt
    import cartopy.crs as ccrs








.. GENERATED FROM PYTHON SOURCE LINES 14-15

Then consider obtaining meridional and zonal wind variables in tutorial data

.. GENERATED FROM PYTHON SOURCE LINES 15-32

.. code-block:: Python


    u_data = ecl.tutorial.open_tutorial_dataset("uwnd_202201_mon_mean").sortby("lat").uwnd
    v_data = ecl.tutorial.open_tutorial_dataset("vwnd_202201_mon_mean").sortby("lat").vwnd
    z_data = ecl.tutorial.open_tutorial_dataset("hgt_202201_mon_mean").sortby("lat").hgt
    temp_data = ecl.tutorial.open_tutorial_dataset("air_202201_mon_mean").sortby("lat").air
    q_data = ecl.tutorial.open_tutorial_dataset("shum_202201_mon_mean").sortby("lat").shum
    msl_data = (
        ecl.tutorial.open_tutorial_dataset("pressfc_202201_mon_mean").sortby("lat").pres
    )
    pr_data = (
        ecl.tutorial.open_tutorial_dataset("precip_202201_mon_mean").sortby("lat").precip
    )

    uvdata = xr.Dataset()
    uvdata["uwnd"] = u_data
    uvdata["vwnd"] = v_data








.. GENERATED FROM PYTHON SOURCE LINES 33-34

Obtain data slices on 500hPa isobars for January 2022

.. GENERATED FROM PYTHON SOURCE LINES 34-39

.. code-block:: Python


    uvdata_500_202201 = uvdata.sel(level=500, time="2022-01-01")
    z_data_500_202201 = z_data.sel(level=500, time="2022-01-01")
    temp_data_500_202201 = temp_data.sel(level=500, time="2022-01-01")








.. GENERATED FROM PYTHON SOURCE LINES 40-41

Plotting a sample `quiver` plot of this data slice

.. GENERATED FROM PYTHON SOURCE LINES 41-60

.. code-block:: Python


    fig, ax = plt.subplots(
        subplot_kw={"projection": ccrs.PlateCarree(central_longitude=180)}
    )

    ax.stock_img()
    ax.gridlines(draw_labels=["bottom", "left"], color="grey", alpha=0.5, linestyle="--")
    ax.coastlines(edgecolor="black", linewidths=0.5)

    uvdata_500_202201.thin(lon=3, lat=3).plot.quiver(
        ax=ax,
        u="uwnd",
        v="vwnd",
        x="lon",
        y="lat",
        # projection on data
        transform=ccrs.PlateCarree(),
    )




.. image-sg:: /auto_gallery_output/images/sphx_glr_plot_geographic_finite_difference_001.png
   :alt: time = 2022-01-01, level = 500.0 [millibar]
   :srcset: /auto_gallery_output/images/sphx_glr_plot_geographic_finite_difference_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.quiver.Quiver object at 0x7f1f988d8af0>



.. GENERATED FROM PYTHON SOURCE LINES 61-71

First-order Partial Derivative
-------------------------------------

Consider the function :py:func:`easyclimate.calc_gradient <easyclimate.calc_gradient>` to compute the gradient of the zonal wind with respect to longitude.

.. math::

  \frac{\partial u}{\partial \lambda}

The argument `dim` to the function :py:func:`easyclimate.calc_gradient <easyclimate.calc_gradient>` specifies that the direction of the solution is `longitude`.

.. GENERATED FROM PYTHON SOURCE LINES 71-76

.. code-block:: Python


    uwnd_dx = ecl.calc_gradient(uvdata_500_202201.uwnd, dim="lon")

    uwnd_dx






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
    <defs>
    <symbol id="icon-database" viewBox="0 0 32 32">
    <path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
    <path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    <path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    </symbol>
    <symbol id="icon-file-text2" viewBox="0 0 32 32">
    <path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
    <path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    </symbol>
    </defs>
    </svg>
    <style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
     *
     */

    :root {
      --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
      --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
      --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
      --xr-border-color: var(--jp-border-color2, #e0e0e0);
      --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
      --xr-background-color: var(--jp-layout-color0, white);
      --xr-background-color-row-even: var(--jp-layout-color1, white);
      --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
    }

    html[theme="dark"],
    html[data-theme="dark"],
    body[data-theme="dark"],
    body.vscode-dark {
      --xr-font-color0: rgba(255, 255, 255, 1);
      --xr-font-color2: rgba(255, 255, 255, 0.54);
      --xr-font-color3: rgba(255, 255, 255, 0.38);
      --xr-border-color: #1f1f1f;
      --xr-disabled-color: #515151;
      --xr-background-color: #111111;
      --xr-background-color-row-even: #111111;
      --xr-background-color-row-odd: #313131;
    }

    .xr-wrap {
      display: block !important;
      min-width: 300px;
      max-width: 700px;
    }

    .xr-text-repr-fallback {
      /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
      display: none;
    }

    .xr-header {
      padding-top: 6px;
      padding-bottom: 6px;
      margin-bottom: 4px;
      border-bottom: solid 1px var(--xr-border-color);
    }

    .xr-header > div,
    .xr-header > ul {
      display: inline;
      margin-top: 0;
      margin-bottom: 0;
    }

    .xr-obj-type,
    .xr-array-name {
      margin-left: 2px;
      margin-right: 10px;
    }

    .xr-obj-type {
      color: var(--xr-font-color2);
    }

    .xr-sections {
      padding-left: 0 !important;
      display: grid;
      grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;
    }

    .xr-section-item {
      display: contents;
    }

    .xr-section-item input {
      display: inline-block;
      opacity: 0;
      height: 0;
    }

    .xr-section-item input + label {
      color: var(--xr-disabled-color);
    }

    .xr-section-item input:enabled + label {
      cursor: pointer;
      color: var(--xr-font-color2);
    }

    .xr-section-item input:focus + label {
      border: 2px solid var(--xr-font-color0);
    }

    .xr-section-item input:enabled + label:hover {
      color: var(--xr-font-color0);
    }

    .xr-section-summary {
      grid-column: 1;
      color: var(--xr-font-color2);
      font-weight: 500;
    }

    .xr-section-summary > span {
      display: inline-block;
      padding-left: 0.5em;
    }

    .xr-section-summary-in:disabled + label {
      color: var(--xr-font-color2);
    }

    .xr-section-summary-in + label:before {
      display: inline-block;
      content: "►";
      font-size: 11px;
      width: 15px;
      text-align: center;
    }

    .xr-section-summary-in:disabled + label:before {
      color: var(--xr-disabled-color);
    }

    .xr-section-summary-in:checked + label:before {
      content: "▼";
    }

    .xr-section-summary-in:checked + label > span {
      display: none;
    }

    .xr-section-summary,
    .xr-section-inline-details {
      padding-top: 4px;
      padding-bottom: 4px;
    }

    .xr-section-inline-details {
      grid-column: 2 / -1;
    }

    .xr-section-details {
      display: none;
      grid-column: 1 / -1;
      margin-bottom: 5px;
    }

    .xr-section-summary-in:checked ~ .xr-section-details {
      display: contents;
    }

    .xr-array-wrap {
      grid-column: 1 / -1;
      display: grid;
      grid-template-columns: 20px auto;
    }

    .xr-array-wrap > label {
      grid-column: 1;
      vertical-align: top;
    }

    .xr-preview {
      color: var(--xr-font-color3);
    }

    .xr-array-preview,
    .xr-array-data {
      padding: 0 5px !important;
      grid-column: 2;
    }

    .xr-array-data,
    .xr-array-in:checked ~ .xr-array-preview {
      display: none;
    }

    .xr-array-in:checked ~ .xr-array-data,
    .xr-array-preview {
      display: inline-block;
    }

    .xr-dim-list {
      display: inline-block !important;
      list-style: none;
      padding: 0 !important;
      margin: 0;
    }

    .xr-dim-list li {
      display: inline-block;
      padding: 0;
      margin: 0;
    }

    .xr-dim-list:before {
      content: "(";
    }

    .xr-dim-list:after {
      content: ")";
    }

    .xr-dim-list li:not(:last-child):after {
      content: ",";
      padding-right: 5px;
    }

    .xr-has-index {
      font-weight: bold;
    }

    .xr-var-list,
    .xr-var-item {
      display: contents;
    }

    .xr-var-item > div,
    .xr-var-item label,
    .xr-var-item > .xr-var-name span {
      background-color: var(--xr-background-color-row-even);
      margin-bottom: 0;
    }

    .xr-var-item > .xr-var-name:hover span {
      padding-right: 5px;
    }

    .xr-var-list > li:nth-child(odd) > div,
    .xr-var-list > li:nth-child(odd) > label,
    .xr-var-list > li:nth-child(odd) > .xr-var-name span {
      background-color: var(--xr-background-color-row-odd);
    }

    .xr-var-name {
      grid-column: 1;
    }

    .xr-var-dims {
      grid-column: 2;
    }

    .xr-var-dtype {
      grid-column: 3;
      text-align: right;
      color: var(--xr-font-color2);
    }

    .xr-var-preview {
      grid-column: 4;
    }

    .xr-index-preview {
      grid-column: 2 / 5;
      color: var(--xr-font-color2);
    }

    .xr-var-name,
    .xr-var-dims,
    .xr-var-dtype,
    .xr-preview,
    .xr-attrs dt {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      padding-right: 10px;
    }

    .xr-var-name:hover,
    .xr-var-dims:hover,
    .xr-var-dtype:hover,
    .xr-attrs dt:hover {
      overflow: visible;
      width: auto;
      z-index: 1;
    }

    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      display: none;
      background-color: var(--xr-background-color) !important;
      padding-bottom: 5px !important;
    }

    .xr-var-attrs-in:checked ~ .xr-var-attrs,
    .xr-var-data-in:checked ~ .xr-var-data,
    .xr-index-data-in:checked ~ .xr-index-data {
      display: block;
    }

    .xr-var-data > table {
      float: right;
    }

    .xr-var-name span,
    .xr-var-data,
    .xr-index-name div,
    .xr-index-data,
    .xr-attrs {
      padding-left: 25px !important;
    }

    .xr-attrs,
    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      grid-column: 1 / -1;
    }

    dl.xr-attrs {
      padding: 0;
      margin: 0;
      display: grid;
      grid-template-columns: 125px auto;
    }

    .xr-attrs dt,
    .xr-attrs dd {
      padding: 0;
      margin: 0;
      float: left;
      padding-right: 10px;
      width: auto;
    }

    .xr-attrs dt {
      font-weight: normal;
      grid-column: 1;
    }

    .xr-attrs dt:hover span {
      display: inline-block;
      background: var(--xr-background-color);
      padding-right: 10px;
    }

    .xr-attrs dd {
      grid-column: 2;
      white-space: pre-wrap;
      word-break: break-all;
    }

    .xr-icon-database,
    .xr-icon-file-text2,
    .xr-no-icon {
      display: inline-block;
      vertical-align: middle;
      width: 1em;
      height: 1.5em !important;
      stroke-width: 0;
      stroke: currentColor;
      fill: currentColor;
    }
    </style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray &#x27;uwnd&#x27; (lat: 73, lon: 144)&gt; Size: 42kB
    array([[ 0.14999962,  0.13225818,  0.11854815, ...,  0.15927446,
             0.15080655,  0.14274216],
           [ 0.25967765,  0.25645185,  0.24798417, ...,  0.27499998,
             0.27661264,  0.27983665],
           [ 0.33306527,  0.30725718,  0.2846775 , ...,  0.35040367,
             0.34435558,  0.34112835],
           ...,
           [-0.1056456 , -0.12661296, -0.13790333, ..., -0.08024192,
            -0.09354854, -0.11290336],
           [-0.07903278, -0.08870995, -0.09435463, ..., -0.08266127,
            -0.08064544, -0.07741928],
           [-0.0576601 , -0.03749967, -0.02540326, ..., -0.07540298,
            -0.06532216, -0.06693745]], dtype=float32)
    Coordinates:
        time     datetime64[ns] 8B 2022-01-01
      * lon      (lon) float32 576B 0.0 2.5 5.0 7.5 10.0 ... 350.0 352.5 355.0 357.5
      * lat      (lat) float32 292B -90.0 -87.5 -85.0 -82.5 ... 82.5 85.0 87.5 90.0
        level    float32 4B 500.0
    Attributes:
        long_name:     Monthly mean u wind
        units:         m/s
        precision:     2
        var_desc:      u-wind
        level_desc:    Pressure Levels
        statistic:     Mean
        parent_stat:   Other
        dataset:       NCEP Reanalysis Derived Products
        actual_range:  [-68.194824 124.399994]</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'>'uwnd'</div><ul class='xr-dim-list'><li><span class='xr-has-index'>lat</span>: 73</li><li><span class='xr-has-index'>lon</span>: 144</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-d96274f2-ba46-445c-acd4-ccacf0a1c698' class='xr-array-in' type='checkbox' checked><label for='section-d96274f2-ba46-445c-acd4-ccacf0a1c698' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>0.15 0.1323 0.1185 0.1125 ... -0.08952 -0.0754 -0.06532 -0.06694</span></div><div class='xr-array-data'><pre>array([[ 0.14999962,  0.13225818,  0.11854815, ...,  0.15927446,
             0.15080655,  0.14274216],
           [ 0.25967765,  0.25645185,  0.24798417, ...,  0.27499998,
             0.27661264,  0.27983665],
           [ 0.33306527,  0.30725718,  0.2846775 , ...,  0.35040367,
             0.34435558,  0.34112835],
           ...,
           [-0.1056456 , -0.12661296, -0.13790333, ..., -0.08024192,
            -0.09354854, -0.11290336],
           [-0.07903278, -0.08870995, -0.09435463, ..., -0.08266127,
            -0.08064544, -0.07741928],
           [-0.0576601 , -0.03749967, -0.02540326, ..., -0.07540298,
            -0.06532216, -0.06693745]], dtype=float32)</pre></div></div></li><li class='xr-section-item'><input id='section-d3a117cd-775d-414b-a249-95e263515e84' class='xr-section-summary-in' type='checkbox'  checked><label for='section-d3a117cd-775d-414b-a249-95e263515e84' class='xr-section-summary' >Coordinates: <span>(4)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>time</span></div><div class='xr-var-dims'>()</div><div class='xr-var-dtype'>datetime64[ns]</div><div class='xr-var-preview xr-preview'>2022-01-01</div><input id='attrs-f9eea2e2-c927-4a6c-bbb2-576f297fd82a' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-f9eea2e2-c927-4a6c-bbb2-576f297fd82a' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-d4b34eaf-3927-4ea8-89bc-a6a76b62a25c' class='xr-var-data-in' type='checkbox'><label for='data-d4b34eaf-3927-4ea8-89bc-a6a76b62a25c' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>time</dd><dt><span>long_name :</span></dt><dd>Time</dd><dt><span>axis :</span></dt><dd>T</dd></dl></div><div class='xr-var-data'><pre>array(&#x27;2022-01-01T00:00:00.000000000&#x27;, dtype=&#x27;datetime64[ns]&#x27;)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lon</span></div><div class='xr-var-dims'>(lon)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>0.0 2.5 5.0 ... 352.5 355.0 357.5</div><input id='attrs-5616439b-f219-4c8a-a09e-069ada6bc08b' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-5616439b-f219-4c8a-a09e-069ada6bc08b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-1c7f2c48-3349-497a-a103-97d30dc82dbb' class='xr-var-data-in' type='checkbox'><label for='data-1c7f2c48-3349-497a-a103-97d30dc82dbb' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>longitude</dd><dt><span>long_name :</span></dt><dd>Longitude</dd><dt><span>units :</span></dt><dd>degrees_east</dd><dt><span>axis :</span></dt><dd>X</dd></dl></div><div class='xr-var-data'><pre>array([  0. ,   2.5,   5. ,   7.5,  10. ,  12.5,  15. ,  17.5,  20. ,  22.5,
            25. ,  27.5,  30. ,  32.5,  35. ,  37.5,  40. ,  42.5,  45. ,  47.5,
            50. ,  52.5,  55. ,  57.5,  60. ,  62.5,  65. ,  67.5,  70. ,  72.5,
            75. ,  77.5,  80. ,  82.5,  85. ,  87.5,  90. ,  92.5,  95. ,  97.5,
           100. , 102.5, 105. , 107.5, 110. , 112.5, 115. , 117.5, 120. , 122.5,
           125. , 127.5, 130. , 132.5, 135. , 137.5, 140. , 142.5, 145. , 147.5,
           150. , 152.5, 155. , 157.5, 160. , 162.5, 165. , 167.5, 170. , 172.5,
           175. , 177.5, 180. , 182.5, 185. , 187.5, 190. , 192.5, 195. , 197.5,
           200. , 202.5, 205. , 207.5, 210. , 212.5, 215. , 217.5, 220. , 222.5,
           225. , 227.5, 230. , 232.5, 235. , 237.5, 240. , 242.5, 245. , 247.5,
           250. , 252.5, 255. , 257.5, 260. , 262.5, 265. , 267.5, 270. , 272.5,
           275. , 277.5, 280. , 282.5, 285. , 287.5, 290. , 292.5, 295. , 297.5,
           300. , 302.5, 305. , 307.5, 310. , 312.5, 315. , 317.5, 320. , 322.5,
           325. , 327.5, 330. , 332.5, 335. , 337.5, 340. , 342.5, 345. , 347.5,
           350. , 352.5, 355. , 357.5], dtype=float32)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lat</span></div><div class='xr-var-dims'>(lat)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>-90.0 -87.5 -85.0 ... 87.5 90.0</div><input id='attrs-88501336-6150-466f-9879-06972e983e7e' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-88501336-6150-466f-9879-06972e983e7e' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-e0ae992e-6cbc-453b-ab5c-6fd083aaa97b' class='xr-var-data-in' type='checkbox'><label for='data-e0ae992e-6cbc-453b-ab5c-6fd083aaa97b' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>latitude</dd><dt><span>long_name :</span></dt><dd>Latitude</dd><dt><span>units :</span></dt><dd>degrees_north</dd><dt><span>axis :</span></dt><dd>Y</dd></dl></div><div class='xr-var-data'><pre>array([-90. , -87.5, -85. , -82.5, -80. , -77.5, -75. , -72.5, -70. , -67.5,
           -65. , -62.5, -60. , -57.5, -55. , -52.5, -50. , -47.5, -45. , -42.5,
           -40. , -37.5, -35. , -32.5, -30. , -27.5, -25. , -22.5, -20. , -17.5,
           -15. , -12.5, -10. ,  -7.5,  -5. ,  -2.5,   0. ,   2.5,   5. ,   7.5,
            10. ,  12.5,  15. ,  17.5,  20. ,  22.5,  25. ,  27.5,  30. ,  32.5,
            35. ,  37.5,  40. ,  42.5,  45. ,  47.5,  50. ,  52.5,  55. ,  57.5,
            60. ,  62.5,  65. ,  67.5,  70. ,  72.5,  75. ,  77.5,  80. ,  82.5,
            85. ,  87.5,  90. ], dtype=float32)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>level</span></div><div class='xr-var-dims'>()</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>500.0</div><input id='attrs-47b732b0-64f6-477b-ac8f-68b6d779c874' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-47b732b0-64f6-477b-ac8f-68b6d779c874' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-893570b1-8810-4c1f-8d5f-7e2a9b6f0f9b' class='xr-var-data-in' type='checkbox'><label for='data-893570b1-8810-4c1f-8d5f-7e2a9b6f0f9b' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>air_pressure</dd><dt><span>long_name :</span></dt><dd>Level</dd><dt><span>units :</span></dt><dd>millibar</dd><dt><span>positive :</span></dt><dd>down</dd><dt><span>axis :</span></dt><dd>Z</dd><dt><span>GRIB_id :</span></dt><dd>100</dd><dt><span>GRIB_name :</span></dt><dd>hPa</dd><dt><span>actual_range :</span></dt><dd>[1000.   10.]</dd></dl></div><div class='xr-var-data'><pre>array(500., dtype=float32)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-e9216e1f-f3b1-4a7c-bb64-b5b35d331615' class='xr-section-summary-in' type='checkbox'  ><label for='section-e9216e1f-f3b1-4a7c-bb64-b5b35d331615' class='xr-section-summary' >Indexes: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>lon</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-0d81406d-e0bb-4661-8b20-2cf932e66695' class='xr-index-data-in' type='checkbox'/><label for='index-0d81406d-e0bb-4661-8b20-2cf932e66695' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([  0.0,   2.5,   5.0,   7.5,  10.0,  12.5,  15.0,  17.5,  20.0,  22.5,
           ...
           335.0, 337.5, 340.0, 342.5, 345.0, 347.5, 350.0, 352.5, 355.0, 357.5],
          dtype=&#x27;float32&#x27;, name=&#x27;lon&#x27;, length=144))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>lat</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-448e8736-3413-4ac7-a745-0570a51c6e74' class='xr-index-data-in' type='checkbox'/><label for='index-448e8736-3413-4ac7-a745-0570a51c6e74' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([-90.0, -87.5, -85.0, -82.5, -80.0, -77.5, -75.0, -72.5, -70.0, -67.5,
           -65.0, -62.5, -60.0, -57.5, -55.0, -52.5, -50.0, -47.5, -45.0, -42.5,
           -40.0, -37.5, -35.0, -32.5, -30.0, -27.5, -25.0, -22.5, -20.0, -17.5,
           -15.0, -12.5, -10.0,  -7.5,  -5.0,  -2.5,   0.0,   2.5,   5.0,   7.5,
            10.0,  12.5,  15.0,  17.5,  20.0,  22.5,  25.0,  27.5,  30.0,  32.5,
            35.0,  37.5,  40.0,  42.5,  45.0,  47.5,  50.0,  52.5,  55.0,  57.5,
            60.0,  62.5,  65.0,  67.5,  70.0,  72.5,  75.0,  77.5,  80.0,  82.5,
            85.0,  87.5,  90.0],
          dtype=&#x27;float32&#x27;, name=&#x27;lat&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-00860a85-8ee1-4a4f-9e45-44eaceab4bf1' class='xr-section-summary-in' type='checkbox'  checked><label for='section-00860a85-8ee1-4a4f-9e45-44eaceab4bf1' class='xr-section-summary' >Attributes: <span>(9)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>long_name :</span></dt><dd>Monthly mean u wind</dd><dt><span>units :</span></dt><dd>m/s</dd><dt><span>precision :</span></dt><dd>2</dd><dt><span>var_desc :</span></dt><dd>u-wind</dd><dt><span>level_desc :</span></dt><dd>Pressure Levels</dd><dt><span>statistic :</span></dt><dd>Mean</dd><dt><span>parent_stat :</span></dt><dd>Other</dd><dt><span>dataset :</span></dt><dd>NCEP Reanalysis Derived Products</dd><dt><span>actual_range :</span></dt><dd>[-68.194824 124.399994]</dd></dl></div></li></ul></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 77-95

.. code-block:: Python


    fig, ax = plt.subplots(
        subplot_kw={"projection": ccrs.PlateCarree(central_longitude=180)}
    )

    ax.stock_img()
    ax.gridlines(draw_labels=["bottom", "left"], color="grey", alpha=0.5, linestyle="--")
    ax.coastlines(edgecolor="black", linewidths=0.5)

    uwnd_dx.plot.contourf(
        ax=ax,
        # projection on data
        transform=ccrs.PlateCarree(),
        # Colorbar is placed at the bottom
        cbar_kwargs={"location": "bottom"},
        levels=21,
    )




.. image-sg:: /auto_gallery_output/images/sphx_glr_plot_geographic_finite_difference_002.png
   :alt: time = 2022-01-01, level = 500.0 [millibar]
   :srcset: /auto_gallery_output/images/sphx_glr_plot_geographic_finite_difference_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <cartopy.mpl.contour.GeoContourSet object at 0x7f1f985e7c40>



.. GENERATED FROM PYTHON SOURCE LINES 96-97

Of course, it is also possible to pass in :py:class:`xarray.Dataset<xarray.Dataset>` directly into the function :py:func:`easyclimate.calc_gradient <easyclimate.calc_gradient>` to iterate through all the variables, so that you can get the gradient of both the zonal and meridional winds with respect to longitude at the same time.

.. GENERATED FROM PYTHON SOURCE LINES 97-102

.. code-block:: Python


    uvwnd_dx = ecl.calc_gradient(uvdata_500_202201, dim="lon")

    uvwnd_dx






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
    <defs>
    <symbol id="icon-database" viewBox="0 0 32 32">
    <path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
    <path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    <path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    </symbol>
    <symbol id="icon-file-text2" viewBox="0 0 32 32">
    <path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
    <path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    </symbol>
    </defs>
    </svg>
    <style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
     *
     */

    :root {
      --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
      --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
      --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
      --xr-border-color: var(--jp-border-color2, #e0e0e0);
      --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
      --xr-background-color: var(--jp-layout-color0, white);
      --xr-background-color-row-even: var(--jp-layout-color1, white);
      --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
    }

    html[theme="dark"],
    html[data-theme="dark"],
    body[data-theme="dark"],
    body.vscode-dark {
      --xr-font-color0: rgba(255, 255, 255, 1);
      --xr-font-color2: rgba(255, 255, 255, 0.54);
      --xr-font-color3: rgba(255, 255, 255, 0.38);
      --xr-border-color: #1f1f1f;
      --xr-disabled-color: #515151;
      --xr-background-color: #111111;
      --xr-background-color-row-even: #111111;
      --xr-background-color-row-odd: #313131;
    }

    .xr-wrap {
      display: block !important;
      min-width: 300px;
      max-width: 700px;
    }

    .xr-text-repr-fallback {
      /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
      display: none;
    }

    .xr-header {
      padding-top: 6px;
      padding-bottom: 6px;
      margin-bottom: 4px;
      border-bottom: solid 1px var(--xr-border-color);
    }

    .xr-header > div,
    .xr-header > ul {
      display: inline;
      margin-top: 0;
      margin-bottom: 0;
    }

    .xr-obj-type,
    .xr-array-name {
      margin-left: 2px;
      margin-right: 10px;
    }

    .xr-obj-type {
      color: var(--xr-font-color2);
    }

    .xr-sections {
      padding-left: 0 !important;
      display: grid;
      grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;
    }

    .xr-section-item {
      display: contents;
    }

    .xr-section-item input {
      display: inline-block;
      opacity: 0;
      height: 0;
    }

    .xr-section-item input + label {
      color: var(--xr-disabled-color);
    }

    .xr-section-item input:enabled + label {
      cursor: pointer;
      color: var(--xr-font-color2);
    }

    .xr-section-item input:focus + label {
      border: 2px solid var(--xr-font-color0);
    }

    .xr-section-item input:enabled + label:hover {
      color: var(--xr-font-color0);
    }

    .xr-section-summary {
      grid-column: 1;
      color: var(--xr-font-color2);
      font-weight: 500;
    }

    .xr-section-summary > span {
      display: inline-block;
      padding-left: 0.5em;
    }

    .xr-section-summary-in:disabled + label {
      color: var(--xr-font-color2);
    }

    .xr-section-summary-in + label:before {
      display: inline-block;
      content: "►";
      font-size: 11px;
      width: 15px;
      text-align: center;
    }

    .xr-section-summary-in:disabled + label:before {
      color: var(--xr-disabled-color);
    }

    .xr-section-summary-in:checked + label:before {
      content: "▼";
    }

    .xr-section-summary-in:checked + label > span {
      display: none;
    }

    .xr-section-summary,
    .xr-section-inline-details {
      padding-top: 4px;
      padding-bottom: 4px;
    }

    .xr-section-inline-details {
      grid-column: 2 / -1;
    }

    .xr-section-details {
      display: none;
      grid-column: 1 / -1;
      margin-bottom: 5px;
    }

    .xr-section-summary-in:checked ~ .xr-section-details {
      display: contents;
    }

    .xr-array-wrap {
      grid-column: 1 / -1;
      display: grid;
      grid-template-columns: 20px auto;
    }

    .xr-array-wrap > label {
      grid-column: 1;
      vertical-align: top;
    }

    .xr-preview {
      color: var(--xr-font-color3);
    }

    .xr-array-preview,
    .xr-array-data {
      padding: 0 5px !important;
      grid-column: 2;
    }

    .xr-array-data,
    .xr-array-in:checked ~ .xr-array-preview {
      display: none;
    }

    .xr-array-in:checked ~ .xr-array-data,
    .xr-array-preview {
      display: inline-block;
    }

    .xr-dim-list {
      display: inline-block !important;
      list-style: none;
      padding: 0 !important;
      margin: 0;
    }

    .xr-dim-list li {
      display: inline-block;
      padding: 0;
      margin: 0;
    }

    .xr-dim-list:before {
      content: "(";
    }

    .xr-dim-list:after {
      content: ")";
    }

    .xr-dim-list li:not(:last-child):after {
      content: ",";
      padding-right: 5px;
    }

    .xr-has-index {
      font-weight: bold;
    }

    .xr-var-list,
    .xr-var-item {
      display: contents;
    }

    .xr-var-item > div,
    .xr-var-item label,
    .xr-var-item > .xr-var-name span {
      background-color: var(--xr-background-color-row-even);
      margin-bottom: 0;
    }

    .xr-var-item > .xr-var-name:hover span {
      padding-right: 5px;
    }

    .xr-var-list > li:nth-child(odd) > div,
    .xr-var-list > li:nth-child(odd) > label,
    .xr-var-list > li:nth-child(odd) > .xr-var-name span {
      background-color: var(--xr-background-color-row-odd);
    }

    .xr-var-name {
      grid-column: 1;
    }

    .xr-var-dims {
      grid-column: 2;
    }

    .xr-var-dtype {
      grid-column: 3;
      text-align: right;
      color: var(--xr-font-color2);
    }

    .xr-var-preview {
      grid-column: 4;
    }

    .xr-index-preview {
      grid-column: 2 / 5;
      color: var(--xr-font-color2);
    }

    .xr-var-name,
    .xr-var-dims,
    .xr-var-dtype,
    .xr-preview,
    .xr-attrs dt {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      padding-right: 10px;
    }

    .xr-var-name:hover,
    .xr-var-dims:hover,
    .xr-var-dtype:hover,
    .xr-attrs dt:hover {
      overflow: visible;
      width: auto;
      z-index: 1;
    }

    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      display: none;
      background-color: var(--xr-background-color) !important;
      padding-bottom: 5px !important;
    }

    .xr-var-attrs-in:checked ~ .xr-var-attrs,
    .xr-var-data-in:checked ~ .xr-var-data,
    .xr-index-data-in:checked ~ .xr-index-data {
      display: block;
    }

    .xr-var-data > table {
      float: right;
    }

    .xr-var-name span,
    .xr-var-data,
    .xr-index-name div,
    .xr-index-data,
    .xr-attrs {
      padding-left: 25px !important;
    }

    .xr-attrs,
    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      grid-column: 1 / -1;
    }

    dl.xr-attrs {
      padding: 0;
      margin: 0;
      display: grid;
      grid-template-columns: 125px auto;
    }

    .xr-attrs dt,
    .xr-attrs dd {
      padding: 0;
      margin: 0;
      float: left;
      padding-right: 10px;
      width: auto;
    }

    .xr-attrs dt {
      font-weight: normal;
      grid-column: 1;
    }

    .xr-attrs dt:hover span {
      display: inline-block;
      background: var(--xr-background-color);
      padding-right: 10px;
    }

    .xr-attrs dd {
      grid-column: 2;
      white-space: pre-wrap;
      word-break: break-all;
    }

    .xr-icon-database,
    .xr-icon-file-text2,
    .xr-no-icon {
      display: inline-block;
      vertical-align: middle;
      width: 1em;
      height: 1.5em !important;
      stroke-width: 0;
      stroke: currentColor;
      fill: currentColor;
    }
    </style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 85kB
    Dimensions:  (lon: 144, lat: 73)
    Coordinates:
        time     datetime64[ns] 8B 2022-01-01
      * lon      (lon) float32 576B 0.0 2.5 5.0 7.5 10.0 ... 350.0 352.5 355.0 357.5
      * lat      (lat) float32 292B -90.0 -87.5 -85.0 -82.5 ... 82.5 85.0 87.5 90.0
        level    float32 4B 500.0
    Data variables:
        uwnd     (lat, lon) float32 42kB 0.15 0.1323 0.1185 ... -0.06532 -0.06694
        vwnd     (lat, lon) float32 42kB 0.1734 0.1815 0.1895 ... 0.2234 0.2137</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-a877aea3-1f43-457e-b51b-43f486aada34' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-a877aea3-1f43-457e-b51b-43f486aada34' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span class='xr-has-index'>lon</span>: 144</li><li><span class='xr-has-index'>lat</span>: 73</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-af22efa0-8540-43ec-a386-209911ab0466' class='xr-section-summary-in' type='checkbox'  checked><label for='section-af22efa0-8540-43ec-a386-209911ab0466' class='xr-section-summary' >Coordinates: <span>(4)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>time</span></div><div class='xr-var-dims'>()</div><div class='xr-var-dtype'>datetime64[ns]</div><div class='xr-var-preview xr-preview'>2022-01-01</div><input id='attrs-54abf259-29aa-42d5-afe1-91220f4391a6' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-54abf259-29aa-42d5-afe1-91220f4391a6' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-ad70f014-31e6-41ba-a3c2-636b9d0e8d6c' class='xr-var-data-in' type='checkbox'><label for='data-ad70f014-31e6-41ba-a3c2-636b9d0e8d6c' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>time</dd><dt><span>long_name :</span></dt><dd>Time</dd><dt><span>axis :</span></dt><dd>T</dd></dl></div><div class='xr-var-data'><pre>array(&#x27;2022-01-01T00:00:00.000000000&#x27;, dtype=&#x27;datetime64[ns]&#x27;)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lon</span></div><div class='xr-var-dims'>(lon)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>0.0 2.5 5.0 ... 352.5 355.0 357.5</div><input id='attrs-f53611c1-cc7f-4378-820d-86547fd468f5' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-f53611c1-cc7f-4378-820d-86547fd468f5' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-321a6d0d-bb85-4be6-8668-1fec32e386a0' class='xr-var-data-in' type='checkbox'><label for='data-321a6d0d-bb85-4be6-8668-1fec32e386a0' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>longitude</dd><dt><span>long_name :</span></dt><dd>Longitude</dd><dt><span>units :</span></dt><dd>degrees_east</dd><dt><span>axis :</span></dt><dd>X</dd></dl></div><div class='xr-var-data'><pre>array([  0. ,   2.5,   5. ,   7.5,  10. ,  12.5,  15. ,  17.5,  20. ,  22.5,
            25. ,  27.5,  30. ,  32.5,  35. ,  37.5,  40. ,  42.5,  45. ,  47.5,
            50. ,  52.5,  55. ,  57.5,  60. ,  62.5,  65. ,  67.5,  70. ,  72.5,
            75. ,  77.5,  80. ,  82.5,  85. ,  87.5,  90. ,  92.5,  95. ,  97.5,
           100. , 102.5, 105. , 107.5, 110. , 112.5, 115. , 117.5, 120. , 122.5,
           125. , 127.5, 130. , 132.5, 135. , 137.5, 140. , 142.5, 145. , 147.5,
           150. , 152.5, 155. , 157.5, 160. , 162.5, 165. , 167.5, 170. , 172.5,
           175. , 177.5, 180. , 182.5, 185. , 187.5, 190. , 192.5, 195. , 197.5,
           200. , 202.5, 205. , 207.5, 210. , 212.5, 215. , 217.5, 220. , 222.5,
           225. , 227.5, 230. , 232.5, 235. , 237.5, 240. , 242.5, 245. , 247.5,
           250. , 252.5, 255. , 257.5, 260. , 262.5, 265. , 267.5, 270. , 272.5,
           275. , 277.5, 280. , 282.5, 285. , 287.5, 290. , 292.5, 295. , 297.5,
           300. , 302.5, 305. , 307.5, 310. , 312.5, 315. , 317.5, 320. , 322.5,
           325. , 327.5, 330. , 332.5, 335. , 337.5, 340. , 342.5, 345. , 347.5,
           350. , 352.5, 355. , 357.5], dtype=float32)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lat</span></div><div class='xr-var-dims'>(lat)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>-90.0 -87.5 -85.0 ... 87.5 90.0</div><input id='attrs-b0ae9238-640d-4e45-97e6-4046e369d96b' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-b0ae9238-640d-4e45-97e6-4046e369d96b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-fc690ba8-5f67-42bc-9a18-0437078ef6ea' class='xr-var-data-in' type='checkbox'><label for='data-fc690ba8-5f67-42bc-9a18-0437078ef6ea' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>latitude</dd><dt><span>long_name :</span></dt><dd>Latitude</dd><dt><span>units :</span></dt><dd>degrees_north</dd><dt><span>axis :</span></dt><dd>Y</dd></dl></div><div class='xr-var-data'><pre>array([-90. , -87.5, -85. , -82.5, -80. , -77.5, -75. , -72.5, -70. , -67.5,
           -65. , -62.5, -60. , -57.5, -55. , -52.5, -50. , -47.5, -45. , -42.5,
           -40. , -37.5, -35. , -32.5, -30. , -27.5, -25. , -22.5, -20. , -17.5,
           -15. , -12.5, -10. ,  -7.5,  -5. ,  -2.5,   0. ,   2.5,   5. ,   7.5,
            10. ,  12.5,  15. ,  17.5,  20. ,  22.5,  25. ,  27.5,  30. ,  32.5,
            35. ,  37.5,  40. ,  42.5,  45. ,  47.5,  50. ,  52.5,  55. ,  57.5,
            60. ,  62.5,  65. ,  67.5,  70. ,  72.5,  75. ,  77.5,  80. ,  82.5,
            85. ,  87.5,  90. ], dtype=float32)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>level</span></div><div class='xr-var-dims'>()</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>500.0</div><input id='attrs-e68ba3b0-4dc6-4f00-99e6-a96175b85e45' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-e68ba3b0-4dc6-4f00-99e6-a96175b85e45' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b5289238-e67c-48d5-8730-d67ddd9d3365' class='xr-var-data-in' type='checkbox'><label for='data-b5289238-e67c-48d5-8730-d67ddd9d3365' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>air_pressure</dd><dt><span>long_name :</span></dt><dd>Level</dd><dt><span>units :</span></dt><dd>millibar</dd><dt><span>positive :</span></dt><dd>down</dd><dt><span>axis :</span></dt><dd>Z</dd><dt><span>GRIB_id :</span></dt><dd>100</dd><dt><span>GRIB_name :</span></dt><dd>hPa</dd><dt><span>actual_range :</span></dt><dd>[1000.   10.]</dd></dl></div><div class='xr-var-data'><pre>array(500., dtype=float32)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-d2ce788b-e84d-4f77-9f31-a782073bc004' class='xr-section-summary-in' type='checkbox'  checked><label for='section-d2ce788b-e84d-4f77-9f31-a782073bc004' class='xr-section-summary' >Data variables: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>uwnd</span></div><div class='xr-var-dims'>(lat, lon)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>0.15 0.1323 ... -0.06532 -0.06694</div><input id='attrs-f47c1d5c-4277-44a5-9310-f91e5d8cf38c' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-f47c1d5c-4277-44a5-9310-f91e5d8cf38c' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b76014ad-c035-4f8d-adb9-b7eecca3d294' class='xr-var-data-in' type='checkbox'><label for='data-b76014ad-c035-4f8d-adb9-b7eecca3d294' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>long_name :</span></dt><dd>Monthly mean u wind</dd><dt><span>units :</span></dt><dd>m/s</dd><dt><span>precision :</span></dt><dd>2</dd><dt><span>var_desc :</span></dt><dd>u-wind</dd><dt><span>level_desc :</span></dt><dd>Pressure Levels</dd><dt><span>statistic :</span></dt><dd>Mean</dd><dt><span>parent_stat :</span></dt><dd>Other</dd><dt><span>dataset :</span></dt><dd>NCEP Reanalysis Derived Products</dd><dt><span>actual_range :</span></dt><dd>[-68.194824 124.399994]</dd></dl></div><div class='xr-var-data'><pre>array([[ 0.14999962,  0.13225818,  0.11854815, ...,  0.15927446,
             0.15080655,  0.14274216],
           [ 0.25967765,  0.25645185,  0.24798417, ...,  0.27499998,
             0.27661264,  0.27983665],
           [ 0.33306527,  0.30725718,  0.2846775 , ...,  0.35040367,
             0.34435558,  0.34112835],
           ...,
           [-0.1056456 , -0.12661296, -0.13790333, ..., -0.08024192,
            -0.09354854, -0.11290336],
           [-0.07903278, -0.08870995, -0.09435463, ..., -0.08266127,
            -0.08064544, -0.07741928],
           [-0.0576601 , -0.03749967, -0.02540326, ..., -0.07540298,
            -0.06532216, -0.06693745]], dtype=float32)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>vwnd</span></div><div class='xr-var-dims'>(lat, lon)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>0.1734 0.1815 ... 0.2234 0.2137</div><input id='attrs-6924acaa-ee4c-40bf-96b2-ca6b1486f6e0' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-6924acaa-ee4c-40bf-96b2-ca6b1486f6e0' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-8460ecca-6b20-4084-b015-4dfdf89ce37e' class='xr-var-data-in' type='checkbox'><label for='data-8460ecca-6b20-4084-b015-4dfdf89ce37e' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>long_name :</span></dt><dd>Monthly mean v wind</dd><dt><span>units :</span></dt><dd>m/s</dd><dt><span>precision :</span></dt><dd>2</dd><dt><span>var_desc :</span></dt><dd>v-wind</dd><dt><span>level_desc :</span></dt><dd>Pressure Levels</dd><dt><span>statistic :</span></dt><dd>Mean</dd><dt><span>parent_stat :</span></dt><dd>Other</dd><dt><span>dataset :</span></dt><dd>NCEP Reanalysis Derived Products</dd><dt><span>actual_range :</span></dt><dd>[-68.57001  68.56999]</dd></dl></div><div class='xr-var-data'><pre>array([[ 0.17338598,  0.1814518 ,  0.18951654, ...,  0.15846789,
             0.1677419 ,  0.17258167],
           [ 0.1516118 ,  0.16128993,  0.18346763, ...,  0.08145142,
             0.09516072,  0.10322666],
           [ 0.1903243 ,  0.24516177,  0.28387117, ...,  0.06572509,
             0.11209702,  0.16209793],
           ...,
           [-0.02338713, -0.00887108,  0.00120991, ..., -0.0399195 ,
            -0.03588688, -0.02540255],
           [ 0.10685444,  0.11249995,  0.11653227, ...,  0.09112895,
             0.09274191,  0.10564566],
           [ 0.22661296,  0.22983876,  0.2318549 , ...,  0.2217744 ,
             0.22338712,  0.21370983]], dtype=float32)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-aacadb3f-a435-4897-a2e2-78d059253f00' class='xr-section-summary-in' type='checkbox'  ><label for='section-aacadb3f-a435-4897-a2e2-78d059253f00' class='xr-section-summary' >Indexes: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>lon</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-2df95653-6269-481c-81ae-ae7129020c67' class='xr-index-data-in' type='checkbox'/><label for='index-2df95653-6269-481c-81ae-ae7129020c67' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([  0.0,   2.5,   5.0,   7.5,  10.0,  12.5,  15.0,  17.5,  20.0,  22.5,
           ...
           335.0, 337.5, 340.0, 342.5, 345.0, 347.5, 350.0, 352.5, 355.0, 357.5],
          dtype=&#x27;float32&#x27;, name=&#x27;lon&#x27;, length=144))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>lat</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-2aa63c28-443f-44f4-a9c7-0ac16a78d16a' class='xr-index-data-in' type='checkbox'/><label for='index-2aa63c28-443f-44f4-a9c7-0ac16a78d16a' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([-90.0, -87.5, -85.0, -82.5, -80.0, -77.5, -75.0, -72.5, -70.0, -67.5,
           -65.0, -62.5, -60.0, -57.5, -55.0, -52.5, -50.0, -47.5, -45.0, -42.5,
           -40.0, -37.5, -35.0, -32.5, -30.0, -27.5, -25.0, -22.5, -20.0, -17.5,
           -15.0, -12.5, -10.0,  -7.5,  -5.0,  -2.5,   0.0,   2.5,   5.0,   7.5,
            10.0,  12.5,  15.0,  17.5,  20.0,  22.5,  25.0,  27.5,  30.0,  32.5,
            35.0,  37.5,  40.0,  42.5,  45.0,  47.5,  50.0,  52.5,  55.0,  57.5,
            60.0,  62.5,  65.0,  67.5,  70.0,  72.5,  75.0,  77.5,  80.0,  82.5,
            85.0,  87.5,  90.0],
          dtype=&#x27;float32&#x27;, name=&#x27;lat&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-3d814b16-dde7-462b-b06a-b2425e3cf927' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-3d814b16-dde7-462b-b06a-b2425e3cf927' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 103-107

However, if one is required to solve for the gradient of the zonal wind with respect to the corresponding distance at each longitude, the function `calc_lon_gradient` should be used to calculate.

.. math::
  \frac{\partial F}{\partial x} = \frac{1}{R \cos\varphi} \cdot \frac{\partial F}{\partial \lambda}

.. GENERATED FROM PYTHON SOURCE LINES 107-126

.. code-block:: Python


    uwnd_dlon = ecl.calc_lon_gradient(uvdata_500_202201.uwnd, lon_dim="lon", lat_dim="lat")

    fig, ax = plt.subplots(
        subplot_kw={"projection": ccrs.PlateCarree(central_longitude=180)}
    )

    ax.gridlines(draw_labels=["bottom", "left"], color="grey", alpha=0.5, linestyle="--")
    ax.coastlines(edgecolor="black", linewidths=0.5)

    uwnd_dlon.plot.contourf(
        ax=ax,
        # projection on data
        transform=ccrs.PlateCarree(),
        # Colorbar is placed at the bottom
        cbar_kwargs={"location": "bottom"},
        levels=21,
    )




.. image-sg:: /auto_gallery_output/images/sphx_glr_plot_geographic_finite_difference_003.png
   :alt: time = 2022-01-01, level = 500.0 [millibar]
   :srcset: /auto_gallery_output/images/sphx_glr_plot_geographic_finite_difference_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <cartopy.mpl.contour.GeoContourSet object at 0x7f1f98425b10>



.. GENERATED FROM PYTHON SOURCE LINES 127-128

Similarly, use :py:func:`easyclimate.calc_lat_gradient <easyclimate.calc_lat_gradient>` to solve for the gradient of the meridional wind with respect to the corresponding distance at each latitude.

.. GENERATED FROM PYTHON SOURCE LINES 130-139

Second-order Partial Derivative
------------------------------------

The solution of the second-order partial derivative relies on three functional calculations

- :py:func:`easyclimate.calc_lon_laplacian <easyclimate.calc_lon_laplacian>`: calculation of the second-order partial derivative term (Laplace term) along longitude.

.. math::
  \frac{\partial^2 F}{\partial x^2} = \frac{1}{(R \cos\varphi)^2} \cdot \frac{\partial^2 F}{\partial \lambda^2}

.. GENERATED FROM PYTHON SOURCE LINES 139-144

.. code-block:: Python


    uwnd_dlon2 = ecl.calc_lon_laplacian(
        uvdata_500_202201.uwnd, lon_dim="lon", lat_dim="lat"
    )








.. GENERATED FROM PYTHON SOURCE LINES 145-149

- :py:func:`easyclimate.calc_lat_laplacian <easyclimate.calc_lat_laplacian>`: calculation of the second-order partial derivative term (Laplace term) along latitude.

.. math::
  \frac{\partial^2 F}{\partial y^2} = \frac{1}{R^2} \cdot \frac{\partial^2 F}{\partial \varphi^2}

.. GENERATED FROM PYTHON SOURCE LINES 150-153

.. code-block:: Python


    uwnd_dlat2 = ecl.calc_lat_laplacian(uvdata_500_202201.uwnd, lat_dim="lat")








.. GENERATED FROM PYTHON SOURCE LINES 154-159

- :py:func:`easyclimate.calc_lon_lat_mixed_derivatives <easyclimate.calc_lon_lat_mixed_derivatives>`: second-order mixed partial derivative terms along longitude and latitude.

.. math::
  \frac{\partial^2 F}{\partial x \partial y} = \frac{1}{R^2 \cos\varphi} \cdot \frac{\partial^2 F}{\partial \lambda \partial \varphi}


.. GENERATED FROM PYTHON SOURCE LINES 160-165

.. code-block:: Python


    uwnd_dlonlat = ecl.calc_lon_lat_mixed_derivatives(
        uvdata_500_202201.uwnd, lon_dim="lon", lat_dim="lat"
    )








.. GENERATED FROM PYTHON SOURCE LINES 166-167

Second-order partial derivative term along longitude.

.. GENERATED FROM PYTHON SOURCE LINES 167-180

.. code-block:: Python


    fig, ax = plt.subplots(
        subplot_kw={"projection": ccrs.PlateCarree(central_longitude=180)}
    )

    ax.gridlines(draw_labels=["bottom", "left"], color="grey", alpha=0.5, linestyle="--")
    ax.coastlines(edgecolor="black", linewidths=0.5)

    uwnd_dlon2.plot.contourf(
        ax=ax, transform=ccrs.PlateCarree(), cbar_kwargs={"location": "bottom"}, levels=21
    )
    ax.set_title("$\\frac{\\partial^2 F}{\\partial x^2}$", fontsize=20)




.. image-sg:: /auto_gallery_output/images/sphx_glr_plot_geographic_finite_difference_004.png
   :alt: $\frac{\partial^2 F}{\partial x^2}$
   :srcset: /auto_gallery_output/images/sphx_glr_plot_geographic_finite_difference_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Text(0.5, 1.0326797365031362, '$\\frac{\\partial^2 F}{\\partial x^2}$')



.. GENERATED FROM PYTHON SOURCE LINES 181-182

Second-order partial derivative term along latitude.

.. GENERATED FROM PYTHON SOURCE LINES 182-195

.. code-block:: Python


    fig, ax = plt.subplots(
        subplot_kw={"projection": ccrs.PlateCarree(central_longitude=180)}
    )

    ax.gridlines(draw_labels=["bottom", "left"], color="grey", alpha=0.5, linestyle="--")
    ax.coastlines(edgecolor="black", linewidths=0.5)

    uwnd_dlat2.plot.contourf(
        ax=ax, transform=ccrs.PlateCarree(), cbar_kwargs={"location": "bottom"}, levels=21
    )
    ax.set_title("$\\frac{\\partial^2 F}{\\partial y^2}$", fontsize=20)




.. image-sg:: /auto_gallery_output/images/sphx_glr_plot_geographic_finite_difference_005.png
   :alt: $\frac{\partial^2 F}{\partial y^2}$
   :srcset: /auto_gallery_output/images/sphx_glr_plot_geographic_finite_difference_005.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Text(0.5, 1.048071096550179, '$\\frac{\\partial^2 F}{\\partial y^2}$')



.. GENERATED FROM PYTHON SOURCE LINES 196-197

Second-order mixed partial derivative terms along longitude and latitude.

.. GENERATED FROM PYTHON SOURCE LINES 197-210

.. code-block:: Python


    fig, ax = plt.subplots(
        subplot_kw={"projection": ccrs.PlateCarree(central_longitude=180)}
    )

    ax.gridlines(draw_labels=["bottom", "left"], color="grey", alpha=0.5, linestyle="--")
    ax.coastlines(edgecolor="black", linewidths=0.5)

    uwnd_dlonlat.plot.contourf(
        ax=ax, transform=ccrs.PlateCarree(), cbar_kwargs={"location": "bottom"}, levels=21
    )
    ax.set_title("$\\frac{\\partial^2 F}{\\partial x \\partial y}$", fontsize=20)




.. image-sg:: /auto_gallery_output/images/sphx_glr_plot_geographic_finite_difference_006.png
   :alt: $\frac{\partial^2 F}{\partial x \partial y}$
   :srcset: /auto_gallery_output/images/sphx_glr_plot_geographic_finite_difference_006.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Text(0.5, 1.02873053875448, '$\\frac{\\partial^2 F}{\\partial x \\partial y}$')



.. GENERATED FROM PYTHON SOURCE LINES 211-221

Vorticity and Divergence
------------------------------------

Vorticity and divergence are measures of the degree of atmospheric rotation and volumetric flux per unit volume respectively. For vorticity and divergence in the quasi-geostrophic case, the potential height is used as input data for the calculations. In general, we first calculate the quasi-geostrophic wind.

- :py:func:`easyclimate.calc_geostrophic_wind <easyclimate.calc_geostrophic_wind>`: calculate the geostrophic wind.

.. math::
  u_g = - \frac{g}{f} \frac{\partial H}{\partial y}, \ v_g = \frac{g}{f} \frac{\partial H}{\partial x}


.. GENERATED FROM PYTHON SOURCE LINES 221-226

.. code-block:: Python


    geostrophic_wind_data_500_202201 = ecl.calc_geostrophic_wind(
        z_data_500_202201, lon_dim="lon", lat_dim="lat"
    )








.. GENERATED FROM PYTHON SOURCE LINES 227-234

The function :py:func:`easyclimate.calc_vorticity <easyclimate.calc_vorticity>` is then used to compute the quasi-geostrophic vorticity.

- :py:func:`easyclimate.calc_vorticity <easyclimate.calc_vorticity>`: calculate the horizontal relative vorticity term.

.. math::
  \zeta = \frac{\partial v}{\partial x} - \frac{\partial u}{\partial y} + \frac{u}{R} \tan \varphi


.. GENERATED FROM PYTHON SOURCE LINES 234-244

.. code-block:: Python


    qg_vor_data_500_202201 = ecl.calc_vorticity(
        u_data=geostrophic_wind_data_500_202201.ug,
        v_data=geostrophic_wind_data_500_202201.vg,
        lon_dim="lon",
        lat_dim="lat",
    )

    qg_vor_data_500_202201.sel(lat=slice(20, 80)).plot.contourf(levels=21)




.. image-sg:: /auto_gallery_output/images/sphx_glr_plot_geographic_finite_difference_007.png
   :alt: time = 2022-01-01, level = 500.0 [millibar]
   :srcset: /auto_gallery_output/images/sphx_glr_plot_geographic_finite_difference_007.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.contour.QuadContourSet object at 0x7f1f98841ab0>



.. GENERATED FROM PYTHON SOURCE LINES 245-246

Similar vorticity for actual winds, but for actual winds rather than quasi-geostrophic winds.

.. GENERATED FROM PYTHON SOURCE LINES 246-256

.. code-block:: Python


    vor_data_500_202201 = ecl.calc_vorticity(
        u_data=uvdata_500_202201["uwnd"],
        v_data=uvdata_500_202201["vwnd"],
        lon_dim="lon",
        lat_dim="lat",
    )

    vor_data_500_202201.sel(lat=slice(20, 80)).plot.contourf(levels=21)




.. image-sg:: /auto_gallery_output/images/sphx_glr_plot_geographic_finite_difference_008.png
   :alt: time = 2022-01-01, level = 500.0 [millibar]
   :srcset: /auto_gallery_output/images/sphx_glr_plot_geographic_finite_difference_008.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.contour.QuadContourSet object at 0x7f1f980e12d0>



.. GENERATED FROM PYTHON SOURCE LINES 257-265

In addition, the function :py:func:`easyclimate.calc_divergence <easyclimate.calc_divergence>` calculate the quasi-geostrophic divergence.

.. math::
  \mathrm{D} = \frac{\partial u}{\partial x} + \frac{\partial v}{\partial y} - \frac{v}{R} \tan \varphi

- :py:func:`easyclimate.calc_divergence <easyclimate.calc_divergence>`: calculate the horizontal divergence term.

Quasi-geostrophic divergence

.. GENERATED FROM PYTHON SOURCE LINES 265-275

.. code-block:: Python


    qg_div_data_500_202201 = ecl.calc_divergence(
        u_data=geostrophic_wind_data_500_202201.ug,
        v_data=geostrophic_wind_data_500_202201.vg,
        lon_dim="lon",
        lat_dim="lat",
    )

    qg_div_data_500_202201.sel(lat=slice(20, 80)).plot.contourf(levels=21)




.. image-sg:: /auto_gallery_output/images/sphx_glr_plot_geographic_finite_difference_009.png
   :alt: time = 2022-01-01, level = 500.0 [millibar]
   :srcset: /auto_gallery_output/images/sphx_glr_plot_geographic_finite_difference_009.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.contour.QuadContourSet object at 0x7f1f97f7f310>



.. GENERATED FROM PYTHON SOURCE LINES 276-277

Actual divergence

.. GENERATED FROM PYTHON SOURCE LINES 277-287

.. code-block:: Python


    div_data_500_202201 = ecl.calc_divergence(
        u_data=uvdata_500_202201["uwnd"],
        v_data=uvdata_500_202201["vwnd"],
        lon_dim="lon",
        lat_dim="lat",
    )

    div_data_500_202201.sel(lat=slice(20, 80)).plot.contourf(levels=21)




.. image-sg:: /auto_gallery_output/images/sphx_glr_plot_geographic_finite_difference_010.png
   :alt: time = 2022-01-01, level = 500.0 [millibar]
   :srcset: /auto_gallery_output/images/sphx_glr_plot_geographic_finite_difference_010.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.contour.QuadContourSet object at 0x7f1f97e6f460>



.. GENERATED FROM PYTHON SOURCE LINES 288-292

Of course, in addition to the built-in finite difference method, the spherical harmonic function mothod can be solved, but you must ensure that it is **Global** and **Regular or Gaussian grid** type data.

- :py:func:`easyclimate.windspharm.calc_relative_vorticity <easyclimate.windspharm.top.calc_relative_vorticity>`: calculate the relative vorticity term with the spherical harmonic function mothod.
- :py:func:`easyclimate.windspharm.calc_divergence <easyclimate.windspharm.top.calc_divergence>`: calculate the horizontal divergence term with the spherical harmonic function mothod.

.. GENERATED FROM PYTHON SOURCE LINES 292-302

.. code-block:: Python


    vor_data_500_202201_windspharm = ecl.windspharm.calc_relative_vorticity(
        u_data=uvdata_500_202201["uwnd"],
        v_data=uvdata_500_202201["vwnd"],
    )

    vor_data_500_202201_windspharm.sortby("lat").sel(lat=slice(20, 80)).plot.contourf(
        levels=21
    )




.. image-sg:: /auto_gallery_output/images/sphx_glr_plot_geographic_finite_difference_011.png
   :alt: plot geographic finite difference
   :srcset: /auto_gallery_output/images/sphx_glr_plot_geographic_finite_difference_011.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.contour.QuadContourSet object at 0x7f1f97d9c520>



.. GENERATED FROM PYTHON SOURCE LINES 303-313

.. code-block:: Python


    div_data_500_202201_windspharm = ecl.windspharm.calc_divergence(
        u_data=uvdata_500_202201["uwnd"],
        v_data=uvdata_500_202201["vwnd"],
    )

    div_data_500_202201_windspharm.sortby("lat").sel(lat=slice(20, 80)).plot.contourf(
        levels=21
    )




.. image-sg:: /auto_gallery_output/images/sphx_glr_plot_geographic_finite_difference_012.png
   :alt: plot geographic finite difference
   :srcset: /auto_gallery_output/images/sphx_glr_plot_geographic_finite_difference_012.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.contour.QuadContourSet object at 0x7f1f97c903a0>



.. GENERATED FROM PYTHON SOURCE LINES 314-315

Generally speaking, the calculation results of the finite difference method and the spherical harmonic function method are similar. The former does not require global regional data, but the calculation results of the latter are more accurate for high latitude regions.

.. GENERATED FROM PYTHON SOURCE LINES 317-326

Advection
-------------------
`Advection <https://glossary.ametsoc.org/wiki/Advection>`__ is the process of transport of an atmospheric property solely by the mass motion (velocity field) of the atmosphere; also, the rate of change of the value of the advected property at a given point.

For zonal advection, we can calculate as follows.

.. math::
  -u \frac{\partial T}{\partial x}


.. GENERATED FROM PYTHON SOURCE LINES 326-333

.. code-block:: Python


    u_advection_500_202201 = ecl.calc_u_advection(
        u_data=uvdata_500_202201["uwnd"], temper_data=temp_data_500_202201
    )

    u_advection_500_202201.sortby("lat").sel(lat=slice(20, 80)).plot.contourf(levels=21)




.. image-sg:: /auto_gallery_output/images/sphx_glr_plot_geographic_finite_difference_013.png
   :alt: time = 2022-01-01, level = 500.0 [millibar]
   :srcset: /auto_gallery_output/images/sphx_glr_plot_geographic_finite_difference_013.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.contour.QuadContourSet object at 0x7f1f97b882b0>



.. GENERATED FROM PYTHON SOURCE LINES 334-339

Similarly, the meridional advection can acquire as follows.

.. math::
  -v \frac{\partial T}{\partial y}


.. GENERATED FROM PYTHON SOURCE LINES 339-346

.. code-block:: Python


    v_advection_500_202201 = ecl.calc_v_advection(
        v_data=uvdata_500_202201["vwnd"], temper_data=temp_data_500_202201
    )

    v_advection_500_202201.sortby("lat").sel(lat=slice(20, 80)).plot.contourf(levels=21)




.. image-sg:: /auto_gallery_output/images/sphx_glr_plot_geographic_finite_difference_014.png
   :alt: time = 2022-01-01, level = 500.0 [millibar]
   :srcset: /auto_gallery_output/images/sphx_glr_plot_geographic_finite_difference_014.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.contour.QuadContourSet object at 0x7f1f97cf11e0>



.. GENERATED FROM PYTHON SOURCE LINES 347-363

Water Flux
-------------------------

- :py:func:`easyclimate.calc_horizontal_water_flux <easyclimate.calc_horizontal_water_flux>`: calculate horizontal water vapor flux at each vertical level.

.. math::
  \frac{1}{g} q \mathbf{V} = \frac{1}{g} (u q\ \mathbf{i} + vq\ \mathbf{j})

- :py:func:`easyclimate.calc_vertical_water_flux <easyclimate.calc_vertical_water_flux>`: calculate vertical water vapor flux.

.. math::
  -\omega \frac{q}{g}

- :py:func:`easyclimate.calc_water_flux_top2surface_integral <easyclimate.calc_water_flux_top2surface_integral>`: calculate the water vapor flux across the vertical level.

:py:func:`easyclimate.calc_horizontal_water_flux <easyclimate.calc_horizontal_water_flux>` can calculate the horizontal water flux of single layers.

.. GENERATED FROM PYTHON SOURCE LINES 363-370

.. code-block:: Python


    ecl.calc_horizontal_water_flux(
        specific_humidity_data=q_data,
        u_data=uvdata.uwnd,
        v_data=uvdata.vwnd,
    )






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
    <defs>
    <symbol id="icon-database" viewBox="0 0 32 32">
    <path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
    <path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    <path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    </symbol>
    <symbol id="icon-file-text2" viewBox="0 0 32 32">
    <path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
    <path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    </symbol>
    </defs>
    </svg>
    <style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
     *
     */

    :root {
      --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
      --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
      --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
      --xr-border-color: var(--jp-border-color2, #e0e0e0);
      --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
      --xr-background-color: var(--jp-layout-color0, white);
      --xr-background-color-row-even: var(--jp-layout-color1, white);
      --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
    }

    html[theme="dark"],
    html[data-theme="dark"],
    body[data-theme="dark"],
    body.vscode-dark {
      --xr-font-color0: rgba(255, 255, 255, 1);
      --xr-font-color2: rgba(255, 255, 255, 0.54);
      --xr-font-color3: rgba(255, 255, 255, 0.38);
      --xr-border-color: #1f1f1f;
      --xr-disabled-color: #515151;
      --xr-background-color: #111111;
      --xr-background-color-row-even: #111111;
      --xr-background-color-row-odd: #313131;
    }

    .xr-wrap {
      display: block !important;
      min-width: 300px;
      max-width: 700px;
    }

    .xr-text-repr-fallback {
      /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
      display: none;
    }

    .xr-header {
      padding-top: 6px;
      padding-bottom: 6px;
      margin-bottom: 4px;
      border-bottom: solid 1px var(--xr-border-color);
    }

    .xr-header > div,
    .xr-header > ul {
      display: inline;
      margin-top: 0;
      margin-bottom: 0;
    }

    .xr-obj-type,
    .xr-array-name {
      margin-left: 2px;
      margin-right: 10px;
    }

    .xr-obj-type {
      color: var(--xr-font-color2);
    }

    .xr-sections {
      padding-left: 0 !important;
      display: grid;
      grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;
    }

    .xr-section-item {
      display: contents;
    }

    .xr-section-item input {
      display: inline-block;
      opacity: 0;
      height: 0;
    }

    .xr-section-item input + label {
      color: var(--xr-disabled-color);
    }

    .xr-section-item input:enabled + label {
      cursor: pointer;
      color: var(--xr-font-color2);
    }

    .xr-section-item input:focus + label {
      border: 2px solid var(--xr-font-color0);
    }

    .xr-section-item input:enabled + label:hover {
      color: var(--xr-font-color0);
    }

    .xr-section-summary {
      grid-column: 1;
      color: var(--xr-font-color2);
      font-weight: 500;
    }

    .xr-section-summary > span {
      display: inline-block;
      padding-left: 0.5em;
    }

    .xr-section-summary-in:disabled + label {
      color: var(--xr-font-color2);
    }

    .xr-section-summary-in + label:before {
      display: inline-block;
      content: "►";
      font-size: 11px;
      width: 15px;
      text-align: center;
    }

    .xr-section-summary-in:disabled + label:before {
      color: var(--xr-disabled-color);
    }

    .xr-section-summary-in:checked + label:before {
      content: "▼";
    }

    .xr-section-summary-in:checked + label > span {
      display: none;
    }

    .xr-section-summary,
    .xr-section-inline-details {
      padding-top: 4px;
      padding-bottom: 4px;
    }

    .xr-section-inline-details {
      grid-column: 2 / -1;
    }

    .xr-section-details {
      display: none;
      grid-column: 1 / -1;
      margin-bottom: 5px;
    }

    .xr-section-summary-in:checked ~ .xr-section-details {
      display: contents;
    }

    .xr-array-wrap {
      grid-column: 1 / -1;
      display: grid;
      grid-template-columns: 20px auto;
    }

    .xr-array-wrap > label {
      grid-column: 1;
      vertical-align: top;
    }

    .xr-preview {
      color: var(--xr-font-color3);
    }

    .xr-array-preview,
    .xr-array-data {
      padding: 0 5px !important;
      grid-column: 2;
    }

    .xr-array-data,
    .xr-array-in:checked ~ .xr-array-preview {
      display: none;
    }

    .xr-array-in:checked ~ .xr-array-data,
    .xr-array-preview {
      display: inline-block;
    }

    .xr-dim-list {
      display: inline-block !important;
      list-style: none;
      padding: 0 !important;
      margin: 0;
    }

    .xr-dim-list li {
      display: inline-block;
      padding: 0;
      margin: 0;
    }

    .xr-dim-list:before {
      content: "(";
    }

    .xr-dim-list:after {
      content: ")";
    }

    .xr-dim-list li:not(:last-child):after {
      content: ",";
      padding-right: 5px;
    }

    .xr-has-index {
      font-weight: bold;
    }

    .xr-var-list,
    .xr-var-item {
      display: contents;
    }

    .xr-var-item > div,
    .xr-var-item label,
    .xr-var-item > .xr-var-name span {
      background-color: var(--xr-background-color-row-even);
      margin-bottom: 0;
    }

    .xr-var-item > .xr-var-name:hover span {
      padding-right: 5px;
    }

    .xr-var-list > li:nth-child(odd) > div,
    .xr-var-list > li:nth-child(odd) > label,
    .xr-var-list > li:nth-child(odd) > .xr-var-name span {
      background-color: var(--xr-background-color-row-odd);
    }

    .xr-var-name {
      grid-column: 1;
    }

    .xr-var-dims {
      grid-column: 2;
    }

    .xr-var-dtype {
      grid-column: 3;
      text-align: right;
      color: var(--xr-font-color2);
    }

    .xr-var-preview {
      grid-column: 4;
    }

    .xr-index-preview {
      grid-column: 2 / 5;
      color: var(--xr-font-color2);
    }

    .xr-var-name,
    .xr-var-dims,
    .xr-var-dtype,
    .xr-preview,
    .xr-attrs dt {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      padding-right: 10px;
    }

    .xr-var-name:hover,
    .xr-var-dims:hover,
    .xr-var-dtype:hover,
    .xr-attrs dt:hover {
      overflow: visible;
      width: auto;
      z-index: 1;
    }

    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      display: none;
      background-color: var(--xr-background-color) !important;
      padding-bottom: 5px !important;
    }

    .xr-var-attrs-in:checked ~ .xr-var-attrs,
    .xr-var-data-in:checked ~ .xr-var-data,
    .xr-index-data-in:checked ~ .xr-index-data {
      display: block;
    }

    .xr-var-data > table {
      float: right;
    }

    .xr-var-name span,
    .xr-var-data,
    .xr-index-name div,
    .xr-index-data,
    .xr-attrs {
      padding-left: 25px !important;
    }

    .xr-attrs,
    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      grid-column: 1 / -1;
    }

    dl.xr-attrs {
      padding: 0;
      margin: 0;
      display: grid;
      grid-template-columns: 125px auto;
    }

    .xr-attrs dt,
    .xr-attrs dd {
      padding: 0;
      margin: 0;
      float: left;
      padding-right: 10px;
      width: auto;
    }

    .xr-attrs dt {
      font-weight: normal;
      grid-column: 1;
    }

    .xr-attrs dt:hover span {
      display: inline-block;
      background: var(--xr-background-color);
      padding-right: 10px;
    }

    .xr-attrs dd {
      grid-column: 2;
      white-space: pre-wrap;
      word-break: break-all;
    }

    .xr-icon-database,
    .xr-icon-file-text2,
    .xr-no-icon {
      display: inline-block;
      vertical-align: middle;
      width: 1em;
      height: 1.5em !important;
      stroke-width: 0;
      stroke: currentColor;
      fill: currentColor;
    }
    </style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 1MB
    Dimensions:  (time: 2, lon: 144, lat: 73, level: 8)
    Coordinates:
      * time     (time) datetime64[ns] 16B 2022-01-01 2022-02-01
      * lon      (lon) float32 576B 0.0 2.5 5.0 7.5 10.0 ... 350.0 352.5 355.0 357.5
      * lat      (lat) float32 292B -90.0 -87.5 -85.0 -82.5 ... 82.5 85.0 87.5 90.0
      * level    (level) float32 32B 1e+03 925.0 850.0 700.0 600.0 500.0 400.0 300.0
    Data variables:
        qu       (time, level, lat, lon) float32 673kB 0.3579 0.3982 ... -0.007047
        qv       (time, level, lat, lon) float32 673kB -0.9287 -0.9122 ... 0.001194</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-8bdbdf7b-efaa-4698-a025-48367ef4e070' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-8bdbdf7b-efaa-4698-a025-48367ef4e070' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span class='xr-has-index'>time</span>: 2</li><li><span class='xr-has-index'>lon</span>: 144</li><li><span class='xr-has-index'>lat</span>: 73</li><li><span class='xr-has-index'>level</span>: 8</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-cabe04db-8dc7-47f9-a19e-c1539ac7435b' class='xr-section-summary-in' type='checkbox'  checked><label for='section-cabe04db-8dc7-47f9-a19e-c1539ac7435b' class='xr-section-summary' >Coordinates: <span>(4)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>time</span></div><div class='xr-var-dims'>(time)</div><div class='xr-var-dtype'>datetime64[ns]</div><div class='xr-var-preview xr-preview'>2022-01-01 2022-02-01</div><input id='attrs-b5118a89-56e7-4e6f-b9a8-7464d9ff54b8' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-b5118a89-56e7-4e6f-b9a8-7464d9ff54b8' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-9f9a9b7c-5447-43f3-9e7f-e56c5f929c09' class='xr-var-data-in' type='checkbox'><label for='data-9f9a9b7c-5447-43f3-9e7f-e56c5f929c09' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>time</dd><dt><span>long_name :</span></dt><dd>Time</dd><dt><span>axis :</span></dt><dd>T</dd></dl></div><div class='xr-var-data'><pre>array([&#x27;2022-01-01T00:00:00.000000000&#x27;, &#x27;2022-02-01T00:00:00.000000000&#x27;],
          dtype=&#x27;datetime64[ns]&#x27;)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lon</span></div><div class='xr-var-dims'>(lon)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>0.0 2.5 5.0 ... 352.5 355.0 357.5</div><input id='attrs-f1426cdf-ef86-47e1-996a-e42f0b27b1f1' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-f1426cdf-ef86-47e1-996a-e42f0b27b1f1' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-99590548-08ba-4029-83e5-6bc95b84b34b' class='xr-var-data-in' type='checkbox'><label for='data-99590548-08ba-4029-83e5-6bc95b84b34b' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>longitude</dd><dt><span>long_name :</span></dt><dd>Longitude</dd><dt><span>units :</span></dt><dd>degrees_east</dd><dt><span>axis :</span></dt><dd>X</dd></dl></div><div class='xr-var-data'><pre>array([  0. ,   2.5,   5. ,   7.5,  10. ,  12.5,  15. ,  17.5,  20. ,  22.5,
            25. ,  27.5,  30. ,  32.5,  35. ,  37.5,  40. ,  42.5,  45. ,  47.5,
            50. ,  52.5,  55. ,  57.5,  60. ,  62.5,  65. ,  67.5,  70. ,  72.5,
            75. ,  77.5,  80. ,  82.5,  85. ,  87.5,  90. ,  92.5,  95. ,  97.5,
           100. , 102.5, 105. , 107.5, 110. , 112.5, 115. , 117.5, 120. , 122.5,
           125. , 127.5, 130. , 132.5, 135. , 137.5, 140. , 142.5, 145. , 147.5,
           150. , 152.5, 155. , 157.5, 160. , 162.5, 165. , 167.5, 170. , 172.5,
           175. , 177.5, 180. , 182.5, 185. , 187.5, 190. , 192.5, 195. , 197.5,
           200. , 202.5, 205. , 207.5, 210. , 212.5, 215. , 217.5, 220. , 222.5,
           225. , 227.5, 230. , 232.5, 235. , 237.5, 240. , 242.5, 245. , 247.5,
           250. , 252.5, 255. , 257.5, 260. , 262.5, 265. , 267.5, 270. , 272.5,
           275. , 277.5, 280. , 282.5, 285. , 287.5, 290. , 292.5, 295. , 297.5,
           300. , 302.5, 305. , 307.5, 310. , 312.5, 315. , 317.5, 320. , 322.5,
           325. , 327.5, 330. , 332.5, 335. , 337.5, 340. , 342.5, 345. , 347.5,
           350. , 352.5, 355. , 357.5], dtype=float32)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lat</span></div><div class='xr-var-dims'>(lat)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>-90.0 -87.5 -85.0 ... 87.5 90.0</div><input id='attrs-b46d326d-6ff4-4f8f-9e51-f562f33e312f' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-b46d326d-6ff4-4f8f-9e51-f562f33e312f' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-bf761935-02b5-41f8-9852-dcfad8d3b811' class='xr-var-data-in' type='checkbox'><label for='data-bf761935-02b5-41f8-9852-dcfad8d3b811' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>latitude</dd><dt><span>long_name :</span></dt><dd>Latitude</dd><dt><span>units :</span></dt><dd>degrees_north</dd><dt><span>axis :</span></dt><dd>Y</dd></dl></div><div class='xr-var-data'><pre>array([-90. , -87.5, -85. , -82.5, -80. , -77.5, -75. , -72.5, -70. , -67.5,
           -65. , -62.5, -60. , -57.5, -55. , -52.5, -50. , -47.5, -45. , -42.5,
           -40. , -37.5, -35. , -32.5, -30. , -27.5, -25. , -22.5, -20. , -17.5,
           -15. , -12.5, -10. ,  -7.5,  -5. ,  -2.5,   0. ,   2.5,   5. ,   7.5,
            10. ,  12.5,  15. ,  17.5,  20. ,  22.5,  25. ,  27.5,  30. ,  32.5,
            35. ,  37.5,  40. ,  42.5,  45. ,  47.5,  50. ,  52.5,  55. ,  57.5,
            60. ,  62.5,  65. ,  67.5,  70. ,  72.5,  75. ,  77.5,  80. ,  82.5,
            85. ,  87.5,  90. ], dtype=float32)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>level</span></div><div class='xr-var-dims'>(level)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>1e+03 925.0 850.0 ... 400.0 300.0</div><input id='attrs-6094e54f-8fc8-487d-9021-d985f0b33ff1' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-6094e54f-8fc8-487d-9021-d985f0b33ff1' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-688ad766-d8ba-44e6-bfce-cfb3f9391994' class='xr-var-data-in' type='checkbox'><label for='data-688ad766-d8ba-44e6-bfce-cfb3f9391994' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>air_pressure</dd><dt><span>long_name :</span></dt><dd>Level</dd><dt><span>units :</span></dt><dd>millibar</dd><dt><span>positive :</span></dt><dd>down</dd><dt><span>axis :</span></dt><dd>Z</dd><dt><span>GRIB_id :</span></dt><dd>100</dd><dt><span>GRIB_name :</span></dt><dd>hPa</dd><dt><span>actual_range :</span></dt><dd>[1000.  300.]</dd></dl></div><div class='xr-var-data'><pre>array([1000.,  925.,  850.,  700.,  600.,  500.,  400.,  300.], dtype=float32)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-31de72b9-6616-4e4c-b110-aa933e359f9b' class='xr-section-summary-in' type='checkbox'  checked><label for='section-31de72b9-6616-4e4c-b110-aa933e359f9b' class='xr-section-summary' >Data variables: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>qu</span></div><div class='xr-var-dims'>(time, level, lat, lon)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>0.3579 0.3982 ... -0.007047</div><input id='attrs-5eccfd08-052f-408c-9d67-43cad832d1a6' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-5eccfd08-052f-408c-9d67-43cad832d1a6' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-4e65beed-ca85-44e1-aecb-da3b86d95afc' class='xr-var-data-in' type='checkbox'><label for='data-4e65beed-ca85-44e1-aecb-da3b86d95afc' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>long_name :</span></dt><dd>Monthly Mean of Specific Humidity</dd><dt><span>units :</span></dt><dd>grams/kg</dd><dt><span>precision :</span></dt><dd>3</dd><dt><span>var_desc :</span></dt><dd>Specific Humidity</dd><dt><span>level_desc :</span></dt><dd>Pressure Levels</dd><dt><span>statistic :</span></dt><dd>Mean</dd><dt><span>parent_stat :</span></dt><dd>Other</dd><dt><span>dataset :</span></dt><dd>NCEP Reanalysis Derived Products</dd><dt><span>actual_range :</span></dt><dd>[ 0.      34.88718]</dd></dl></div><div class='xr-var-data'><pre>array([[[[ 3.57883036e-01,  3.98152560e-01,  4.38422114e-01, ...,
               2.34596267e-01,  2.76930898e-01,  3.16993952e-01],
             [ 6.72771037e-02,  1.20953225e-01,  1.75328195e-01, ...,
              -8.64081681e-02, -3.64194512e-02,  1.26979304e-02],
             [ 4.37529944e-02,  1.26659304e-01,  2.18098059e-01, ...,
              -1.39770165e-01, -8.91409293e-02, -2.89416406e-02],
             ...,
             [-1.29531682e-01, -1.49078846e-01, -1.68693021e-01, ...,
              -7.36974776e-02, -9.17841047e-02, -1.10312007e-01],
             [-1.70557305e-01, -1.75420001e-01, -1.79937020e-01, ...,
              -1.53795123e-01, -1.59868911e-01, -1.65068328e-01],
             [-2.19000965e-01, -2.25325063e-01, -2.31118590e-01, ...,
              -1.97861537e-01, -2.05247089e-01, -2.12588385e-01]],

            [[ 2.69623637e-01,  3.00784588e-01,  3.31781358e-01, ...,
               1.71712905e-01,  2.03857839e-01,  2.37314716e-01],
             [ 5.87694049e-02,  1.02082960e-01,  1.47941858e-01, ...,
              -6.27753958e-02, -2.28826758e-02,  1.66655779e-02],
             [ 1.21284816e-02,  7.87778050e-02,  1.51972592e-01, ...,
              -1.33276269e-01, -9.41526294e-02, -4.61209677e-02],
    ...
              -8.08279868e-03, -8.66123475e-03, -9.28526092e-03],
             [-2.21411902e-02, -2.19771210e-02, -2.17400584e-02, ...,
              -2.27421131e-02, -2.25342512e-02, -2.23478209e-02],
             [-3.46937589e-02, -3.42834592e-02, -3.38446163e-02, ...,
              -3.54394391e-02, -3.52539122e-02, -3.50005962e-02]],

            [[ 4.03247541e-03,  4.02526790e-03,  4.00544750e-03, ...,
               4.04148409e-03,  4.05770075e-03,  4.04508831e-03],
             [ 6.15896285e-03,  6.34491444e-03,  6.51857676e-03, ...,
               5.91550255e-03,  5.91961620e-03,  6.04589144e-03],
             [ 6.69910340e-03,  7.49462703e-03,  8.37483816e-03, ...,
               5.19840326e-03,  5.43986401e-03,  5.99670364e-03],
             ...,
             [-1.21538877e-03, -1.24731637e-03, -1.27466582e-03, ...,
              -1.13206636e-03, -1.16068567e-03, -1.18242716e-03],
             [-3.84470983e-03, -3.76838353e-03, -3.65987723e-03, ...,
              -4.09236364e-03, -4.01350297e-03, -3.94624844e-03],
             [-6.99382089e-03, -6.91809133e-03, -6.83114212e-03, ...,
              -7.12775113e-03, -7.09689967e-03, -7.04711350e-03]]]],
          dtype=float32)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>qv</span></div><div class='xr-var-dims'>(time, level, lat, lon)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>-0.9287 -0.9122 ... 0.001194</div><input id='attrs-f7ac09da-c6e2-45b7-b90f-1c275be70b18' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-f7ac09da-c6e2-45b7-b90f-1c275be70b18' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-3ef90d99-1992-47a9-9cda-ce16377270c1' class='xr-var-data-in' type='checkbox'><label for='data-3ef90d99-1992-47a9-9cda-ce16377270c1' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>long_name :</span></dt><dd>Monthly Mean of Specific Humidity</dd><dt><span>units :</span></dt><dd>grams/kg</dd><dt><span>precision :</span></dt><dd>3</dd><dt><span>var_desc :</span></dt><dd>Specific Humidity</dd><dt><span>level_desc :</span></dt><dd>Pressure Levels</dd><dt><span>statistic :</span></dt><dd>Mean</dd><dt><span>parent_stat :</span></dt><dd>Other</dd><dt><span>dataset :</span></dt><dd>NCEP Reanalysis Derived Products</dd><dt><span>actual_range :</span></dt><dd>[ 0.      34.88718]</dd></dl></div><div class='xr-var-data'><pre>array([[[[-9.28677619e-01, -9.12156761e-01, -8.94809842e-01, ...,
              -9.67708111e-01, -9.56969738e-01, -9.43133473e-01],
             [-9.05682266e-01, -9.12177622e-01, -9.15457249e-01, ...,
              -8.71844172e-01, -8.85442317e-01, -8.97087276e-01],
             [-1.16406357e+00, -1.23160505e+00, -1.28302145e+00, ...,
              -9.03379381e-01, -9.96056259e-01, -1.08463359e+00],
             ...,
             [-1.75585821e-01, -1.76075116e-01, -1.75573900e-01, ...,
              -1.66714668e-01, -1.70317307e-01, -1.73800007e-01],
             [-1.43474877e-01, -1.36783600e-01, -1.30478472e-01, ...,
              -1.60485014e-01, -1.55592442e-01, -1.49569124e-01],
             [-1.49612337e-01, -1.39794454e-01, -1.29976541e-01, ...,
              -1.76677883e-01, -1.68230951e-01, -1.58811092e-01]],

            [[-7.31624484e-01, -7.19980180e-01, -7.05055714e-01, ...,
              -7.60817170e-01, -7.52617002e-01, -7.42776632e-01],
             [-7.17676818e-01, -7.22057879e-01, -7.23932683e-01, ...,
              -6.89850092e-01, -7.00998783e-01, -7.11117268e-01],
             [-9.35872138e-01, -9.91929948e-01, -1.03393590e+00, ...,
              -7.23102272e-01, -7.98541546e-01, -8.70113552e-01],
    ...
               4.77810623e-04,  1.04721962e-03,  1.73542392e-03],
             [ 5.91062335e-03,  6.91751717e-03,  7.89710786e-03, ...,
               2.98286392e-03,  3.95420659e-03,  4.93401149e-03],
             [ 8.17751233e-03,  9.70098283e-03,  1.11745000e-02, ...,
               3.58925620e-03,  5.12343226e-03,  6.68614730e-03]],

            [[ 2.77480227e-04,  4.50455263e-04,  6.18024555e-04, ...,
              -2.66669784e-04, -9.00913801e-05,  8.64871035e-05],
             [-2.98992149e-03, -3.02977231e-03, -3.04939901e-03, ...,
              -2.86408933e-03, -2.88517820e-03, -2.94567435e-03],
             [-3.80958477e-03, -4.45881067e-03, -5.13322232e-03, ...,
              -2.36102776e-03, -2.70353653e-03, -3.21330922e-03],
             ...,
             [ 4.35454887e-04,  5.30001416e-04,  6.31168426e-04, ...,
               1.99651506e-04,  2.70568387e-04,  3.50068934e-04],
             [ 1.03582791e-03,  1.18577783e-03,  1.31927594e-03, ...,
               5.64198184e-04,  7.26516591e-04,  8.87191389e-04],
             [ 1.50268292e-03,  1.81051216e-03,  2.10782280e-03, ...,
               5.73586614e-04,  8.84920824e-04,  1.19415275e-03]]]],
          dtype=float32)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-fde8483b-74c5-410f-8a14-0cab323e2dbb' class='xr-section-summary-in' type='checkbox'  ><label for='section-fde8483b-74c5-410f-8a14-0cab323e2dbb' class='xr-section-summary' >Indexes: <span>(4)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>time</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-e70d44eb-8a2e-4363-8350-411d25afebfd' class='xr-index-data-in' type='checkbox'/><label for='index-e70d44eb-8a2e-4363-8350-411d25afebfd' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(DatetimeIndex([&#x27;2022-01-01&#x27;, &#x27;2022-02-01&#x27;], dtype=&#x27;datetime64[ns]&#x27;, name=&#x27;time&#x27;, freq=None))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>lon</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-87251638-fa49-434a-83c5-f8a6c2d945a9' class='xr-index-data-in' type='checkbox'/><label for='index-87251638-fa49-434a-83c5-f8a6c2d945a9' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([  0.0,   2.5,   5.0,   7.5,  10.0,  12.5,  15.0,  17.5,  20.0,  22.5,
           ...
           335.0, 337.5, 340.0, 342.5, 345.0, 347.5, 350.0, 352.5, 355.0, 357.5],
          dtype=&#x27;float32&#x27;, name=&#x27;lon&#x27;, length=144))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>lat</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-cab475ee-488e-49b6-91a2-067f8a1f8c29' class='xr-index-data-in' type='checkbox'/><label for='index-cab475ee-488e-49b6-91a2-067f8a1f8c29' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([-90.0, -87.5, -85.0, -82.5, -80.0, -77.5, -75.0, -72.5, -70.0, -67.5,
           -65.0, -62.5, -60.0, -57.5, -55.0, -52.5, -50.0, -47.5, -45.0, -42.5,
           -40.0, -37.5, -35.0, -32.5, -30.0, -27.5, -25.0, -22.5, -20.0, -17.5,
           -15.0, -12.5, -10.0,  -7.5,  -5.0,  -2.5,   0.0,   2.5,   5.0,   7.5,
            10.0,  12.5,  15.0,  17.5,  20.0,  22.5,  25.0,  27.5,  30.0,  32.5,
            35.0,  37.5,  40.0,  42.5,  45.0,  47.5,  50.0,  52.5,  55.0,  57.5,
            60.0,  62.5,  65.0,  67.5,  70.0,  72.5,  75.0,  77.5,  80.0,  82.5,
            85.0,  87.5,  90.0],
          dtype=&#x27;float32&#x27;, name=&#x27;lat&#x27;))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>level</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-9d63e658-d7d0-4933-bc00-517741bdab22' class='xr-index-data-in' type='checkbox'/><label for='index-9d63e658-d7d0-4933-bc00-517741bdab22' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([1000.0, 925.0, 850.0, 700.0, 600.0, 500.0, 400.0, 300.0], dtype=&#x27;float32&#x27;, name=&#x27;level&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-2e200a04-2882-428e-957e-0e77fffeb5b6' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-2e200a04-2882-428e-957e-0e77fffeb5b6' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 371-372

The whole layer integral needs to consider the function :py:func:`easyclimate.calc_water_flux_top2surface_integral <easyclimate.calc_water_flux_top2surface_integral>` to calculate.

.. GENERATED FROM PYTHON SOURCE LINES 372-385

.. code-block:: Python


    water_flux_top2surface_integral = ecl.calc_water_flux_top2surface_integral(
        specific_humidity_data=q_data,
        u_data=u_data,
        v_data=v_data,
        surface_pressure_data=msl_data,
        surface_pressure_data_units="millibars",
        vertical_dim="level",
        vertical_dim_units="hPa",
    )

    water_flux_top2surface_integral






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
    <defs>
    <symbol id="icon-database" viewBox="0 0 32 32">
    <path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
    <path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    <path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    </symbol>
    <symbol id="icon-file-text2" viewBox="0 0 32 32">
    <path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
    <path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    </symbol>
    </defs>
    </svg>
    <style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
     *
     */

    :root {
      --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
      --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
      --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
      --xr-border-color: var(--jp-border-color2, #e0e0e0);
      --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
      --xr-background-color: var(--jp-layout-color0, white);
      --xr-background-color-row-even: var(--jp-layout-color1, white);
      --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
    }

    html[theme="dark"],
    html[data-theme="dark"],
    body[data-theme="dark"],
    body.vscode-dark {
      --xr-font-color0: rgba(255, 255, 255, 1);
      --xr-font-color2: rgba(255, 255, 255, 0.54);
      --xr-font-color3: rgba(255, 255, 255, 0.38);
      --xr-border-color: #1f1f1f;
      --xr-disabled-color: #515151;
      --xr-background-color: #111111;
      --xr-background-color-row-even: #111111;
      --xr-background-color-row-odd: #313131;
    }

    .xr-wrap {
      display: block !important;
      min-width: 300px;
      max-width: 700px;
    }

    .xr-text-repr-fallback {
      /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
      display: none;
    }

    .xr-header {
      padding-top: 6px;
      padding-bottom: 6px;
      margin-bottom: 4px;
      border-bottom: solid 1px var(--xr-border-color);
    }

    .xr-header > div,
    .xr-header > ul {
      display: inline;
      margin-top: 0;
      margin-bottom: 0;
    }

    .xr-obj-type,
    .xr-array-name {
      margin-left: 2px;
      margin-right: 10px;
    }

    .xr-obj-type {
      color: var(--xr-font-color2);
    }

    .xr-sections {
      padding-left: 0 !important;
      display: grid;
      grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;
    }

    .xr-section-item {
      display: contents;
    }

    .xr-section-item input {
      display: inline-block;
      opacity: 0;
      height: 0;
    }

    .xr-section-item input + label {
      color: var(--xr-disabled-color);
    }

    .xr-section-item input:enabled + label {
      cursor: pointer;
      color: var(--xr-font-color2);
    }

    .xr-section-item input:focus + label {
      border: 2px solid var(--xr-font-color0);
    }

    .xr-section-item input:enabled + label:hover {
      color: var(--xr-font-color0);
    }

    .xr-section-summary {
      grid-column: 1;
      color: var(--xr-font-color2);
      font-weight: 500;
    }

    .xr-section-summary > span {
      display: inline-block;
      padding-left: 0.5em;
    }

    .xr-section-summary-in:disabled + label {
      color: var(--xr-font-color2);
    }

    .xr-section-summary-in + label:before {
      display: inline-block;
      content: "►";
      font-size: 11px;
      width: 15px;
      text-align: center;
    }

    .xr-section-summary-in:disabled + label:before {
      color: var(--xr-disabled-color);
    }

    .xr-section-summary-in:checked + label:before {
      content: "▼";
    }

    .xr-section-summary-in:checked + label > span {
      display: none;
    }

    .xr-section-summary,
    .xr-section-inline-details {
      padding-top: 4px;
      padding-bottom: 4px;
    }

    .xr-section-inline-details {
      grid-column: 2 / -1;
    }

    .xr-section-details {
      display: none;
      grid-column: 1 / -1;
      margin-bottom: 5px;
    }

    .xr-section-summary-in:checked ~ .xr-section-details {
      display: contents;
    }

    .xr-array-wrap {
      grid-column: 1 / -1;
      display: grid;
      grid-template-columns: 20px auto;
    }

    .xr-array-wrap > label {
      grid-column: 1;
      vertical-align: top;
    }

    .xr-preview {
      color: var(--xr-font-color3);
    }

    .xr-array-preview,
    .xr-array-data {
      padding: 0 5px !important;
      grid-column: 2;
    }

    .xr-array-data,
    .xr-array-in:checked ~ .xr-array-preview {
      display: none;
    }

    .xr-array-in:checked ~ .xr-array-data,
    .xr-array-preview {
      display: inline-block;
    }

    .xr-dim-list {
      display: inline-block !important;
      list-style: none;
      padding: 0 !important;
      margin: 0;
    }

    .xr-dim-list li {
      display: inline-block;
      padding: 0;
      margin: 0;
    }

    .xr-dim-list:before {
      content: "(";
    }

    .xr-dim-list:after {
      content: ")";
    }

    .xr-dim-list li:not(:last-child):after {
      content: ",";
      padding-right: 5px;
    }

    .xr-has-index {
      font-weight: bold;
    }

    .xr-var-list,
    .xr-var-item {
      display: contents;
    }

    .xr-var-item > div,
    .xr-var-item label,
    .xr-var-item > .xr-var-name span {
      background-color: var(--xr-background-color-row-even);
      margin-bottom: 0;
    }

    .xr-var-item > .xr-var-name:hover span {
      padding-right: 5px;
    }

    .xr-var-list > li:nth-child(odd) > div,
    .xr-var-list > li:nth-child(odd) > label,
    .xr-var-list > li:nth-child(odd) > .xr-var-name span {
      background-color: var(--xr-background-color-row-odd);
    }

    .xr-var-name {
      grid-column: 1;
    }

    .xr-var-dims {
      grid-column: 2;
    }

    .xr-var-dtype {
      grid-column: 3;
      text-align: right;
      color: var(--xr-font-color2);
    }

    .xr-var-preview {
      grid-column: 4;
    }

    .xr-index-preview {
      grid-column: 2 / 5;
      color: var(--xr-font-color2);
    }

    .xr-var-name,
    .xr-var-dims,
    .xr-var-dtype,
    .xr-preview,
    .xr-attrs dt {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      padding-right: 10px;
    }

    .xr-var-name:hover,
    .xr-var-dims:hover,
    .xr-var-dtype:hover,
    .xr-attrs dt:hover {
      overflow: visible;
      width: auto;
      z-index: 1;
    }

    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      display: none;
      background-color: var(--xr-background-color) !important;
      padding-bottom: 5px !important;
    }

    .xr-var-attrs-in:checked ~ .xr-var-attrs,
    .xr-var-data-in:checked ~ .xr-var-data,
    .xr-index-data-in:checked ~ .xr-index-data {
      display: block;
    }

    .xr-var-data > table {
      float: right;
    }

    .xr-var-name span,
    .xr-var-data,
    .xr-index-name div,
    .xr-index-data,
    .xr-attrs {
      padding-left: 25px !important;
    }

    .xr-attrs,
    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      grid-column: 1 / -1;
    }

    dl.xr-attrs {
      padding: 0;
      margin: 0;
      display: grid;
      grid-template-columns: 125px auto;
    }

    .xr-attrs dt,
    .xr-attrs dd {
      padding: 0;
      margin: 0;
      float: left;
      padding-right: 10px;
      width: auto;
    }

    .xr-attrs dt {
      font-weight: normal;
      grid-column: 1;
    }

    .xr-attrs dt:hover span {
      display: inline-block;
      background: var(--xr-background-color);
      padding-right: 10px;
    }

    .xr-attrs dd {
      grid-column: 2;
      white-space: pre-wrap;
      word-break: break-all;
    }

    .xr-icon-database,
    .xr-icon-file-text2,
    .xr-no-icon {
      display: inline-block;
      vertical-align: middle;
      width: 1em;
      height: 1.5em !important;
      stroke-width: 0;
      stroke: currentColor;
      fill: currentColor;
    }
    </style><pre class='xr-text-repr-fallback'>&lt;xarray.Dataset&gt; Size: 169kB
    Dimensions:  (time: 2, lon: 144, lat: 73)
    Coordinates:
      * time     (time) datetime64[ns] 16B 2022-01-01 2022-02-01
      * lon      (lon) float32 576B 0.0 2.5 5.0 7.5 10.0 ... 350.0 352.5 355.0 357.5
      * lat      (lat) float32 292B -90.0 -87.5 -85.0 -82.5 ... 82.5 85.0 87.5 90.0
    Data variables:
        qu       (time, lat, lon) float32 84kB 764.1 420.4 ... -2.405e+04 -2.415e+04
        qv       (time, lat, lon) float32 84kB 7.884e+03 7.905e+03 ... -1.976e+03</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-eae82df6-28b2-4ada-b05a-3f3b7555379e' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-eae82df6-28b2-4ada-b05a-3f3b7555379e' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span class='xr-has-index'>time</span>: 2</li><li><span class='xr-has-index'>lon</span>: 144</li><li><span class='xr-has-index'>lat</span>: 73</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-2fc4a850-2b7e-481f-a388-69485a23df99' class='xr-section-summary-in' type='checkbox'  checked><label for='section-2fc4a850-2b7e-481f-a388-69485a23df99' class='xr-section-summary' >Coordinates: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>time</span></div><div class='xr-var-dims'>(time)</div><div class='xr-var-dtype'>datetime64[ns]</div><div class='xr-var-preview xr-preview'>2022-01-01 2022-02-01</div><input id='attrs-c32df33d-ba5f-40bb-8feb-7dcf2feba479' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-c32df33d-ba5f-40bb-8feb-7dcf2feba479' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-ce3d5404-4d15-4a4b-8aed-4ec3d0a08d15' class='xr-var-data-in' type='checkbox'><label for='data-ce3d5404-4d15-4a4b-8aed-4ec3d0a08d15' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>time</dd><dt><span>long_name :</span></dt><dd>Time</dd><dt><span>axis :</span></dt><dd>T</dd></dl></div><div class='xr-var-data'><pre>array([&#x27;2022-01-01T00:00:00.000000000&#x27;, &#x27;2022-02-01T00:00:00.000000000&#x27;],
          dtype=&#x27;datetime64[ns]&#x27;)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lon</span></div><div class='xr-var-dims'>(lon)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>0.0 2.5 5.0 ... 352.5 355.0 357.5</div><input id='attrs-e540d80b-b8c3-44cc-b374-dc0d505195da' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-e540d80b-b8c3-44cc-b374-dc0d505195da' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-175ec66b-5576-4e38-9d94-1a78e06fb22f' class='xr-var-data-in' type='checkbox'><label for='data-175ec66b-5576-4e38-9d94-1a78e06fb22f' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>longitude</dd><dt><span>long_name :</span></dt><dd>Longitude</dd><dt><span>units :</span></dt><dd>degrees_east</dd><dt><span>axis :</span></dt><dd>X</dd></dl></div><div class='xr-var-data'><pre>array([  0. ,   2.5,   5. ,   7.5,  10. ,  12.5,  15. ,  17.5,  20. ,  22.5,
            25. ,  27.5,  30. ,  32.5,  35. ,  37.5,  40. ,  42.5,  45. ,  47.5,
            50. ,  52.5,  55. ,  57.5,  60. ,  62.5,  65. ,  67.5,  70. ,  72.5,
            75. ,  77.5,  80. ,  82.5,  85. ,  87.5,  90. ,  92.5,  95. ,  97.5,
           100. , 102.5, 105. , 107.5, 110. , 112.5, 115. , 117.5, 120. , 122.5,
           125. , 127.5, 130. , 132.5, 135. , 137.5, 140. , 142.5, 145. , 147.5,
           150. , 152.5, 155. , 157.5, 160. , 162.5, 165. , 167.5, 170. , 172.5,
           175. , 177.5, 180. , 182.5, 185. , 187.5, 190. , 192.5, 195. , 197.5,
           200. , 202.5, 205. , 207.5, 210. , 212.5, 215. , 217.5, 220. , 222.5,
           225. , 227.5, 230. , 232.5, 235. , 237.5, 240. , 242.5, 245. , 247.5,
           250. , 252.5, 255. , 257.5, 260. , 262.5, 265. , 267.5, 270. , 272.5,
           275. , 277.5, 280. , 282.5, 285. , 287.5, 290. , 292.5, 295. , 297.5,
           300. , 302.5, 305. , 307.5, 310. , 312.5, 315. , 317.5, 320. , 322.5,
           325. , 327.5, 330. , 332.5, 335. , 337.5, 340. , 342.5, 345. , 347.5,
           350. , 352.5, 355. , 357.5], dtype=float32)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lat</span></div><div class='xr-var-dims'>(lat)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>-90.0 -87.5 -85.0 ... 87.5 90.0</div><input id='attrs-778663cf-b1cf-4157-a3c8-3ebd410b3264' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-778663cf-b1cf-4157-a3c8-3ebd410b3264' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-2b9e0b4b-a886-4a00-bbdb-2449e8afc27a' class='xr-var-data-in' type='checkbox'><label for='data-2b9e0b4b-a886-4a00-bbdb-2449e8afc27a' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>latitude</dd><dt><span>long_name :</span></dt><dd>Latitude</dd><dt><span>units :</span></dt><dd>degrees_north</dd><dt><span>axis :</span></dt><dd>Y</dd></dl></div><div class='xr-var-data'><pre>array([-90. , -87.5, -85. , -82.5, -80. , -77.5, -75. , -72.5, -70. , -67.5,
           -65. , -62.5, -60. , -57.5, -55. , -52.5, -50. , -47.5, -45. , -42.5,
           -40. , -37.5, -35. , -32.5, -30. , -27.5, -25. , -22.5, -20. , -17.5,
           -15. , -12.5, -10. ,  -7.5,  -5. ,  -2.5,   0. ,   2.5,   5. ,   7.5,
            10. ,  12.5,  15. ,  17.5,  20. ,  22.5,  25. ,  27.5,  30. ,  32.5,
            35. ,  37.5,  40. ,  42.5,  45. ,  47.5,  50. ,  52.5,  55. ,  57.5,
            60. ,  62.5,  65. ,  67.5,  70. ,  72.5,  75. ,  77.5,  80. ,  82.5,
            85. ,  87.5,  90. ], dtype=float32)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-4a7cc29c-4a5f-4d24-95a2-121b185a47b8' class='xr-section-summary-in' type='checkbox'  checked><label for='section-4a7cc29c-4a5f-4d24-95a2-121b185a47b8' class='xr-section-summary' >Data variables: <span>(2)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>qu</span></div><div class='xr-var-dims'>(time, lat, lon)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>764.1 420.4 ... -2.415e+04</div><input id='attrs-e1a829a2-b593-45f8-8104-1c635b84a3fd' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-e1a829a2-b593-45f8-8104-1c635b84a3fd' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-2a2dd189-8138-4a64-afdc-e7b292e1a42d' class='xr-var-data-in' type='checkbox'><label for='data-2a2dd189-8138-4a64-afdc-e7b292e1a42d' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>long_name :</span></dt><dd>Monthly Mean of Specific Humidity</dd><dt><span>units :</span></dt><dd>grams/kg</dd><dt><span>precision :</span></dt><dd>3</dd><dt><span>var_desc :</span></dt><dd>Specific Humidity</dd><dt><span>level_desc :</span></dt><dd>Pressure Levels</dd><dt><span>statistic :</span></dt><dd>Mean</dd><dt><span>parent_stat :</span></dt><dd>Other</dd><dt><span>dataset :</span></dt><dd>NCEP Reanalysis Derived Products</dd><dt><span>actual_range :</span></dt><dd>[ 0.      34.88718]</dd><dt><span>Vertical integral method :</span></dt><dd>Trenberth-vibeta</dd></dl></div><div class='xr-var-data'><pre>array([[[   764.1305 ,    420.386  ,     41.37965, ...,   1754.9336 ,
               1408.9583 ,   1111.3759 ],
            [  2888.3228 ,   2628.0552 ,   2389.276  , ...,   3665.8916 ,
               3424.9082 ,   3215.754  ],
            [   947.62415,    694.2946 ,    401.24915, ...,   1777.574  ,
               1493.9509 ,   1255.2438 ],
            ...,
            [-10500.327  , -11242.958  , -11988.612  , ...,  -8289.951  ,
              -9007.941  ,  -9734.624  ],
            [-12183.795  , -12402.442  , -12612.091  , ..., -11504.028  ,
             -11724.952  , -11951.933  ],
            [-15247.002  , -15466.363  , -15664.332  , ..., -14401.904  ,
             -14706.968  , -14991.695  ]],

           [[  2536.8816 ,   2174.4268 ,   1812.0328 , ...,   3582.4114 ,
               3247.1133 ,   2892.419  ],
            [  3421.082  ,   3258.8306 ,   3107.3137 , ...,   3943.8455 ,
               3758.8271 ,   3592.8806 ],
            [  3346.2932 ,   3641.9219 ,   3921.0427 , ...,   2589.7036 ,
               2772.7332 ,   3036.336  ],
            ...,
            [ -8941.726  ,  -9802.936  , -10667.026  , ...,  -6543.59   ,
              -7298.8247 ,  -8107.329  ],
            [-17655.908  , -17937.752  , -18217.6    , ..., -16691.25   ,
             -17021.02   , -17340.396  ],
            [-24214.209  , -24232.627  , -24206.156  , ..., -23887.533  ,
             -24046.729  , -24154.074  ]]], dtype=float32)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span>qv</span></div><div class='xr-var-dims'>(time, lat, lon)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>7.884e+03 7.905e+03 ... -1.976e+03</div><input id='attrs-93ccb11c-5a72-4ac7-b1c4-e2630004b4f8' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-93ccb11c-5a72-4ac7-b1c4-e2630004b4f8' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-260133cc-8cb9-4364-ba96-eba8f829bcc6' class='xr-var-data-in' type='checkbox'><label for='data-260133cc-8cb9-4364-ba96-eba8f829bcc6' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>long_name :</span></dt><dd>Monthly Mean of Specific Humidity</dd><dt><span>units :</span></dt><dd>grams/kg</dd><dt><span>precision :</span></dt><dd>3</dd><dt><span>var_desc :</span></dt><dd>Specific Humidity</dd><dt><span>level_desc :</span></dt><dd>Pressure Levels</dd><dt><span>statistic :</span></dt><dd>Mean</dd><dt><span>parent_stat :</span></dt><dd>Other</dd><dt><span>dataset :</span></dt><dd>NCEP Reanalysis Derived Products</dd><dt><span>actual_range :</span></dt><dd>[ 0.      34.88718]</dd><dt><span>Vertical integral method :</span></dt><dd>Trenberth-vibeta</dd></dl></div><div class='xr-var-data'><pre>array([[[ 7883.659  ,  7905.0005 ,  7958.5405 , ...,  7734.329  ,
              7816.0127 ,  7834.132  ],
            [ 5235.9478 ,  5501.0444 ,  5734.6694 , ...,  4427.38   ,
              4702.162  ,  4980.545  ],
            [ 7450.4116 ,  7791.355  ,  8025.6284 , ...,  5602.8    ,
              6343.4473 ,  6962.0586 ],
            ...,
            [-7246.3057 , -7228.243  , -7149.3955 , ..., -6951.0054 ,
             -7099.7163 , -7201.847  ],
            [-4956.352  , -4603.5    , -4242.636  , ..., -5917.206  ,
             -5606.452  , -5287.6064 ],
            [-5470.336  , -4798.7974 , -4126.2026 , ..., -7418.8403 ,
             -6780.4375 , -6127.9463 ]],

           [[ 8228.076  ,  8342.619  ,  8418.245  , ...,  7842.9697 ,
              7988.952  ,  8124.053  ],
            [ 3624.8127 ,  3730.7979 ,  3883.9333 , ...,  3271.8242 ,
              3390.2607 ,  3505.3909 ],
            [ 2831.7595 ,  3149.7505 ,  3397.659  , ...,  1891.5964 ,
              2185.9998 ,  2494.4062 ],
            ...,
            [-5310.676  , -4914.6494 , -4417.6567 , ..., -5789.008  ,
             -5735.0073 , -5571.867  ],
            [-2336.2898 , -1571.1039 ,  -777.90063, ..., -4423.016  ,
             -3761.101  , -3064.675  ],
            [ -919.7678 ,   132.96321,  1190.7288 , ..., -4073.0735 ,
             -3036.5168 , -1975.7177 ]]], dtype=float32)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-01fc6be4-f60d-4e69-aa70-74a3ab64b9dd' class='xr-section-summary-in' type='checkbox'  ><label for='section-01fc6be4-f60d-4e69-aa70-74a3ab64b9dd' class='xr-section-summary' >Indexes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>time</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-971397d8-0d72-45a5-b5ac-9a9565e8f83d' class='xr-index-data-in' type='checkbox'/><label for='index-971397d8-0d72-45a5-b5ac-9a9565e8f83d' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(DatetimeIndex([&#x27;2022-01-01&#x27;, &#x27;2022-02-01&#x27;], dtype=&#x27;datetime64[ns]&#x27;, name=&#x27;time&#x27;, freq=None))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>lon</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-4d2e0838-38e9-46a5-9a88-901dfe6df08f' class='xr-index-data-in' type='checkbox'/><label for='index-4d2e0838-38e9-46a5-9a88-901dfe6df08f' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([  0.0,   2.5,   5.0,   7.5,  10.0,  12.5,  15.0,  17.5,  20.0,  22.5,
           ...
           335.0, 337.5, 340.0, 342.5, 345.0, 347.5, 350.0, 352.5, 355.0, 357.5],
          dtype=&#x27;float32&#x27;, name=&#x27;lon&#x27;, length=144))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>lat</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-8fc67092-b51d-465f-bb1f-b9dffdf79dcf' class='xr-index-data-in' type='checkbox'/><label for='index-8fc67092-b51d-465f-bb1f-b9dffdf79dcf' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([-90.0, -87.5, -85.0, -82.5, -80.0, -77.5, -75.0, -72.5, -70.0, -67.5,
           -65.0, -62.5, -60.0, -57.5, -55.0, -52.5, -50.0, -47.5, -45.0, -42.5,
           -40.0, -37.5, -35.0, -32.5, -30.0, -27.5, -25.0, -22.5, -20.0, -17.5,
           -15.0, -12.5, -10.0,  -7.5,  -5.0,  -2.5,   0.0,   2.5,   5.0,   7.5,
            10.0,  12.5,  15.0,  17.5,  20.0,  22.5,  25.0,  27.5,  30.0,  32.5,
            35.0,  37.5,  40.0,  42.5,  45.0,  47.5,  50.0,  52.5,  55.0,  57.5,
            60.0,  62.5,  65.0,  67.5,  70.0,  72.5,  75.0,  77.5,  80.0,  82.5,
            85.0,  87.5,  90.0],
          dtype=&#x27;float32&#x27;, name=&#x27;lat&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-51eb6374-9ee6-4aae-aeed-4a082b204236' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-51eb6374-9ee6-4aae-aeed-4a082b204236' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 386-387

Extracting the entire layer water vapor flux at mid and low latitudes at the 0th time level.

.. GENERATED FROM PYTHON SOURCE LINES 387-395

.. code-block:: Python


    draw_water_flux = (
        water_flux_top2surface_integral.isel(time=0)
        .thin(lon=3, lat=3)
        .sel(lat=slice(-60, 60))
    )
    draw_pr = pr_data.isel(time=0).sel(lat=slice(-60, 60))








.. GENERATED FROM PYTHON SOURCE LINES 396-423

.. code-block:: Python

    fig, ax = plt.subplots(
        subplot_kw={"projection": ccrs.PlateCarree(central_longitude=180)}
    )

    ax.gridlines(draw_labels=["bottom", "left"], color="grey", alpha=0.5, linestyle="--")
    ax.coastlines(edgecolor="black", linewidths=0.5)

    draw_water_flux.plot.quiver(
        ax=ax,
        u="qu",
        v="qv",
        x="lon",
        y="lat",
        transform=ccrs.PlateCarree(),
        zorder=2,
    )

    draw_pr.plot.contourf(
        ax=ax,
        transform=ccrs.PlateCarree(),
        levels=21,
        cmap="Greens",
        zorder=1,
        cbar_kwargs={"location": "bottom"},
        vmax=20,
    )




.. image-sg:: /auto_gallery_output/images/sphx_glr_plot_geographic_finite_difference_015.png
   :alt: time = 2022-01-01
   :srcset: /auto_gallery_output/images/sphx_glr_plot_geographic_finite_difference_015.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <cartopy.mpl.contour.GeoContourSet object at 0x7f1f979b1660>



.. GENERATED FROM PYTHON SOURCE LINES 424-435

Water Vapor Flux Divergence
--------------------------------------

Water vapor flux divergence represents the convergence and divergence of water vapor. There are also two built-in functions to calculate the results of single-layers and whole-layer integration respectively.

- :py:func:`easyclimate.calc_divergence_watervaporflux <easyclimate.calc_divergence_watervaporflux>`: calculate water vapor flux divergence at each vertical level.

.. math::
  \nabla \left( \frac{1}{g} q \mathbf{V} \right) = \frac{1}{g} \nabla \cdot \left( q \mathbf{V} \right)

- :py:func:`easyclimate.calc_divergence_watervaporflux_top2surface_integral <easyclimate.calc_divergence_watervaporflux_top2surface_integral>`: calculate water vapor flux divergence across the vertical level.

.. GENERATED FROM PYTHON SOURCE LINES 435-451

.. code-block:: Python


    divergence_watervaporflux_top2surface_integral = (
        ecl.calc_divergence_watervaporflux_top2surface_integral(
            specific_humidity_data=q_data,
            u_data=u_data,
            v_data=v_data,
            surface_pressure_data=msl_data,
            surface_pressure_data_units="millibars",
            specific_humidity_data_units="grams/kg",
            vertical_dim="level",
            vertical_dim_units="hPa",
        )
    )

    divergence_watervaporflux_top2surface_integral






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div><svg style="position: absolute; width: 0; height: 0; overflow: hidden">
    <defs>
    <symbol id="icon-database" viewBox="0 0 32 32">
    <path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z"></path>
    <path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    <path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z"></path>
    </symbol>
    <symbol id="icon-file-text2" viewBox="0 0 32 32">
    <path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z"></path>
    <path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    <path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z"></path>
    </symbol>
    </defs>
    </svg>
    <style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
     *
     */

    :root {
      --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));
      --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));
      --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));
      --xr-border-color: var(--jp-border-color2, #e0e0e0);
      --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);
      --xr-background-color: var(--jp-layout-color0, white);
      --xr-background-color-row-even: var(--jp-layout-color1, white);
      --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);
    }

    html[theme="dark"],
    html[data-theme="dark"],
    body[data-theme="dark"],
    body.vscode-dark {
      --xr-font-color0: rgba(255, 255, 255, 1);
      --xr-font-color2: rgba(255, 255, 255, 0.54);
      --xr-font-color3: rgba(255, 255, 255, 0.38);
      --xr-border-color: #1f1f1f;
      --xr-disabled-color: #515151;
      --xr-background-color: #111111;
      --xr-background-color-row-even: #111111;
      --xr-background-color-row-odd: #313131;
    }

    .xr-wrap {
      display: block !important;
      min-width: 300px;
      max-width: 700px;
    }

    .xr-text-repr-fallback {
      /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
      display: none;
    }

    .xr-header {
      padding-top: 6px;
      padding-bottom: 6px;
      margin-bottom: 4px;
      border-bottom: solid 1px var(--xr-border-color);
    }

    .xr-header > div,
    .xr-header > ul {
      display: inline;
      margin-top: 0;
      margin-bottom: 0;
    }

    .xr-obj-type,
    .xr-array-name {
      margin-left: 2px;
      margin-right: 10px;
    }

    .xr-obj-type {
      color: var(--xr-font-color2);
    }

    .xr-sections {
      padding-left: 0 !important;
      display: grid;
      grid-template-columns: 150px auto auto 1fr 0 20px 0 20px;
    }

    .xr-section-item {
      display: contents;
    }

    .xr-section-item input {
      display: inline-block;
      opacity: 0;
      height: 0;
    }

    .xr-section-item input + label {
      color: var(--xr-disabled-color);
    }

    .xr-section-item input:enabled + label {
      cursor: pointer;
      color: var(--xr-font-color2);
    }

    .xr-section-item input:focus + label {
      border: 2px solid var(--xr-font-color0);
    }

    .xr-section-item input:enabled + label:hover {
      color: var(--xr-font-color0);
    }

    .xr-section-summary {
      grid-column: 1;
      color: var(--xr-font-color2);
      font-weight: 500;
    }

    .xr-section-summary > span {
      display: inline-block;
      padding-left: 0.5em;
    }

    .xr-section-summary-in:disabled + label {
      color: var(--xr-font-color2);
    }

    .xr-section-summary-in + label:before {
      display: inline-block;
      content: "►";
      font-size: 11px;
      width: 15px;
      text-align: center;
    }

    .xr-section-summary-in:disabled + label:before {
      color: var(--xr-disabled-color);
    }

    .xr-section-summary-in:checked + label:before {
      content: "▼";
    }

    .xr-section-summary-in:checked + label > span {
      display: none;
    }

    .xr-section-summary,
    .xr-section-inline-details {
      padding-top: 4px;
      padding-bottom: 4px;
    }

    .xr-section-inline-details {
      grid-column: 2 / -1;
    }

    .xr-section-details {
      display: none;
      grid-column: 1 / -1;
      margin-bottom: 5px;
    }

    .xr-section-summary-in:checked ~ .xr-section-details {
      display: contents;
    }

    .xr-array-wrap {
      grid-column: 1 / -1;
      display: grid;
      grid-template-columns: 20px auto;
    }

    .xr-array-wrap > label {
      grid-column: 1;
      vertical-align: top;
    }

    .xr-preview {
      color: var(--xr-font-color3);
    }

    .xr-array-preview,
    .xr-array-data {
      padding: 0 5px !important;
      grid-column: 2;
    }

    .xr-array-data,
    .xr-array-in:checked ~ .xr-array-preview {
      display: none;
    }

    .xr-array-in:checked ~ .xr-array-data,
    .xr-array-preview {
      display: inline-block;
    }

    .xr-dim-list {
      display: inline-block !important;
      list-style: none;
      padding: 0 !important;
      margin: 0;
    }

    .xr-dim-list li {
      display: inline-block;
      padding: 0;
      margin: 0;
    }

    .xr-dim-list:before {
      content: "(";
    }

    .xr-dim-list:after {
      content: ")";
    }

    .xr-dim-list li:not(:last-child):after {
      content: ",";
      padding-right: 5px;
    }

    .xr-has-index {
      font-weight: bold;
    }

    .xr-var-list,
    .xr-var-item {
      display: contents;
    }

    .xr-var-item > div,
    .xr-var-item label,
    .xr-var-item > .xr-var-name span {
      background-color: var(--xr-background-color-row-even);
      margin-bottom: 0;
    }

    .xr-var-item > .xr-var-name:hover span {
      padding-right: 5px;
    }

    .xr-var-list > li:nth-child(odd) > div,
    .xr-var-list > li:nth-child(odd) > label,
    .xr-var-list > li:nth-child(odd) > .xr-var-name span {
      background-color: var(--xr-background-color-row-odd);
    }

    .xr-var-name {
      grid-column: 1;
    }

    .xr-var-dims {
      grid-column: 2;
    }

    .xr-var-dtype {
      grid-column: 3;
      text-align: right;
      color: var(--xr-font-color2);
    }

    .xr-var-preview {
      grid-column: 4;
    }

    .xr-index-preview {
      grid-column: 2 / 5;
      color: var(--xr-font-color2);
    }

    .xr-var-name,
    .xr-var-dims,
    .xr-var-dtype,
    .xr-preview,
    .xr-attrs dt {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      padding-right: 10px;
    }

    .xr-var-name:hover,
    .xr-var-dims:hover,
    .xr-var-dtype:hover,
    .xr-attrs dt:hover {
      overflow: visible;
      width: auto;
      z-index: 1;
    }

    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      display: none;
      background-color: var(--xr-background-color) !important;
      padding-bottom: 5px !important;
    }

    .xr-var-attrs-in:checked ~ .xr-var-attrs,
    .xr-var-data-in:checked ~ .xr-var-data,
    .xr-index-data-in:checked ~ .xr-index-data {
      display: block;
    }

    .xr-var-data > table {
      float: right;
    }

    .xr-var-name span,
    .xr-var-data,
    .xr-index-name div,
    .xr-index-data,
    .xr-attrs {
      padding-left: 25px !important;
    }

    .xr-attrs,
    .xr-var-attrs,
    .xr-var-data,
    .xr-index-data {
      grid-column: 1 / -1;
    }

    dl.xr-attrs {
      padding: 0;
      margin: 0;
      display: grid;
      grid-template-columns: 125px auto;
    }

    .xr-attrs dt,
    .xr-attrs dd {
      padding: 0;
      margin: 0;
      float: left;
      padding-right: 10px;
      width: auto;
    }

    .xr-attrs dt {
      font-weight: normal;
      grid-column: 1;
    }

    .xr-attrs dt:hover span {
      display: inline-block;
      background: var(--xr-background-color);
      padding-right: 10px;
    }

    .xr-attrs dd {
      grid-column: 2;
      white-space: pre-wrap;
      word-break: break-all;
    }

    .xr-icon-database,
    .xr-icon-file-text2,
    .xr-no-icon {
      display: inline-block;
      vertical-align: middle;
      width: 1em;
      height: 1.5em !important;
      stroke-width: 0;
      stroke: currentColor;
      fill: currentColor;
    }
    </style><pre class='xr-text-repr-fallback'>&lt;xarray.DataArray (time: 2, lat: 73, lon: 144)&gt; Size: 168kB
    array([[[-1.47139164e-03,  1.35440456e-03,  2.12101525e-04, ...,
              7.63448784e-04, -1.58517644e-03, -5.63335861e-03],
            [-8.78047936e-10,  2.77973368e-09,  9.07116751e-10, ...,
             -5.38412165e-09, -1.66413833e-09,  3.44718846e-09],
            [ 1.05444328e-08,  9.55497729e-09,  1.08459571e-08, ...,
              3.05369584e-09,  6.10039023e-09,  1.00502167e-08],
            ...,
            [-8.28521914e-09, -7.65947810e-09, -7.18742773e-09, ...,
             -1.11239579e-08, -1.00659209e-08, -8.98731767e-09],
            [ 1.89051734e-09,  2.56174589e-09,  1.98235108e-09, ...,
              1.06464441e-09,  1.55097810e-09,  1.23327180e-09],
            [-7.10217128e-04, -5.94145075e-05,  5.79015291e-05, ...,
              9.31151598e-05, -7.87487129e-05,  5.90775190e-04]],

           [[ 2.85380062e-04, -1.30982061e-04,  6.43684255e-04, ...,
             -5.03268272e-04, -2.95332139e-04,  8.16088380e-04],
            [-1.06686347e-08, -8.79369365e-09, -8.82426665e-09, ...,
             -1.54865663e-08, -1.35132826e-08, -1.08642684e-08],
            [ 1.98332477e-08,  1.98366959e-08,  1.80170149e-08, ...,
              9.48953545e-09,  1.35660861e-08,  1.84950117e-08],
            ...,
            [-1.62302742e-08, -1.57168156e-08, -1.57410230e-08, ...,
             -1.56846938e-08, -1.57971339e-08, -1.63707830e-08],
            [-8.02328376e-09, -9.43031007e-09, -9.74286703e-09, ...,
             -1.01034135e-08, -9.31232781e-09, -9.39057441e-09],
            [ 5.98615347e-05,  1.46057011e-04,  9.44559433e-05, ...,
              1.38476496e-04,  6.39783078e-05, -3.94048910e-04]]])
    Coordinates:
      * time     (time) datetime64[ns] 16B 2022-01-01 2022-02-01
      * lon      (lon) float32 576B 0.0 2.5 5.0 7.5 10.0 ... 350.0 352.5 355.0 357.5
      * lat      (lat) float32 292B -90.0 -87.5 -85.0 -82.5 ... 82.5 85.0 87.5 90.0
    Attributes:
        long_name:                 Monthly Mean of Specific Humidity
        units:                     kg/kg
        precision:                 3
        var_desc:                  Specific Humidity
        level_desc:                Pressure Levels
        statistic:                 Mean
        parent_stat:               Other
        dataset:                   NCEP Reanalysis Derived Products
        actual_range:              [ 0.      34.88718]
        Vertical integral method:  Trenberth-vibeta</pre><div class='xr-wrap' style='display:none'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'></div><ul class='xr-dim-list'><li><span class='xr-has-index'>time</span>: 2</li><li><span class='xr-has-index'>lat</span>: 73</li><li><span class='xr-has-index'>lon</span>: 144</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-bdf2cf8a-260f-4577-a746-4e2e21ed20c7' class='xr-array-in' type='checkbox' checked><label for='section-bdf2cf8a-260f-4577-a746-4e2e21ed20c7' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>-0.001471 0.001354 0.0002121 ... 0.0001385 6.398e-05 -0.000394</span></div><div class='xr-array-data'><pre>array([[[-1.47139164e-03,  1.35440456e-03,  2.12101525e-04, ...,
              7.63448784e-04, -1.58517644e-03, -5.63335861e-03],
            [-8.78047936e-10,  2.77973368e-09,  9.07116751e-10, ...,
             -5.38412165e-09, -1.66413833e-09,  3.44718846e-09],
            [ 1.05444328e-08,  9.55497729e-09,  1.08459571e-08, ...,
              3.05369584e-09,  6.10039023e-09,  1.00502167e-08],
            ...,
            [-8.28521914e-09, -7.65947810e-09, -7.18742773e-09, ...,
             -1.11239579e-08, -1.00659209e-08, -8.98731767e-09],
            [ 1.89051734e-09,  2.56174589e-09,  1.98235108e-09, ...,
              1.06464441e-09,  1.55097810e-09,  1.23327180e-09],
            [-7.10217128e-04, -5.94145075e-05,  5.79015291e-05, ...,
              9.31151598e-05, -7.87487129e-05,  5.90775190e-04]],

           [[ 2.85380062e-04, -1.30982061e-04,  6.43684255e-04, ...,
             -5.03268272e-04, -2.95332139e-04,  8.16088380e-04],
            [-1.06686347e-08, -8.79369365e-09, -8.82426665e-09, ...,
             -1.54865663e-08, -1.35132826e-08, -1.08642684e-08],
            [ 1.98332477e-08,  1.98366959e-08,  1.80170149e-08, ...,
              9.48953545e-09,  1.35660861e-08,  1.84950117e-08],
            ...,
            [-1.62302742e-08, -1.57168156e-08, -1.57410230e-08, ...,
             -1.56846938e-08, -1.57971339e-08, -1.63707830e-08],
            [-8.02328376e-09, -9.43031007e-09, -9.74286703e-09, ...,
             -1.01034135e-08, -9.31232781e-09, -9.39057441e-09],
            [ 5.98615347e-05,  1.46057011e-04,  9.44559433e-05, ...,
              1.38476496e-04,  6.39783078e-05, -3.94048910e-04]]])</pre></div></div></li><li class='xr-section-item'><input id='section-35a952be-b0b4-45df-bffd-85d9addf0df7' class='xr-section-summary-in' type='checkbox'  checked><label for='section-35a952be-b0b4-45df-bffd-85d9addf0df7' class='xr-section-summary' >Coordinates: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>time</span></div><div class='xr-var-dims'>(time)</div><div class='xr-var-dtype'>datetime64[ns]</div><div class='xr-var-preview xr-preview'>2022-01-01 2022-02-01</div><input id='attrs-9c519b45-6897-46be-856f-af2e4e2832c4' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-9c519b45-6897-46be-856f-af2e4e2832c4' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-41f329f9-74a3-4da5-b319-af0dd1ced710' class='xr-var-data-in' type='checkbox'><label for='data-41f329f9-74a3-4da5-b319-af0dd1ced710' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>time</dd><dt><span>long_name :</span></dt><dd>Time</dd><dt><span>axis :</span></dt><dd>T</dd></dl></div><div class='xr-var-data'><pre>array([&#x27;2022-01-01T00:00:00.000000000&#x27;, &#x27;2022-02-01T00:00:00.000000000&#x27;],
          dtype=&#x27;datetime64[ns]&#x27;)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lon</span></div><div class='xr-var-dims'>(lon)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>0.0 2.5 5.0 ... 352.5 355.0 357.5</div><input id='attrs-e28fb76d-5c64-4d21-a633-dc7b24d3778c' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-e28fb76d-5c64-4d21-a633-dc7b24d3778c' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-773b6c12-9f1c-4ce7-b9cc-6da722b778c3' class='xr-var-data-in' type='checkbox'><label for='data-773b6c12-9f1c-4ce7-b9cc-6da722b778c3' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>longitude</dd><dt><span>long_name :</span></dt><dd>Longitude</dd><dt><span>units :</span></dt><dd>degrees_east</dd><dt><span>axis :</span></dt><dd>X</dd></dl></div><div class='xr-var-data'><pre>array([  0. ,   2.5,   5. ,   7.5,  10. ,  12.5,  15. ,  17.5,  20. ,  22.5,
            25. ,  27.5,  30. ,  32.5,  35. ,  37.5,  40. ,  42.5,  45. ,  47.5,
            50. ,  52.5,  55. ,  57.5,  60. ,  62.5,  65. ,  67.5,  70. ,  72.5,
            75. ,  77.5,  80. ,  82.5,  85. ,  87.5,  90. ,  92.5,  95. ,  97.5,
           100. , 102.5, 105. , 107.5, 110. , 112.5, 115. , 117.5, 120. , 122.5,
           125. , 127.5, 130. , 132.5, 135. , 137.5, 140. , 142.5, 145. , 147.5,
           150. , 152.5, 155. , 157.5, 160. , 162.5, 165. , 167.5, 170. , 172.5,
           175. , 177.5, 180. , 182.5, 185. , 187.5, 190. , 192.5, 195. , 197.5,
           200. , 202.5, 205. , 207.5, 210. , 212.5, 215. , 217.5, 220. , 222.5,
           225. , 227.5, 230. , 232.5, 235. , 237.5, 240. , 242.5, 245. , 247.5,
           250. , 252.5, 255. , 257.5, 260. , 262.5, 265. , 267.5, 270. , 272.5,
           275. , 277.5, 280. , 282.5, 285. , 287.5, 290. , 292.5, 295. , 297.5,
           300. , 302.5, 305. , 307.5, 310. , 312.5, 315. , 317.5, 320. , 322.5,
           325. , 327.5, 330. , 332.5, 335. , 337.5, 340. , 342.5, 345. , 347.5,
           350. , 352.5, 355. , 357.5], dtype=float32)</pre></div></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lat</span></div><div class='xr-var-dims'>(lat)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>-90.0 -87.5 -85.0 ... 87.5 90.0</div><input id='attrs-3bf819e1-afe6-4398-a78c-c10bdf708cd2' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-3bf819e1-afe6-4398-a78c-c10bdf708cd2' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-66706569-826f-4bb1-9050-2523f324fc5c' class='xr-var-data-in' type='checkbox'><label for='data-66706569-826f-4bb1-9050-2523f324fc5c' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>latitude</dd><dt><span>long_name :</span></dt><dd>Latitude</dd><dt><span>units :</span></dt><dd>degrees_north</dd><dt><span>axis :</span></dt><dd>Y</dd></dl></div><div class='xr-var-data'><pre>array([-90. , -87.5, -85. , -82.5, -80. , -77.5, -75. , -72.5, -70. , -67.5,
           -65. , -62.5, -60. , -57.5, -55. , -52.5, -50. , -47.5, -45. , -42.5,
           -40. , -37.5, -35. , -32.5, -30. , -27.5, -25. , -22.5, -20. , -17.5,
           -15. , -12.5, -10. ,  -7.5,  -5. ,  -2.5,   0. ,   2.5,   5. ,   7.5,
            10. ,  12.5,  15. ,  17.5,  20. ,  22.5,  25. ,  27.5,  30. ,  32.5,
            35. ,  37.5,  40. ,  42.5,  45. ,  47.5,  50. ,  52.5,  55. ,  57.5,
            60. ,  62.5,  65. ,  67.5,  70. ,  72.5,  75. ,  77.5,  80. ,  82.5,
            85. ,  87.5,  90. ], dtype=float32)</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-7a1b4687-8ca0-4203-b7f4-56ce8c569624' class='xr-section-summary-in' type='checkbox'  ><label for='section-7a1b4687-8ca0-4203-b7f4-56ce8c569624' class='xr-section-summary' >Indexes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-index-name'><div>time</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-2ca7e4dd-fe96-4f80-a340-de97108d2a04' class='xr-index-data-in' type='checkbox'/><label for='index-2ca7e4dd-fe96-4f80-a340-de97108d2a04' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(DatetimeIndex([&#x27;2022-01-01&#x27;, &#x27;2022-02-01&#x27;], dtype=&#x27;datetime64[ns]&#x27;, name=&#x27;time&#x27;, freq=None))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>lon</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-fb6a768a-b7cc-4a70-b746-c4f09c08ec38' class='xr-index-data-in' type='checkbox'/><label for='index-fb6a768a-b7cc-4a70-b746-c4f09c08ec38' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([  0.0,   2.5,   5.0,   7.5,  10.0,  12.5,  15.0,  17.5,  20.0,  22.5,
           ...
           335.0, 337.5, 340.0, 342.5, 345.0, 347.5, 350.0, 352.5, 355.0, 357.5],
          dtype=&#x27;float32&#x27;, name=&#x27;lon&#x27;, length=144))</pre></div></li><li class='xr-var-item'><div class='xr-index-name'><div>lat</div></div><div class='xr-index-preview'>PandasIndex</div><input type='checkbox' disabled/><label></label><input id='index-6f7460f1-174f-477d-8ced-ede3a8a95bb3' class='xr-index-data-in' type='checkbox'/><label for='index-6f7460f1-174f-477d-8ced-ede3a8a95bb3' title='Show/Hide index repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-index-data'><pre>PandasIndex(Index([-90.0, -87.5, -85.0, -82.5, -80.0, -77.5, -75.0, -72.5, -70.0, -67.5,
           -65.0, -62.5, -60.0, -57.5, -55.0, -52.5, -50.0, -47.5, -45.0, -42.5,
           -40.0, -37.5, -35.0, -32.5, -30.0, -27.5, -25.0, -22.5, -20.0, -17.5,
           -15.0, -12.5, -10.0,  -7.5,  -5.0,  -2.5,   0.0,   2.5,   5.0,   7.5,
            10.0,  12.5,  15.0,  17.5,  20.0,  22.5,  25.0,  27.5,  30.0,  32.5,
            35.0,  37.5,  40.0,  42.5,  45.0,  47.5,  50.0,  52.5,  55.0,  57.5,
            60.0,  62.5,  65.0,  67.5,  70.0,  72.5,  75.0,  77.5,  80.0,  82.5,
            85.0,  87.5,  90.0],
          dtype=&#x27;float32&#x27;, name=&#x27;lat&#x27;))</pre></div></li></ul></div></li><li class='xr-section-item'><input id='section-55ca5cfe-49b3-4d27-b888-797af84658ea' class='xr-section-summary-in' type='checkbox'  ><label for='section-55ca5cfe-49b3-4d27-b888-797af84658ea' class='xr-section-summary' >Attributes: <span>(10)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>long_name :</span></dt><dd>Monthly Mean of Specific Humidity</dd><dt><span>units :</span></dt><dd>kg/kg</dd><dt><span>precision :</span></dt><dd>3</dd><dt><span>var_desc :</span></dt><dd>Specific Humidity</dd><dt><span>level_desc :</span></dt><dd>Pressure Levels</dd><dt><span>statistic :</span></dt><dd>Mean</dd><dt><span>parent_stat :</span></dt><dd>Other</dd><dt><span>dataset :</span></dt><dd>NCEP Reanalysis Derived Products</dd><dt><span>actual_range :</span></dt><dd>[ 0.      34.88718]</dd><dt><span>Vertical integral method :</span></dt><dd>Trenberth-vibeta</dd></dl></div></li></ul></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 452-453

Extracting the entire layer water vapor flux at mid and low latitudes at the 0th time level.

.. GENERATED FROM PYTHON SOURCE LINES 453-458

.. code-block:: Python


    draw_data = divergence_watervaporflux_top2surface_integral.isel(time=0).sel(
        lat=slice(-60, 60)
    )








.. GENERATED FROM PYTHON SOURCE LINES 460-471

.. code-block:: Python


    fig, ax = plt.subplots(
        subplot_kw={"projection": ccrs.PlateCarree(central_longitude=180)}
    )

    ax.gridlines(draw_labels=["bottom", "left"], color="grey", alpha=0.5, linestyle="--")
    ax.coastlines(edgecolor="black", linewidths=0.5)

    draw_data.plot.contourf(
        ax=ax, transform=ccrs.PlateCarree(), cbar_kwargs={"location": "bottom"}, levels=21
    )



.. image-sg:: /auto_gallery_output/images/sphx_glr_plot_geographic_finite_difference_016.png
   :alt: time = 2022-01-01
   :srcset: /auto_gallery_output/images/sphx_glr_plot_geographic_finite_difference_016.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <cartopy.mpl.contour.GeoContourSet object at 0x7f1f978b76a0>




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 19.864 seconds)


.. _sphx_glr_download_auto_gallery_output_plot_geographic_finite_difference.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_geographic_finite_difference.ipynb <plot_geographic_finite_difference.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_geographic_finite_difference.py <plot_geographic_finite_difference.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_geographic_finite_difference.zip <plot_geographic_finite_difference.zip>`
